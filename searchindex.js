Search.setIndex({"docnames": ["README", "contributing", "docker", "examples", "examples.colors", "examples.curvature", "examples.integrate", "examples.nearest", "examples.quick_start", "examples.ray", "examples.section", "examples.shortest", "examples.texture", "index", "install", "requirements", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.openctm", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.integrate", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.interfaces.scad", "trimesh.interfaces.vhacd", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "filenames": ["README.rst", "contributing.md", "docker.md", "examples.md", "examples.colors.rst", "examples.curvature.rst", "examples.integrate.rst", "examples.nearest.rst", "examples.quick_start.rst", "examples.ray.rst", "examples.section.rst", "examples.shortest.rst", "examples.texture.rst", "index.rst", "install.md", "requirements.txt", "trimesh.rst", "trimesh.base.rst", "trimesh.boolean.rst", "trimesh.bounds.rst", "trimesh.caching.rst", "trimesh.collision.rst", "trimesh.comparison.rst", "trimesh.constants.rst", "trimesh.convex.rst", "trimesh.creation.rst", "trimesh.curvature.rst", "trimesh.decomposition.rst", "trimesh.exceptions.rst", "trimesh.exchange.rst", "trimesh.exchange.binvox.rst", "trimesh.exchange.dae.rst", "trimesh.exchange.export.rst", "trimesh.exchange.gltf.rst", "trimesh.exchange.load.rst", "trimesh.exchange.misc.rst", "trimesh.exchange.obj.rst", "trimesh.exchange.off.rst", "trimesh.exchange.openctm.rst", "trimesh.exchange.ply.rst", "trimesh.exchange.stl.rst", "trimesh.exchange.threedxml.rst", "trimesh.exchange.threemf.rst", "trimesh.exchange.urdf.rst", "trimesh.exchange.xaml.rst", "trimesh.exchange.xyz.rst", "trimesh.geometry.rst", "trimesh.graph.rst", "trimesh.grouping.rst", "trimesh.inertia.rst", "trimesh.integrate.rst", "trimesh.interfaces.rst", "trimesh.interfaces.blender.rst", "trimesh.interfaces.generic.rst", "trimesh.interfaces.gmsh.rst", "trimesh.interfaces.scad.rst", "trimesh.interfaces.vhacd.rst", "trimesh.intersections.rst", "trimesh.interval.rst", "trimesh.nsphere.rst", "trimesh.parent.rst", "trimesh.path.rst", "trimesh.path.arc.rst", "trimesh.path.creation.rst", "trimesh.path.curve.rst", "trimesh.path.entities.rst", "trimesh.path.exchange.rst", "trimesh.path.exchange.dxf.rst", "trimesh.path.exchange.export.rst", "trimesh.path.exchange.load.rst", "trimesh.path.exchange.misc.rst", "trimesh.path.exchange.svg_io.rst", "trimesh.path.intersections.rst", "trimesh.path.packing.rst", "trimesh.path.path.rst", "trimesh.path.polygons.rst", "trimesh.path.raster.rst", "trimesh.path.repair.rst", "trimesh.path.segments.rst", "trimesh.path.simplify.rst", "trimesh.path.traversal.rst", "trimesh.path.util.rst", "trimesh.permutate.rst", "trimesh.points.rst", "trimesh.poses.rst", "trimesh.primitives.rst", "trimesh.proximity.rst", "trimesh.ray.rst", "trimesh.ray.ray_pyembree.rst", "trimesh.ray.ray_triangle.rst", "trimesh.ray.ray_util.rst", "trimesh.registration.rst", "trimesh.remesh.rst", "trimesh.rendering.rst", "trimesh.repair.rst", "trimesh.resolvers.rst", "trimesh.resources.rst", "trimesh.sample.rst", "trimesh.scene.rst", "trimesh.scene.cameras.rst", "trimesh.scene.lighting.rst", "trimesh.scene.scene.rst", "trimesh.scene.transforms.rst", "trimesh.schemas.rst", "trimesh.smoothing.rst", "trimesh.transformations.rst", "trimesh.triangles.rst", "trimesh.units.rst", "trimesh.util.rst", "trimesh.version.rst", "trimesh.viewer.rst", "trimesh.viewer.notebook.rst", "trimesh.viewer.trackball.rst", "trimesh.viewer.widget.rst", "trimesh.viewer.windowed.rst", "trimesh.visual.rst", "trimesh.visual.base.rst", "trimesh.visual.color.rst", "trimesh.visual.material.rst", "trimesh.visual.objects.rst", "trimesh.visual.texture.rst", "trimesh.voxel.rst", "trimesh.voxel.base.rst", "trimesh.voxel.creation.rst", "trimesh.voxel.encoding.rst", "trimesh.voxel.morphology.rst", "trimesh.voxel.ops.rst", "trimesh.voxel.runlength.rst", "trimesh.voxel.transforms.rst"], "titles": ["Basic Installation", "Contributing To Trimesh", "Writing Docker Images", "Examples", "colors", "curvature", "integrate", "nearest", "quick_start", "ray", "section", "shortest", "texture", "Basic Installation", "Installation", "&lt;no title&gt;", "trimesh", "trimesh.base", "trimesh.boolean", "trimesh.bounds", "trimesh.caching", "trimesh.collision", "trimesh.comparison", "trimesh.constants", "trimesh.convex", "trimesh.creation", "trimesh.curvature", "trimesh.decomposition", "trimesh.exceptions", "trimesh.exchange", "trimesh.exchange.binvox", "trimesh.exchange.dae", "trimesh.exchange.export", "trimesh.exchange.gltf", "trimesh.exchange.load", "trimesh.exchange.misc", "trimesh.exchange.obj", "trimesh.exchange.off", "trimesh.exchange.openctm", "trimesh.exchange.ply", "trimesh.exchange.stl", "trimesh.exchange.threedxml", "trimesh.exchange.threemf", "trimesh.exchange.urdf", "trimesh.exchange.xaml", "trimesh.exchange.xyz", "trimesh.geometry", "trimesh.graph", "trimesh.grouping", "trimesh.inertia", "trimesh.integrate", "trimesh.interfaces", "trimesh.interfaces.blender", "trimesh.interfaces.generic", "trimesh.interfaces.gmsh", "trimesh.interfaces.scad", "trimesh.interfaces.vhacd", "trimesh.intersections", "trimesh.interval", "trimesh.nsphere", "trimesh.parent", "trimesh.path", "trimesh.path.arc", "trimesh.path.creation", "trimesh.path.curve", "trimesh.path.entities", "trimesh.path.exchange", "trimesh.path.exchange.dxf", "trimesh.path.exchange.export", "trimesh.path.exchange.load", "trimesh.path.exchange.misc", "trimesh.path.exchange.svg_io", "trimesh.path.intersections", "trimesh.path.packing", "trimesh.path.path", "trimesh.path.polygons", "trimesh.path.raster", "trimesh.path.repair", "trimesh.path.segments", "trimesh.path.simplify", "trimesh.path.traversal", "trimesh.path.util", "trimesh.permutate", "trimesh.points", "trimesh.poses", "trimesh.primitives", "trimesh.proximity", "trimesh.ray", "trimesh.ray.ray_pyembree", "trimesh.ray.ray_triangle", "trimesh.ray.ray_util", "trimesh.registration", "trimesh.remesh", "trimesh.rendering", "trimesh.repair", "trimesh.resolvers", "trimesh.resources", "trimesh.sample", "trimesh.scene", "trimesh.scene.cameras", "trimesh.scene.lighting", "trimesh.scene.scene", "trimesh.scene.transforms", "trimesh.schemas", "trimesh.smoothing", "trimesh.transformations", "trimesh.triangles", "trimesh.units", "trimesh.util", "trimesh.version", "trimesh.viewer", "trimesh.viewer.notebook", "trimesh.viewer.trackball", "trimesh.viewer.widget", "trimesh.viewer.windowed", "trimesh.visual", "trimesh.visual.base", "trimesh.visual.color", "trimesh.visual.material", "trimesh.visual.objects", "trimesh.visual.texture", "trimesh.voxel", "trimesh.voxel.base", "trimesh.voxel.creation", "trimesh.voxel.encoding", "trimesh.voxel.morphology", "trimesh.voxel.ops", "trimesh.voxel.runlength", "trimesh.voxel.transforms"], "terms": {"pure": [0, 13, 14, 16, 30, 46, 70], "python": [0, 1, 2, 13, 14, 16, 17, 25, 42, 47, 99, 105, 108, 110, 114, 127], "2": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 24, 25, 26, 30, 33, 46, 47, 48, 49, 50, 54, 57, 58, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 89, 92, 93, 98, 99, 100, 101, 104, 105, 106, 108, 110, 112, 114, 115, 117, 118, 120, 123, 124, 127], "7": [0, 1, 6, 8, 9, 10, 11, 13, 15, 16, 17, 22, 42, 46, 48, 50, 54, 93, 105, 108, 127], "3": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 24, 25, 26, 30, 35, 39, 40, 42, 46, 47, 48, 49, 50, 57, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 97, 98, 99, 101, 102, 105, 106, 108, 112, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128], "5": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 25, 42, 46, 48, 50, 61, 63, 64, 71, 74, 75, 78, 104, 105, 108, 127], "load": [0, 3, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 61, 66, 67, 70, 71, 83, 93, 95, 96, 98, 102, 110, 111], "triangular": [0, 13, 16, 17, 25, 46, 92, 94], "an": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 34, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 57, 59, 60, 61, 65, 67, 70, 71, 73, 74, 75, 77, 78, 83, 85, 89, 92, 93, 95, 98, 100, 101, 102, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 124, 125, 126, 127], "emphasi": [0, 13, 16], "watertight": [0, 8, 13, 16, 17, 24, 25, 47, 75, 83, 84, 92, 94, 108, 110, 114, 123], "surfac": [0, 3, 6, 7, 9, 13, 16, 17, 22, 24, 26, 50, 54, 70, 82, 84, 85, 86, 88, 89, 91, 92, 97, 104, 106, 108, 121, 122, 125, 126], "The": [0, 1, 2, 9, 13, 14, 16, 17, 19, 21, 22, 23, 25, 26, 30, 31, 34, 43, 46, 47, 48, 54, 58, 60, 63, 65, 67, 74, 75, 78, 83, 84, 85, 86, 91, 92, 95, 98, 100, 101, 102, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 121, 122, 126, 128], "goal": [0, 13, 16, 115], "provid": [0, 2, 13, 14, 16, 17, 20, 21, 22, 30, 33, 49, 55, 57, 75, 86, 95, 108, 114, 121, 122, 124, 127], "full": [0, 13, 14, 16, 17, 47, 61, 74, 95, 102, 104], "well": [0, 13, 14, 16, 17, 21, 25, 65, 77, 78, 91, 94, 98, 101, 105, 108], "test": [0, 1, 2, 9, 11, 13, 20, 24, 57, 61, 74, 75, 88, 89], "object": [0, 3, 7, 8, 10, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 53, 55, 57, 60, 61, 67, 68, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128], "allow": [0, 13, 16, 20, 36, 48, 54, 73, 75, 83, 91, 94, 98, 101, 102, 108, 110, 113, 117], "easi": [0, 2, 13, 14, 16, 54], "manipul": [0, 13, 14, 16, 112], "analysi": [0, 13, 14, 16, 91], "style": [0, 4, 7, 8, 9, 10, 11, 12, 13, 16], "polygon": [0, 10, 13, 14, 16, 17, 24, 25, 30, 34, 46, 57, 61, 69, 70, 73, 74, 85, 98, 101, 108], "shape": [0, 1, 6, 8, 10, 12, 13, 14, 16, 17, 25, 26, 29, 30, 34, 46, 61, 69, 70, 73, 74, 75, 83, 84, 85, 91, 100, 105, 108, 110, 113, 120, 121, 122, 124, 127], "api": [0, 14, 88, 105, 110, 113], "mostli": [0, 13], "stabl": [0, 13, 16, 17, 55, 84, 105], "reli": [0, 13, 47], "guarante": [0, 13, 16, 17, 80, 86], "specif": [0, 13, 16, 17, 33, 65, 80, 91, 95, 124], "version": [0, 2, 8, 13, 16, 17, 47, 54, 58, 61, 62, 64, 65, 74, 75, 76, 80, 82, 95, 105, 108, 115, 117, 121, 122], "you": [0, 1, 2, 13, 14, 16, 20, 25, 29, 57, 65, 75, 83, 85, 89, 95, 110, 113, 114], "plan": [0, 1, 13], "deploi": [0, 13], "someth": [0, 1, 13, 64, 110, 113], "pull": [0, 1, 13], "request": [0, 1, 8, 13, 14, 16, 28, 34, 97, 98, 101], "ar": [0, 1, 2, 3, 8, 10, 13, 14, 16, 17, 19, 20, 21, 23, 26, 27, 28, 30, 39, 46, 47, 48, 57, 58, 59, 60, 61, 63, 65, 67, 72, 74, 75, 78, 79, 80, 83, 84, 85, 89, 91, 92, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 124, 126, 127], "appreci": [0, 13], "respond": [0, 13], "promptli": [0, 13], "If": [0, 1, 2, 13, 14, 16, 17, 20, 21, 23, 25, 26, 30, 33, 34, 36, 39, 45, 46, 47, 48, 49, 57, 58, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 107, 108, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 127], "d": [0, 1, 13, 14, 16, 20, 24, 46, 48, 59, 62, 64, 65, 72, 74, 79, 80, 83, 92, 107, 108, 117, 120, 126], "like": [0, 1, 2, 10, 13, 14, 16, 20, 22, 24, 25, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 67, 68, 80, 83, 95, 96, 98, 100, 101, 105, 107, 108, 110, 113, 114, 115, 119, 120, 121, 122], "contribut": 0, "here": [0, 1, 13, 14, 16, 17, 19, 23, 33, 47, 57], "up": [0, 1, 13, 16, 17, 25, 47, 48, 54, 61, 65, 74, 80, 92, 98, 101, 112], "date": [0, 10, 13], "list": [0, 1, 2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 36, 39, 46, 47, 48, 54, 55, 56, 57, 59, 61, 65, 69, 70, 73, 74, 75, 79, 80, 83, 84, 86, 88, 89, 91, 93, 95, 98, 99, 100, 101, 102, 105, 106, 108, 110, 113, 114, 115, 117, 118, 119, 121, 122, 126, 127], "potenti": [0, 13, 16, 17, 47], "enhanc": [0, 13], "although": [0, 13, 54], "thing": [0, 1, 2, 13, 14, 16, 17, 20, 28, 47, 110, 113, 114], "also": [0, 1, 2, 8, 10, 13, 14, 16, 17, 30, 46, 48, 57, 61, 65, 74, 75, 80, 91, 98, 100, 101, 105, 108], "welcom": [0, 1, 13], "": [0, 1, 2, 8, 13, 14, 21, 30, 39, 46, 54, 61, 72, 73, 74, 75, 76, 85, 91, 98, 99, 100, 105, 106, 110, 112, 113, 127], "develop": [0, 13, 105], "guid": [0, 2, 13, 105, 108], "keep": [0, 8, 13, 16, 17, 25, 98, 99, 106, 108, 110, 113, 114], "core": [0, 13, 16, 17, 30, 91], "thu": [0, 13, 104], "onli": [0, 1, 3, 11, 13, 14, 16, 17, 20, 24, 26, 30, 32, 34, 39, 47, 48, 54, 57, 61, 65, 67, 71, 74, 75, 79, 80, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 102, 108, 110, 113, 117, 121, 122, 124, 127], "hard": [0, 13], "depend": [0, 2, 13, 16, 17, 22, 28, 73, 100, 106, 110, 113], "numpi": [0, 1, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 20, 30, 35, 39, 46, 48, 50, 93, 105, 108, 115, 117, 121, 122, 124, 126, 127], "other": [0, 1, 2, 13, 14, 16, 17, 18, 25, 33, 34, 36, 47, 61, 62, 74, 83, 91, 97, 98, 101, 103, 105, 108, 110, 113, 115, 116, 117, 118, 120], "packag": [0, 13, 43, 54, 88, 105, 108], "add": [0, 1, 13, 16, 17, 21, 39, 48, 67, 82, 98, 101, 102, 108, 110, 114, 115, 118, 123, 125], "function": [0, 1, 13, 14, 16, 17, 20, 22, 25, 28, 30, 33, 39, 47, 48, 49, 50, 55, 57, 59, 61, 65, 74, 82, 83, 91, 92, 93, 105, 106, 108, 110, 113, 114, 115, 117, 121, 122, 126, 127], "requir": [0, 2, 10, 13, 14, 16, 17, 30, 69, 75, 78, 83, 106, 107, 108, 110, 114, 127], "For": [0, 13, 16, 17, 26, 28, 31, 34, 42, 47, 48, 54, 62, 64, 75, 77, 78, 84, 86, 97, 106, 108, 127], "easiest": [0, 13], "just": [0, 1, 2, 13, 16, 17, 31, 57, 65, 83, 84, 94, 110, 113, 117, 127], "pip": [0, 1, 13, 14, 16, 17, 20, 25, 54], "gener": [0, 2, 3, 7, 13, 14, 16, 17, 20, 47, 48, 51, 54, 56, 61, 65, 70, 74, 75, 80, 91, 98, 99, 100, 101, 105, 108, 117, 125, 126], "cleanli": [0, 8, 13, 14, 16, 17, 102], "window": [0, 8, 13, 14, 16, 17, 30, 61, 74, 83, 98, 101, 110, 112, 113], "linux": [0, 1, 13, 14, 114], "osx": [0, 13, 114], "minim": [0, 2, 13, 19, 59, 83, 91], "mani": [0, 1, 13, 16, 17, 25, 48, 58, 61, 63, 74, 75, 78, 91, 108, 110, 114, 120], "support": [0, 10, 13, 14, 16, 17, 30, 35, 69, 83, 98, 99, 100, 108, 121, 122], "stl": [0, 6, 8, 10, 13, 14, 16, 17, 29, 32, 34, 53, 98, 101], "ply": [0, 7, 13, 14, 16, 17, 29, 30, 34], "gltf": [0, 13, 14, 16, 29, 102, 110, 111, 118], "glb": [0, 13, 14, 16, 17, 33, 110, 111], "arrai": [0, 1, 5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 19, 20, 22, 30, 33, 35, 39, 46, 47, 48, 71, 73, 74, 83, 86, 89, 91, 92, 93, 99, 102, 104, 105, 108, 112, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127], "more": [0, 2, 13, 16, 17, 30, 48, 49, 54, 75, 79, 86, 91, 98, 101, 105, 106, 108, 115, 117, 119, 124], "avail": [0, 2, 3, 8, 10, 13, 14, 16, 17, 18, 20, 30, 34, 95, 108, 123, 125], "when": [0, 1, 2, 8, 13, 14, 16, 17, 20, 22, 23, 28, 30, 57, 73, 74, 78, 91, 97, 98, 101, 102, 106, 110, 113, 118, 123, 127], "soft": [0, 13, 14, 28], "includ": [0, 2, 13, 16, 17, 25, 26, 30, 33, 36, 37, 39, 48, 60, 61, 63, 67, 74, 78, 88, 98, 101, 102, 103, 105, 106, 108, 110, 114, 115, 124, 127, 128], "convex": [0, 8, 13, 14, 16, 17, 21, 26, 27, 43, 56, 59, 75, 83, 94, 98, 101], "hull": [0, 8, 13, 14, 16, 17, 24, 59, 75, 83, 98, 101], "scipi": [0, 13, 14, 16, 17, 19, 26, 46, 47, 59, 64, 74, 83, 91, 104, 124, 125], "graph": [0, 3, 11, 13, 14, 16, 17, 60, 61, 65, 74, 80, 83, 98, 101, 102, 105, 121, 122], "oper": [0, 1, 13, 14, 16, 17, 18, 20, 25, 30, 39, 47, 48, 52, 55, 57, 74, 83, 85, 102, 104, 110, 114, 124, 125, 126, 127], "networkx": [0, 11, 13, 14, 16, 17, 47, 61, 74, 75, 80, 102], "faster": [0, 1, 13, 14, 25, 30, 48, 92, 105, 108], "rai": [0, 1, 13, 14, 16, 86, 98, 99, 101], "queri": [0, 3, 7, 9, 11, 13, 14, 16, 17, 20, 21, 26, 75, 83, 86, 88, 89, 108, 121, 122], "pyembre": [0, 13, 16, 17, 88], "vector": [0, 1, 9, 13, 16, 17, 22, 25, 34, 40, 46, 48, 49, 57, 58, 61, 62, 63, 64, 65, 72, 74, 75, 76, 77, 78, 83, 85, 88, 89, 93, 98, 99, 101, 105, 106, 108], "path": [0, 3, 11, 13, 14, 16, 17, 20, 23, 25, 30, 34, 39, 43, 47, 85, 93, 95, 96, 102, 108, 114], "handl": [0, 13, 14, 25, 28, 34, 46, 61, 108, 110, 114, 115, 127], "rtree": [0, 13, 14, 16, 17, 89, 106, 108], "xml": [0, 10, 13, 14, 71], "3dxml": [0, 13, 41], "xaml": [0, 4, 13, 16, 29], "3mf": [0, 13, 42], "lxml": [0, 13, 14, 41], "preview": [0, 8, 13, 110, 114, 121, 122], "pyglet": [0, 8, 13, 14, 16, 17, 93, 98, 101, 110, 113, 114], "cach": [0, 13, 14, 16, 17, 47, 57, 83, 124, 128], "check": [0, 1, 9, 10, 13, 14, 16, 17, 19, 20, 21, 23, 24, 48, 49, 54, 57, 58, 59, 61, 65, 74, 75, 88, 89, 94, 106, 108, 110, 111, 113, 114, 115, 120, 127], "xxhash": [0, 13, 14, 20], "etc": [0, 1, 13, 16, 17, 34, 55, 59, 61, 65, 74, 80, 93, 95, 98, 101, 108, 110, 114], "To": [0, 13, 20, 108], "further": [0, 13, 30], "inform": [0, 13, 16, 17, 21, 23, 54, 65, 71, 100, 102, 115, 117, 118, 120], "advanc": [0, 13, 48], "document": [0, 13, 14, 16, 17, 23, 30, 105, 106, 124], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 16, 17, 33, 46, 47, 48, 50, 65, 99, 105, 106, 108, 110, 113, 124, 127], "from": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 16, 17, 19, 20, 21, 23, 24, 25, 30, 33, 34, 36, 38, 39, 40, 41, 44, 46, 47, 48, 49, 54, 57, 58, 59, 60, 65, 67, 71, 72, 73, 75, 78, 79, 83, 84, 85, 86, 91, 95, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 119, 120, 124, 128], "file": [0, 1, 2, 8, 10, 13, 14, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 61, 67, 68, 69, 71, 74, 83, 95, 96, 98, 101, 103, 105, 108, 110, 114, 118, 121, 122], "color": [0, 7, 8, 10, 13, 14, 16, 17, 25, 36, 39, 43, 45, 61, 65, 74, 83, 93, 94, 97, 98, 100, 108, 110, 114, 115, 118, 119, 120, 121, 122, 126], "its": [0, 7, 8, 13, 16, 17, 20, 24, 61, 74, 75, 83, 85, 98, 100, 101, 113, 121, 122, 126, 127], "face": [0, 1, 3, 4, 6, 8, 9, 13, 16, 17, 21, 22, 24, 25, 26, 35, 36, 39, 40, 46, 47, 57, 61, 70, 74, 75, 78, 82, 85, 86, 88, 89, 91, 92, 93, 94, 97, 104, 106, 108, 110, 114, 115, 117, 119, 120], "nice": [0, 1, 13, 14, 16, 17, 19, 47, 92, 110, 111, 126], "ipython": [0, 1, 3, 13, 110, 111], "notebook": [0, 3, 8, 13, 16, 98, 101, 110], "out": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 24, 46, 48, 50, 89, 94, 98, 101, 105, 108, 113], "cross": [0, 3, 10, 13, 16, 17, 49, 72, 106], "section": [0, 13, 16, 17, 23, 25, 39, 49, 57, 63, 65, 85, 102], "possibli": [0, 13, 108, 121, 122], "integr": [0, 13, 16, 17, 30], "over": [0, 13, 14, 16, 17, 50, 63, 73, 84, 94, 115, 117], "import": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 28, 29, 54, 91, 108], "np": [0, 1, 5, 7, 8, 9, 10, 11, 13, 16, 17, 20, 33, 47, 48, 80, 83, 85, 99, 105, 108, 117, 124, 126, 127], "attach": [0, 13, 102, 108, 110, 113], "logger": [0, 13, 108], "so": [0, 1, 2, 9, 13, 16, 17, 19, 25, 28, 39, 55, 57, 60, 61, 65, 74, 75, 80, 83, 98, 101, 108, 110, 113, 114, 120, 123], "messag": [0, 1, 13, 23, 28, 61, 74, 79], "print": [0, 1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 41, 61, 74, 79, 110, 114], "consol": [0, 13], "util": [0, 1, 13, 16, 35, 50, 57, 61, 95, 127], "attach_to_log": [0, 1, 13, 16, 108], "creat": [0, 1, 7, 9, 11, 13, 16, 17, 20, 21, 24, 25, 28, 30, 33, 57, 61, 63, 73, 74, 79, 85, 89, 94, 98, 99, 101, 102, 106, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125], "exist": [0, 13, 16, 17, 39, 47, 57, 92, 94, 98, 101, 108, 110, 113, 114, 127], "vertex": [0, 1, 3, 11, 13, 16, 17, 23, 24, 25, 26, 33, 36, 39, 46, 47, 48, 60, 61, 65, 67, 70, 74, 75, 78, 80, 82, 83, 86, 91, 92, 93, 104, 106, 108, 110, 113, 114, 115, 117, 118, 119, 120], "data": [0, 1, 8, 13, 16, 17, 20, 21, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 54, 68, 69, 71, 74, 85, 91, 92, 95, 96, 102, 105, 108, 115, 117, 118, 120, 121, 122, 124, 126, 127], "vertic": [0, 1, 3, 5, 8, 10, 11, 13, 16, 17, 19, 23, 24, 25, 26, 35, 36, 39, 40, 46, 47, 48, 57, 59, 61, 65, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 91, 92, 94, 98, 101, 104, 106, 108, 115, 117, 120], "0": [0, 1, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 19, 22, 25, 26, 30, 33, 42, 43, 46, 47, 48, 52, 57, 61, 62, 63, 64, 65, 67, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 91, 92, 98, 99, 100, 104, 105, 106, 108, 112, 115, 117, 118, 121, 122, 124, 125, 126, 127], "1": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 22, 23, 24, 25, 30, 33, 43, 46, 47, 48, 50, 54, 61, 62, 64, 65, 67, 71, 72, 73, 74, 75, 76, 78, 80, 83, 84, 88, 89, 91, 92, 98, 99, 104, 105, 106, 108, 112, 113, 115, 117, 118, 120, 123, 124, 125, 126, 127], "default": [0, 8, 13, 25, 30, 48, 57, 62, 63, 82, 83, 97, 98, 101, 110, 113, 114, 115, 117], "do": [0, 1, 10, 13, 14, 16, 17, 18, 19, 34, 36, 86, 88, 89, 108, 110, 113, 120, 126], "light": [0, 13, 16, 93, 98, 101], "process": [0, 4, 8, 13, 16, 17, 18, 23, 33, 61, 74, 79, 92, 108, 127], "remov": [0, 1, 13, 16, 17, 20, 30, 48, 74, 95, 97, 98, 101, 102, 108, 110, 114, 115, 117, 120, 121, 122, 127], "ani": [0, 1, 8, 13, 16, 17, 21, 25, 28, 30, 34, 36, 47, 65, 74, 78, 79, 83, 85, 86, 89, 92, 95, 98, 101, 102, 103, 106, 108, 110, 113, 114, 115, 117, 120, 121, 122, 125, 127], "nan": [0, 5, 6, 7, 9, 13, 16, 17], "valu": [0, 1, 13, 16, 17, 20, 22, 23, 25, 30, 35, 39, 47, 48, 54, 57, 59, 61, 67, 71, 74, 75, 82, 84, 85, 91, 92, 95, 100, 102, 103, 107, 108, 115, 117, 118, 120, 121, 122, 123, 124, 127], "merg": [0, 13, 16, 17, 23, 33, 39, 48, 58, 61, 74, 78, 79, 83, 86, 127], "share": [0, 13, 16, 17, 36, 47, 48], "posit": [0, 13, 16, 17, 25, 26, 39, 48, 57, 58, 61, 65, 70, 73, 74, 75, 76, 83, 86, 89, 91, 98, 100, 101, 102, 106, 108, 112, 115, 120], "want": [0, 1, 2, 10, 13, 14, 16, 17, 19, 25, 28, 75, 95, 108, 110, 114], "pass": [0, 8, 13, 16, 17, 24, 25, 26, 31, 33, 34, 36, 39, 41, 45, 46, 47, 48, 54, 57, 61, 63, 67, 68, 69, 71, 72, 74, 75, 83, 85, 89, 91, 92, 93, 95, 98, 99, 101, 102, 104, 108, 110, 114, 115, 117, 120, 121, 122, 123, 125, 127], "fals": [0, 4, 8, 13, 16, 17, 20, 21, 30, 32, 33, 34, 36, 46, 47, 48, 52, 53, 55, 56, 57, 61, 62, 65, 67, 71, 72, 73, 74, 75, 78, 79, 83, 86, 88, 89, 91, 92, 94, 96, 97, 98, 101, 104, 106, 108, 110, 114, 118, 120, 127], "some": [0, 1, 2, 9, 13, 16, 17, 20, 30, 47, 79, 83, 98, 101, 105, 108], "repres": [0, 13, 16, 17, 24, 25, 32, 34, 40, 42, 46, 47, 60, 61, 63, 65, 70, 73, 74, 75, 79, 80, 83, 85, 91, 98, 101, 105, 108, 121, 122, 126], "multipl": [0, 8, 13, 16, 17, 20, 24, 25, 33, 35, 47, 48, 52, 57, 61, 63, 65, 71, 73, 74, 75, 80, 81, 83, 88, 89, 98, 101, 102, 105, 108, 115, 117, 118, 119], "instanc": [0, 13, 16, 30, 47, 50, 98, 101, 102, 108, 123, 127], "loader": [0, 13, 16, 29, 34, 68, 69], "tri": [0, 13, 25, 35, 108], "return": [0, 1, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "datatyp": [0, 13, 39, 48, 115, 117], "make": [0, 1, 2, 9, 11, 13, 14, 16, 17, 20, 23, 25, 30, 34, 47, 48, 61, 74, 75, 80, 82, 92, 94, 102, 108, 110, 113, 117], "most": [0, 13, 14, 16, 17, 84, 105, 110, 113, 115, 117, 118], "sens": [0, 13], "scene": [0, 7, 9, 11, 13, 16, 17, 21, 25, 32, 33, 34, 36, 41, 42, 60, 61, 65, 74, 83, 93, 110, 111, 112, 113, 114], "alwai": [0, 1, 2, 13, 14, 75, 102, 110, 113], "straight": [0, 13, 35, 67], "ask": [0, 13, 14], "forc": [0, 13, 16, 20, 34, 108], "result": [0, 1, 2, 6, 11, 13, 16, 17, 18, 19, 20, 21, 25, 29, 30, 31, 32, 33, 34, 36, 39, 44, 47, 48, 49, 50, 57, 60, 61, 62, 67, 73, 74, 75, 79, 80, 81, 83, 91, 92, 93, 95, 96, 98, 101, 103, 108, 115, 117, 120, 121, 122, 123], "through": [0, 1, 13, 16, 34, 47, 54, 75, 89, 91, 98, 101, 121, 122], "concaten": [0, 1, 13, 16, 61, 81, 98, 101, 105, 108, 115, 116, 117, 119, 120], "model": [0, 4, 6, 7, 8, 10, 12, 13, 16, 17, 30, 54, 61, 74, 76, 98, 100, 101, 105, 120], "cesiummilktruck": [0, 13], "name": [0, 8, 13, 21, 23, 33, 34, 36, 39, 47, 67, 69, 74, 83, 95, 96, 98, 99, 100, 101, 102, 106, 108, 110, 114, 115, 118, 121, 122], "buffer": [0, 8, 13, 16, 30, 33, 75, 85, 110, 114], "kwarg": [0, 13, 16, 17, 18, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 83, 85, 86, 88, 89, 91, 93, 95, 98, 99, 101, 102, 106, 108, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125], "constructor": [0, 13, 16, 17, 25, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 44, 45, 63, 68, 69, 70, 71, 75, 85, 93, 98, 101, 106, 108, 124], "would": [0, 13, 16, 25, 28, 65, 83, 85], "preserv": [0, 13, 91], "origin": [0, 8, 9, 10, 13, 16, 17, 19, 25, 27, 46, 48, 57, 58, 60, 61, 63, 65, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 88, 89, 91, 92, 98, 101, 105, 108, 118, 120, 121, 122, 126, 128], "without": [0, 11, 13, 14, 16, 17, 20, 33, 47, 54, 74, 80, 98, 101, 102, 108, 115, 120, 121, 122, 127], "soup": [0, 13, 16, 17, 25, 75, 92, 98, 101, 106], "disconnect": [0, 13, 16, 17, 39, 47, 75], "triangl": [0, 6, 9, 13, 14, 16, 17, 22, 24, 25, 26, 30, 46, 47, 50, 61, 74, 75, 78, 85, 86, 88, 89, 91, 92, 94, 97, 98, 101, 108], "howev": [0, 13, 16, 17], "regist": [0, 13, 16, 17, 91, 108], "featuretyp": [0, 6, 8, 10, 13, 16, 17], "current": [0, 2, 8, 13, 14, 16, 17, 20, 24, 32, 39, 47, 60, 61, 65, 73, 74, 83, 85, 86, 89, 91, 98, 99, 101, 102, 107, 110, 112, 114, 115, 117, 118, 120, 121, 122, 128], "is_watertight": [0, 8, 13, 16, 17, 47], "what": [0, 1, 8, 10, 13, 14, 16, 17, 23, 32, 34, 45, 48, 62, 74, 79, 82, 85, 98, 99, 101, 107, 108, 110, 113, 115, 117, 120, 121, 122, 126], "euler": [0, 8, 13, 16, 17, 98, 101, 105], "number": [0, 8, 13, 16, 17, 19, 23, 25, 30, 36, 37, 42, 46, 47, 48, 61, 63, 64, 65, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 88, 89, 91, 92, 93, 97, 100, 104, 107, 108, 112, 117, 121, 122, 123], "euler_numb": [0, 8, 13, 16, 17], "anoth": [0, 8, 13, 16, 17, 21, 46, 65, 75, 91, 102, 107, 108, 110, 113, 117], "properti": [0, 3, 8, 13, 16, 17, 20, 21, 22, 30, 39, 60, 61, 65, 73, 74, 83, 85, 95, 98, 99, 100, 101, 102, 106, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 128], "let": [0, 8, 13, 14], "compar": [0, 1, 8, 13, 22, 24, 86, 106, 108], "volum": [0, 3, 7, 8, 13, 16, 17, 18, 19, 30, 54, 60, 82, 85, 89, 97, 104, 121, 122, 123, 128], "our": [0, 8, 10, 13, 14, 19, 48, 88, 120], "convex_hul": [0, 8, 13, 16, 17, 24, 83, 98, 101], "sinc": [0, 8, 13, 97, 124], "mean": [0, 5, 8, 13, 16, 17, 24, 26, 46, 59, 60, 67, 83, 84, 92, 98, 101, 110, 113, 127], "volumetr": [0, 8, 13, 16, 17, 30], "center": [0, 8, 13, 16, 17, 19, 25, 26, 30, 59, 60, 61, 62, 63, 65, 74, 79, 83, 84, 85, 86, 98, 99, 101, 106, 112, 121, 122, 126], "mass": [0, 8, 13, 16, 17, 49, 84, 106], "we": [0, 1, 7, 8, 10, 13, 14, 16, 17, 19, 20, 23, 28, 33, 34, 47, 48, 64, 65, 78, 80, 82, 83, 88, 93, 107, 108, 110, 111, 120, 127], "set": [0, 1, 7, 8, 13, 14, 16, 17, 20, 21, 24, 25, 30, 34, 39, 47, 48, 54, 55, 57, 59, 65, 67, 71, 73, 75, 79, 80, 83, 86, 89, 91, 93, 94, 98, 99, 101, 102, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 126], "center_mass": [0, 8, 13, 16, 17, 84, 106], "moment": [0, 8, 13, 16, 17, 75, 106, 117], "inertia": [0, 8, 13, 16, 17, 85, 91], "moment_inertia": [0, 8, 13, 16, 17, 85], "bodi": [0, 8, 13, 16, 17, 25, 43, 61, 74, 94], "split": [0, 1, 8, 13, 16, 17, 47, 54, 61, 65, 73, 74, 78, 80, 127], "connect": [0, 8, 13, 16, 17, 47, 61, 62, 65, 70, 74, 75, 80, 83, 98, 101, 102, 108, 125], "compon": [0, 8, 13, 16, 17, 47, 49, 56, 105, 108, 121, 122, 128], "adjac": [0, 8, 13, 16, 17, 24, 47, 92, 94, 121, 122, 125], "singl": [0, 8, 10, 13, 16, 17, 21, 23, 33, 34, 39, 47, 56, 58, 63, 65, 71, 73, 74, 75, 81, 85, 88, 94, 98, 101, 108, 115, 117, 118, 120, 123, 124, 127], "get": [0, 1, 8, 10, 13, 14, 16, 17, 20, 21, 24, 28, 30, 33, 34, 47, 49, 55, 58, 60, 61, 65, 67, 69, 74, 82, 83, 85, 95, 96, 98, 99, 101, 102, 104, 114, 115, 117, 118, 120, 121, 122, 124, 125, 127, 128], "one": [0, 8, 10, 13, 16, 17, 21, 25, 30, 33, 39, 46, 47, 48, 57, 58, 59, 67, 78, 80, 83, 86, 94, 98, 99, 101, 102, 107, 110, 112, 113, 117, 118, 121, 122, 124, 125], "facet": [0, 8, 13, 16, 17, 23, 46, 47, 60, 82, 85], "group": [0, 8, 13, 16, 17, 36, 47, 89, 93, 106, 108, 110, 113], "coplanar": [0, 8, 13, 16, 17, 23, 26, 46, 61, 72, 74, 106, 110, 114], "each": [0, 1, 6, 7, 8, 11, 13, 16, 17, 20, 21, 22, 25, 26, 30, 33, 36, 40, 46, 47, 48, 57, 61, 63, 73, 74, 75, 77, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 97, 98, 99, 101, 102, 106, 108, 115, 117, 121, 122, 123, 124, 126, 127], "random": [0, 1, 7, 8, 13, 16, 17, 25, 61, 74, 75, 82, 83, 85, 97, 105, 108, 115, 117], "8": [0, 1, 6, 8, 9, 10, 11, 13, 14, 16, 19, 23, 36, 39, 42, 48, 58, 75, 83, 91, 96, 108], "bit": [0, 1, 8, 13, 39], "rgba": [0, 8, 13, 16, 39, 74, 83, 100, 115, 117, 118], "n": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 35, 39, 40, 46, 47, 48, 54, 56, 57, 58, 59, 61, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 97, 98, 99, 101, 102, 106, 108, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128], "4": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 21, 25, 39, 46, 47, 48, 49, 50, 54, 57, 60, 61, 63, 73, 74, 78, 83, 84, 85, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 105, 108, 110, 112, 114, 115, 117, 118, 119, 121, 122, 126, 127, 128], "uint8": [0, 8, 13, 16, 25, 74, 83, 94, 100, 110, 114, 115, 117, 118, 119, 121, 122, 127], "visual": [0, 3, 4, 7, 8, 9, 11, 12, 13, 16, 17, 25, 30, 31, 33, 34, 36, 39, 63, 83, 93, 98, 101, 103, 113, 121, 122], "face_color": [0, 8, 9, 11, 13, 16, 17, 115, 117, 119], "random_color": [0, 7, 8, 13, 16, 115, 117], "opengl": [0, 13, 14, 16, 17, 93, 98, 101, 105, 108, 110, 113, 114], "show": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 60, 61, 65, 74, 75, 83, 95, 98, 101, 102, 110, 114, 121, 122], "transform": [0, 8, 13, 16, 17, 19, 21, 22, 25, 46, 49, 57, 60, 61, 63, 71, 73, 74, 75, 78, 82, 83, 84, 85, 91, 93, 97, 98, 99, 100, 101, 110, 112, 113, 114, 121, 122], "method": [0, 8, 10, 13, 14, 16, 17, 20, 22, 23, 30, 60, 67, 73, 84, 86, 89, 91, 97, 105, 106, 108, 110, 113, 114, 121, 122, 123, 125], "matrix": [0, 8, 13, 16, 17, 19, 21, 25, 26, 46, 47, 49, 60, 61, 63, 74, 75, 78, 82, 83, 84, 85, 91, 93, 97, 98, 99, 101, 102, 104, 105, 106, 121, 122, 124, 126, 128], "appli": [0, 8, 13, 16, 25, 54, 60, 61, 74, 78, 82, 83, 85, 91, 98, 101, 105, 110, 113, 114, 115, 117, 118, 120, 121, 122, 128], "apply_transform": [0, 8, 13, 16, 17, 60, 61, 74, 83, 98, 101, 121, 122, 128], "random_rotation_matrix": [0, 8, 13, 105], "axi": [0, 1, 5, 8, 10, 13, 16, 17, 19, 25, 30, 46, 47, 48, 49, 60, 61, 74, 75, 82, 83, 84, 85, 86, 98, 100, 101, 102, 105, 108, 110, 112, 114, 121, 122, 124], "align": [0, 8, 13, 16, 17, 19, 60, 61, 65, 74, 75, 83, 85, 86, 91, 98, 101, 106, 108], "bound": [0, 3, 7, 8, 10, 13, 16, 17, 30, 59, 60, 61, 63, 65, 73, 74, 75, 83, 85, 86, 89, 97, 98, 101, 106, 108, 112, 121, 122], "box": [0, 2, 3, 7, 8, 10, 13, 16, 17, 19, 25, 30, 60, 63, 73, 74, 75, 83, 85, 86, 89, 97, 98, 101, 106, 108, 112, 121, 122, 126], "bounding_box": [0, 8, 13, 16, 30, 60], "extent": [0, 8, 13, 16, 17, 19, 25, 60, 61, 63, 73, 74, 75, 83, 85, 97, 98, 101, 106, 121, 122], "minimum": [0, 8, 13, 16, 17, 19, 21, 23, 47, 48, 59, 60, 63, 83, 85, 106, 108, 110, 113], "orient": [0, 3, 7, 8, 13, 16, 17, 19, 25, 60, 75, 84, 85, 94, 97, 100, 105, 106, 108], "primit": [0, 3, 7, 8, 9, 11, 13, 16, 17, 25, 60, 65, 74], "subclass": [0, 8, 13, 20, 85, 108, 110, 113], "automat": [0, 2, 8, 13, 16, 17, 18, 34, 47, 86, 98, 101, 110, 114, 115, 117, 120], "store": [0, 9, 13, 16, 17, 20, 32, 33, 39, 57, 65, 74, 83, 86, 95, 98, 99, 101, 102, 108, 110, 114, 115, 117, 118, 120, 121, 122, 127], "attribut": [0, 11, 13, 16, 28, 39, 47, 61, 74, 80, 83, 86, 92, 107, 108, 110, 113], "bounding_box_ori": [0, 7, 8, 13, 16, 60, 85], "append": [0, 1, 13, 16, 17, 98, 101, 108, 115, 117], "lazili": [0, 8, 13, 124], "evalu": [0, 6, 8, 13, 14, 16, 17, 47, 48, 50, 84, 96, 103, 108], "fill": [0, 8, 13, 16, 17, 61, 73, 74, 75, 76, 94, 121, 122, 123, 125, 126], "press": [0, 13, 105, 110, 112, 113, 114], "w": [0, 13, 91, 102, 105], "see": [0, 1, 13, 14, 16, 17, 30, 61, 74, 78, 94, 105, 106, 108, 110, 111, 113, 114, 121, 122, 123, 124, 125], "sphere": [0, 8, 9, 11, 13, 16, 24, 25, 26, 49, 59, 60, 85, 86, 97], "cylind": [0, 8, 13, 16, 17, 19, 25, 49, 60, 85], "except": [0, 8, 13, 14, 16, 17, 33, 40, 48, 75, 100, 108, 110, 113, 127], "certain": [0, 8, 13, 80], "degener": [0, 8, 13, 16, 17, 47, 106], "case": [0, 8, 13, 14, 16, 17, 34, 65, 80, 91, 92, 97, 108, 110, 113], "where": [0, 1, 8, 9, 13, 14, 16, 17, 30, 32, 39, 47, 48, 62, 65, 70, 74, 75, 78, 79, 80, 83, 88, 89, 95, 97, 98, 100, 101, 102, 106, 108, 121, 122, 123, 127], "thei": [0, 1, 2, 8, 13, 14, 16, 17, 58, 61, 65, 74, 79, 89, 98, 100, 101, 108, 110, 113, 114, 121, 122, 126], "wors": [0, 8, 13], "than": [0, 1, 8, 13, 14, 16, 17, 19, 23, 24, 25, 26, 30, 34, 46, 47, 48, 60, 65, 67, 73, 75, 78, 79, 83, 91, 92, 94, 97, 100, 102, 106, 108, 118], "least": [0, 8, 13, 30, 59, 86], "squar": [0, 8, 13, 16, 17, 59, 91, 100, 120, 125], "fit": [0, 8, 13, 16, 17, 23, 30, 59, 61, 74, 79, 83, 91], "bounding_cylind": [0, 8, 13, 16, 60], "bounding_spher": [0, 8, 13, 16, 60], "binari": [0, 13, 30, 33, 39, 40, 73, 108, 124, 127], "ascii": [0, 13, 39, 40, 45, 108], "wavefront": [0, 13, 36], "obj": [0, 12, 13, 14, 16, 19, 24, 29, 30, 59, 93, 95, 107, 108, 117, 118], "off": [0, 13, 16, 17, 29, 30, 95, 98, 101, 110, 114], "export": [0, 13, 14, 16, 17, 23, 29, 30, 31, 33, 36, 37, 39, 40, 41, 42, 44, 45, 60, 61, 66, 67, 71, 74, 78, 83, 98, 101, 102, 108, 121, 122], "2d": [0, 10, 13, 14, 16, 17, 19, 25, 34, 48, 54, 61, 62, 64, 65, 67, 70, 72, 73, 74, 75, 76, 78, 106, 108, 124], "3d": [0, 3, 10, 13, 16, 17, 19, 21, 25, 34, 44, 46, 54, 57, 61, 62, 65, 70, 72, 74, 77, 78, 83, 85, 86, 93, 105, 108, 112, 121, 122, 126], "dxf": [0, 13, 16, 34, 61, 66, 68, 69, 74], "svg": [0, 10, 13, 14, 16, 47, 61, 68, 69, 71, 74, 78], "geometri": [0, 10, 13, 16, 17, 21, 22, 24, 25, 33, 34, 37, 42, 43, 45, 47, 49, 54, 57, 60, 61, 63, 67, 69, 70, 71, 73, 74, 75, 76, 79, 80, 82, 85, 88, 91, 93, 94, 97, 98, 100, 101, 102, 104, 105, 108, 110, 111, 114, 121, 122, 123], "gmsh": [0, 13, 16, 51], "sdk": [0, 13, 54], "brep": [0, 13, 30, 54], "step": [0, 10, 13, 16, 17, 54, 80, 85, 91, 108], "ig": [0, 13, 54], "inp": [0, 13], "bdf": [0, 13, 54], "collada": [0, 13, 16, 17, 31], "abaqu": [0, 13], "nastran": [0, 13, 54], "line": [0, 1, 9, 10, 13, 16, 23, 25, 26, 30, 57, 61, 62, 63, 64, 65, 67, 69, 70, 72, 74, 75, 77, 78, 79, 80, 85, 108, 110, 114], "jupyt": [0, 13, 15, 16, 98, 101, 110, 111], "three": [0, 2, 13, 16, 17, 54, 60, 62, 65, 78, 82, 106, 108, 110, 111], "j": [0, 13, 16, 33, 48, 54, 64, 79, 80, 92, 104, 105, 108, 110, 111], "hash": [0, 2, 13, 14, 16, 17, 20, 22, 47, 48, 60, 61, 74, 75, 83, 95, 98, 101, 114, 121, 122, 124, 128], "chang": [0, 13, 16, 17, 20, 22, 74, 80, 91, 94, 98, 101, 102, 105, 110, 112, 113, 117], "track": [0, 13, 16, 17, 20, 110, 113], "md5": [0, 13, 16, 20, 60], "zlib": [0, 13], "crc": [0, 13, 16, 20, 60, 83, 121, 122, 124, 128], "intern": [0, 13, 30, 49, 121, 122], "comput": [0, 13, 16, 17, 18, 20, 26, 27, 30, 46, 47, 59, 72, 83, 84, 86, 91, 104, 105, 106, 108, 112, 126], "valid": [0, 13, 14, 16, 17, 29, 33, 34, 39, 49, 57, 61, 65, 74, 75, 98, 101, 106, 108], "calcul": [0, 13, 16, 17, 20, 22, 48, 57, 62, 64, 75, 85, 92, 97, 98, 99, 101, 104, 105, 106, 107, 108, 115, 120], "angl": [0, 13, 16, 17, 23, 24, 25, 26, 46, 47, 48, 61, 62, 63, 65, 67, 78, 83, 98, 99, 100, 101, 102, 105, 106, 108], "defect": [0, 13, 16, 17, 26], "e": [0, 1, 2, 13, 16, 17, 18, 25, 31, 33, 34, 47, 68, 71, 83, 92, 95, 97, 100, 102, 105, 107, 108, 110, 113, 114, 115, 117, 123, 125, 127], "slice": [0, 3, 10, 13, 16, 17, 57, 65, 115, 117], "arbitrari": [0, 11, 13, 25, 83, 108], "plane": [0, 3, 10, 13, 16, 17, 23, 24, 25, 46, 57, 61, 62, 63, 65, 74, 75, 83, 85, 108, 121, 122], "base": [0, 2, 13, 14, 16, 18, 20, 21, 23, 28, 30, 39, 40, 48, 53, 60, 61, 65, 73, 74, 80, 82, 83, 85, 86, 88, 89, 92, 95, 98, 99, 100, 101, 102, 107, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 124, 125, 128], "tool": [0, 13, 14, 30, 46, 103], "spars": [0, 1, 13, 14, 16, 17, 26, 46, 47, 104, 121, 122, 124, 126], "princip": [0, 13, 16, 17, 49, 91], "repair": [0, 13, 16, 30, 47, 61, 75, 108], "simpl": [0, 3, 4, 8, 9, 13, 14, 16, 17, 37, 47, 74, 98, 101, 102, 105, 117, 118, 120, 122, 124], "problem": [0, 1, 13, 16, 17, 77, 83, 88], "wind": [0, 13, 16, 17, 25, 47, 94], "normal": [0, 13, 16, 17, 19, 21, 24, 25, 26, 33, 36, 39, 40, 46, 48, 57, 61, 62, 63, 65, 74, 75, 83, 86, 89, 91, 94, 104, 106, 120, 127], "quad": [0, 13, 16, 17, 46, 47], "hole": [0, 13, 16, 17, 47, 61, 74, 75, 94, 121, 122], "rotat": [0, 13, 16, 17, 22, 25, 30, 46, 49, 65, 71, 82, 85, 91, 98, 99, 100, 102, 105, 110, 112, 114, 121, 122], "translat": [0, 13, 16, 17, 22, 29, 30, 60, 71, 74, 82, 91, 102, 105, 112, 121, 122, 128], "tessel": [0, 13, 16, 22, 82], "invari": [0, 13, 16, 17, 22], "identifi": [0, 13, 16, 17, 21, 22, 61, 65, 74, 98, 101, 108], "find": [0, 1, 3, 7, 10, 11, 13, 16, 17, 19, 46, 47, 48, 49, 57, 59, 61, 62, 70, 72, 74, 75, 78, 83, 84, 86, 88, 89, 91, 95, 102, 103, 106, 108, 126], "duplic": [0, 11, 13, 16, 17, 48, 74, 78, 79, 98, 101, 108, 115, 117, 120], "determin": [0, 13, 16, 17, 79, 91, 106, 113], "uniformli": [0, 13, 80], "sampl": [0, 1, 3, 7, 13, 16, 17, 19, 61, 64, 74, 75, 79, 80, 84, 85, 91, 108, 115, 117, 118], "locat": [0, 9, 13, 16, 17, 20, 54, 59, 63, 73, 84, 88, 89, 95, 98, 100, 101, 106, 110, 114, 120, 121, 122, 126], "index": [0, 9, 13, 16, 17, 21, 25, 39, 40, 47, 48, 57, 61, 65, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 88, 89, 92, 93, 94, 108, 117, 118, 120, 124, 126], "boolean": [0, 1, 13, 14, 16, 17, 20, 46, 47, 48, 51, 52, 55, 61, 62, 65, 74, 76, 104, 126], "intersect": [0, 1, 9, 10, 13, 14, 16, 17, 18, 21, 26, 30, 58, 61, 74, 75, 86, 88, 89, 99], "union": [0, 1, 13, 14, 16, 17, 18, 54, 58, 75], "differ": [0, 1, 2, 13, 16, 17, 18, 20, 22, 39, 48, 52, 55, 57, 78, 82, 91, 98, 101, 104, 105, 106, 112, 120, 124, 127], "openscad": [0, 13, 14, 18, 55], "blender": [0, 13, 14, 16, 18, 51, 105], "back": [0, 13, 16, 17, 57, 61, 74, 75, 105, 108, 110, 114, 122], "end": [0, 1, 11, 13, 23, 25, 48, 58, 62, 65, 74, 77, 78, 79, 91, 100, 108, 110, 114, 124, 127], "note": [0, 13, 16, 17, 25, 29, 30, 48, 60, 65, 74, 75, 80, 92, 94, 97, 105, 108, 110, 114], "usual": [0, 1, 13, 14, 46, 102, 108, 110, 113, 120], "slow": [0, 1, 13, 14, 16, 17, 83, 89, 92], "unreli": [0, 13], "voxel": [0, 13, 14, 16, 17, 30, 108], "tetgen": [0, 13, 54], "smooth": [0, 9, 13, 16, 17, 47, 61, 74, 79, 91, 92, 93, 98, 101, 110, 114, 121, 122], "laplacian": [0, 13, 104], "algorithm": [0, 1, 13, 14, 16, 17, 54, 80, 86, 91, 105, 121, 122, 126], "classic": [0, 13], "taubin": [0, 13, 104], "humphrei": [0, 13, 104], "subdivid": [0, 13, 16, 17, 25, 82, 92, 123], "symbol": [0, 13, 14, 50, 110, 114], "nearest": [0, 13, 14, 86, 93], "point": [0, 3, 7, 9, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 36, 46, 48, 49, 54, 57, 59, 61, 62, 64, 65, 67, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 88, 89, 91, 93, 94, 97, 98, 99, 100, 101, 105, 106, 108, 110, 112, 113, 114, 117, 121, 122, 123, 126, 128], "sign": [0, 13, 61, 74, 86, 91, 108], "distanc": [0, 3, 7, 11, 13, 16, 17, 21, 23, 24, 25, 47, 48, 57, 60, 61, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 89, 91, 98, 99, 100, 101, 102, 104, 108], "li": [0, 13, 46, 108], "insid": [0, 1, 2, 13, 16, 17, 19, 30, 61, 63, 74, 75, 82, 85, 86, 88, 89, 95, 97, 100, 108, 110, 114], "outsid": [0, 13, 86], "construct": [0, 13, 16, 17, 25, 39, 86, 127], "extrus": [0, 13, 16, 25, 85], "have": [0, 1, 2, 13, 14, 16, 17, 22, 23, 24, 25, 34, 39, 47, 48, 61, 63, 65, 67, 74, 75, 78, 80, 83, 86, 94, 98, 100, 101, 102, 105, 106, 108, 110, 113, 123, 125, 127], "all": [0, 1, 2, 10, 13, 14, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 39, 46, 47, 48, 54, 57, 58, 60, 61, 64, 65, 74, 79, 85, 86, 91, 92, 94, 95, 98, 100, 101, 102, 104, 106, 108, 110, 113, 114, 119, 124], "same": [0, 1, 7, 13, 16, 17, 20, 22, 23, 34, 36, 39, 43, 48, 60, 65, 74, 82, 83, 86, 97, 105, 106, 108, 115, 117, 120, 124, 127], "tree": [0, 13, 14, 16, 17, 33, 73, 75, 83, 89, 98, 101, 102, 106, 108], "render": [0, 3, 13, 14, 16, 17, 30, 47, 98, 99, 101, 110, 111, 113, 114, 118], "pyrend": [0, 13, 100], "unit": [0, 2, 10, 13, 16, 17, 25, 30, 46, 48, 61, 62, 63, 65, 74, 77, 78, 83, 85, 88, 97, 98, 100, 101, 105, 108, 128], "row": [0, 1, 13, 16, 17, 39, 46, 48, 49, 93, 105, 108, 126], "option": [0, 1, 2, 13, 16, 17, 20, 21, 24, 25, 30, 35, 44, 48, 54, 57, 78, 83, 88, 89, 91, 93, 97, 98, 100, 101, 102, 106, 108, 118], "debug": [0, 1, 13, 14, 23, 52, 53, 55, 56, 79, 91], "inspect": [0, 13], "In": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 20, 46, 48, 50, 72, 95, 105, 108, 110, 113], "view": [0, 13, 20, 39, 83, 98, 99, 105, 110, 114], "open": [0, 1, 13, 16, 17, 34, 38, 39, 40, 41, 44, 45, 54, 61, 65, 69, 71, 74, 83, 95, 98, 101, 108], "follow": [0, 13, 16, 69, 92, 105, 106, 127], "command": [0, 13, 30, 48, 53], "mous": [0, 13, 110, 112, 113], "click": [0, 13, 112], "drag": [0, 13, 16, 110, 112, 113, 114], "ctl": [0, 13], "pan": [0, 13, 110, 114], "wheel": [0, 13, 110, 112, 113], "zoom": [0, 13, 110, 112, 114], "z": [0, 6, 10, 13, 16, 17, 25, 30, 50, 78, 84, 98, 99, 100, 102, 105, 108, 121, 122], "toggl": [0, 13, 110, 114], "wirefram": [0, 13, 30, 110, 114], "mode": [0, 13, 16, 17, 30, 47, 61, 74, 76, 108, 110, 113, 114, 115, 117, 118], "c": [0, 13, 14, 25, 46, 83, 95, 105, 106, 121, 122], "backfac": [0, 13, 75], "cull": [0, 13, 83, 110, 114], "g": [0, 2, 11, 13, 16, 34, 47, 68, 102, 105, 108, 110, 113, 114, 115, 117, 123, 125, 127], "xy": [0, 10, 13, 46, 61, 63, 74, 98, 99, 108], "grid": [0, 13, 16, 30, 61, 63, 85, 108, 110, 114, 121, 122], "lowest": [0, 13], "xyz": [0, 13, 16, 25, 29, 30, 60, 83, 110, 114], "rgb": [0, 13, 110, 114, 115, 117, 118], "marker": [0, 13, 25, 110, 114], "between": [0, 3, 11, 13, 14, 16, 17, 18, 21, 33, 46, 47, 48, 57, 61, 72, 73, 74, 75, 78, 80, 83, 86, 89, 91, 102, 104, 105, 108, 110, 112, 114, 115, 117, 124, 126], "world": [0, 13, 16, 65, 74, 98, 99, 101, 102, 110, 112, 114], "frame": [0, 10, 13, 16, 17, 49, 60, 73, 98, 99, 101, 102, 105, 108, 110, 114], "everi": [0, 1, 2, 10, 13, 16, 17, 22, 26, 46, 47, 60, 61, 74, 82, 83, 86, 88, 92, 94, 98, 101, 102, 108, 110, 114, 120, 126], "f": [0, 13], "fullscreen": [0, 13, 110, 114], "m": [0, 1, 4, 9, 13, 16, 17, 22, 24, 25, 40, 46, 47, 48, 57, 62, 63, 65, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 88, 89, 91, 92, 94, 102, 104, 105, 106, 108, 117, 118, 120, 123, 124, 126], "maxim": [0, 13], "q": [0, 13, 30, 48, 72, 80, 92, 105, 126], "close": [0, 10, 13, 14, 16, 23, 25, 61, 62, 65, 67, 74, 75, 76, 77, 79, 80, 97, 105, 108, 128], "call": [0, 13, 14, 16, 17, 28, 29, 30, 34, 61, 65, 74, 83, 91, 93, 95, 108, 110, 113, 114, 127], "displai": [0, 3, 4, 12, 13, 16, 75, 83, 98, 101, 102, 110, 111, 114], "complet": [0, 13, 16, 17], "pbr": [0, 13, 33, 118], "better": [0, 13, 16, 17, 19], "shader": [0, 13], "screen": [0, 13], "design": [0, 13, 74, 86], "interoper": [0, 13, 124], "github": [0, 1, 2, 13, 33, 36, 39, 95, 100], "network": [0, 13, 14, 16, 34], "A": [0, 2, 3, 4, 8, 10, 13, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 33, 46, 55, 57, 60, 61, 65, 67, 68, 74, 82, 83, 85, 86, 89, 95, 98, 100, 101, 102, 104, 105, 107, 108, 110, 112, 113, 114, 118, 120, 121, 122, 123, 125], "select": [0, 13], "few": [0, 13, 108], "nvidia": [0, 13], "kaolin": [0, 13], "deep": [0, 13, 16, 98, 101], "learn": [0, 13], "cura": [0, 13], "popular": [0, 13], "slicer": [0, 13], "berkelei": [0, 13], "dexnet4": [0, 13], "relat": [0, 13, 28, 105], "ambidextr": [0, 13], "ai": [0, 13], "work": [0, 2, 10, 13, 30, 39, 74, 108, 110, 114], "robot": [0, 13], "grasp": [0, 13], "kerf": [0, 13], "engin": [0, 13, 14, 16, 17, 18, 25, 47], "analyz": [0, 13], "assembli": [0, 13], "manufactur": [0, 13, 104], "myminifactori": [0, 13], "p2slice": [0, 13], "prepar": [0, 13], "look": [0, 1, 2, 13, 16, 17, 30, 34, 98, 100, 101, 108, 110, 114, 115, 117], "materi": [0, 13, 16, 17, 30, 34, 36, 93, 115, 117, 120], "urdfpi": [0, 13], "urdf": [0, 13, 16, 29], "descript": [0, 13, 14, 30], "moderngl": [0, 13], "helper": [0, 13], "gl": [0, 13, 16, 93, 98, 101, 110, 114], "context": [0, 1, 3, 10, 13, 110, 114], "vedo": [0, 13], "interact": [0, 1, 10, 13], "galleri": [0, 13], "fsley": [0, 13], "mri": [0, 13], "imag": [0, 3, 10, 12, 13, 14, 16, 17, 31, 39, 61, 73, 74, 76, 91, 93, 95, 98, 99, 101, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122], "brain": [0, 13], "recommend": [0, 13, 91, 105], "time": [0, 1, 13, 16, 17, 23, 25, 48, 73, 84, 92, 106, 108, 110, 113, 117, 127], "replac": [0, 1, 13, 16, 17, 20, 21, 50, 61, 74, 79, 103, 108, 121, 122], "angel": [0, 13], "wing": [0, 13], "textur": [0, 13, 14, 16, 17, 31, 34, 36, 48, 93, 95, 113, 115, 117, 118], "terrif": [0, 13], "choic": [0, 13], "extrem": [0, 13, 14, 88, 94], "specifi": [0, 2, 13, 16, 17, 25, 30, 42, 47, 48, 57, 61, 62, 63, 64, 67, 71, 74, 75, 78, 80, 83, 85, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 115, 117, 118, 123, 124, 125], "modern": [0, 13], "fast": [0, 1, 13, 14, 20, 59, 112], "pars": [0, 13, 14, 30, 36, 39, 71, 102], "ha": [0, 1, 2, 13, 14, 16, 17, 20, 34, 35, 36, 39, 49, 57, 60, 65, 67, 70, 75, 80, 91, 94, 95, 98, 101, 107, 108, 115, 117, 121, 122, 127], "json": [0, 13, 16, 17, 33, 34, 35, 85, 96, 103, 108], "header": [0, 13, 30, 33, 36, 39, 102], "describ": [0, 13, 54, 108, 110, 113], "blob": [0, 13, 14, 16, 17, 33, 35, 67, 83, 108], "It": [0, 1, 2, 13, 14, 22, 30, 48, 83, 91, 110, 113, 114], "hierarch": [0, 13], "great": [0, 13], "physic": [0, 13, 43, 100, 107, 118], "system": [0, 13, 16, 17, 36, 74, 95, 98, 101, 105, 107], "dozen": [0, 13], "hundr": [0, 13], "john": [0, 13], "carmack": [0, 13], "endors": [0, 13], "larg": [0, 7, 13, 16, 17, 22, 86, 88], "subset": [0, 13, 16, 17, 83, 108, 115, 117, 124], "NOT": [0, 13, 22, 34, 80, 108, 118], "fancier": [0, 13], "anim": [0, 13], "skeleton": [0, 13], "wild": [0, 13, 65], "perhap": [0, 13], "common": [0, 13, 31, 95, 101, 108, 115, 117, 126], "robust": [0, 13, 16, 17, 22, 91, 106], "good": [0, 2, 13, 110, 114], "pretti": [0, 1, 13, 41, 59], "unfortun": [0, 13], "doesn": [0, 1, 9, 13, 14, 25, 107, 126], "t": [0, 1, 2, 9, 13, 14, 16, 17, 20, 25, 30, 33, 34, 36, 39, 48, 61, 65, 72, 74, 75, 91, 92, 98, 101, 102, 105, 106, 107, 108, 110, 113, 114, 120, 126], "wide": [0, 13, 61, 74, 76, 108], "accept": [0, 13, 23, 28, 35, 79, 93, 108], "implement": [0, 1, 13, 14, 16, 17, 19, 30, 33, 59, 60, 65, 89, 91, 92, 102, 105, 106, 108, 110, 113, 117, 118, 121, 122, 123, 124, 125, 127], "slightli": [0, 13, 14, 25, 30, 110, 114], "tough": [0, 13], "size": [0, 1, 13, 16, 19, 22, 25, 30, 54, 65, 73, 74, 83, 98, 99, 101, 106, 112, 121, 124], "represent": [0, 13, 16, 17, 26, 30, 50, 61, 64, 74, 78, 108, 121, 122], "mess": [0, 13], "refer": [0, 3, 10, 16, 17, 20, 30, 31, 33, 46, 48, 65, 67, 74, 75, 98, 100, 101, 102, 103, 105, 108, 110, 114, 120, 125], "arbitrarili": [0, 13], "interleav": [0, 13, 108], "give": [0, 13, 127], "try": [0, 13, 14, 16, 17, 24, 30, 34, 39, 74, 77, 93, 94, 95, 107, 108, 110, 114], "altern": [0, 13, 14, 73, 127], "question": [0, 13, 14, 21], "come": [0, 13, 14, 16, 98, 101, 108, 120], "frequent": [0, 13], "bibtex": [0, 13], "softwar": [0, 13], "author": [0, 13, 30, 105], "dawson": [0, 13], "haggerti": [0, 13], "et": [0, 13, 91], "al": [0, 13, 91, 105], "titl": [0, 5, 10, 13, 30], "url": [0, 13, 16, 34, 95], "http": [0, 10, 13, 19, 24, 30, 33, 36, 39, 54, 72, 73, 83, 97, 100, 105, 106, 118, 125], "trimsh": [0, 13], "org": [0, 10, 13, 24, 83, 125], "2019": [0, 13, 30], "12": [0, 6, 8, 9, 10, 13, 46, 78, 108, 127], "autom": [0, 13], "debian": [0, 2, 13], "slim": [0, 2, 13], "bullsey": [0, 2, 13], "build": [0, 13, 30, 61, 74], "docker": 0, "hub": [0, 2, 13], "tag": [0, 2, 13], "latest": [0, 2, 13], "git": [0, 1, 2, 13, 118], "short": [0, 2, 13], "commit": [0, 13, 95], "main": [0, 13], "0c1298d": [0, 13], "27": [0, 13], "llvmpipe": [0, 13], "xvfb": [0, 13], "super": 1, "i": [1, 2, 7, 8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 39, 41, 46, 47, 48, 50, 54, 55, 57, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128], "rel": [1, 25, 86, 96, 106, 110, 112, 114], "small": [1, 14, 22, 57, 88, 123], "sourc": [1, 11, 16, 17, 22, 34, 39, 45, 47, 48, 57, 71, 73, 75, 78, 79, 85, 86, 91, 94, 95, 100, 108, 110, 111, 123], "project": [1, 16, 17, 24, 47, 61, 75, 83, 105], "realli": [1, 20, 94], "benefit": 1, "bugfix": 1, "featur": [1, 14, 16, 127], "stuff": [1, 14, 108], "100": [1, 4, 7, 8, 9, 10, 11, 12, 25, 71, 82, 86, 108], "contributor": 1, "pr": 1, "thank": 1, "how": [1, 3, 16, 17, 19, 20, 23, 25, 48, 58, 61, 63, 73, 74, 75, 78, 91, 104, 108, 110, 113, 114, 118], "new": [1, 16, 17, 21, 24, 30, 49, 54, 57, 65, 67, 74, 79, 80, 82, 84, 85, 92, 94, 98, 99, 101, 102, 105, 112, 115, 118, 120, 121, 122, 125], "environ": [1, 14], "write": [1, 16, 30, 32, 33, 36, 42, 43, 45, 47, 95, 108], "necessari": [1, 16, 17], "thi": [1, 8, 10, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 30, 33, 34, 39, 42, 43, 47, 48, 55, 60, 61, 63, 65, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 89, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 105, 108, 110, 112, 113, 114, 115, 117, 118, 120, 124, 127, 128], "wai": [1, 14, 16, 17, 19, 22, 54, 55, 82, 94, 105, 108, 110, 113, 117, 121, 122, 124], "doe": [1, 14, 16, 17, 20, 30, 65, 75, 86, 89, 98, 100, 101, 108, 113, 115, 117, 127], "easier": [1, 14, 91], "don": [1, 16, 20, 33, 34, 36, 98, 101, 106, 110, 113, 114], "virtual": 1, "solut": [1, 55, 105, 106], "plenti": 1, "poetri": 1, "pipenv": 1, "conda": [1, 13], "us": [1, 3, 7, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 25, 29, 30, 32, 33, 35, 39, 42, 45, 46, 47, 48, 52, 54, 55, 59, 60, 61, 62, 64, 65, 71, 72, 73, 74, 75, 76, 80, 83, 84, 85, 88, 89, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128], "venv": 1, "modul": [1, 28, 74, 105, 108, 117, 127], "built": [1, 2, 14, 121, 122], "standard": [1, 14, 30, 108], "librari": [1, 10, 14, 16, 17, 47, 48, 105, 108], "myenv": 1, "termin": [1, 8], "echo": 1, "bin": [1, 48, 73], "activ": [1, 14], "bashrc": 1, "With": [1, 16, 17, 19, 30, 39, 48, 65, 71, 75, 102, 108], "dump": [1, 16, 17, 30, 98, 101, 108], "everywher": 1, "can": [1, 2, 7, 8, 10, 14, 16, 17, 20, 22, 23, 25, 26, 33, 34, 36, 39, 41, 45, 46, 48, 55, 57, 65, 67, 70, 75, 78, 80, 82, 83, 85, 91, 95, 98, 101, 105, 106, 108, 110, 113, 114, 115, 120, 127], "instal": [1, 2, 16, 17, 20, 25, 54, 55, 108], "flake8": 1, "implicit": [1, 104], "concat": [1, 81, 117, 119], "rule": [1, 106], "which": [1, 2, 8, 10, 14, 16, 17, 18, 19, 20, 23, 25, 26, 28, 31, 33, 34, 36, 39, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 61, 65, 67, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98, 100, 101, 102, 105, 106, 108, 110, 113, 114, 115, 118, 119, 120, 124], "disallow": 1, "string": [1, 14, 16, 17, 23, 25, 30, 31, 34, 36, 39, 45, 47, 50, 55, 68, 71, 74, 78, 86, 102, 105, 108, 117], "comma": [1, 45], "being": [1, 16, 17, 47, 106, 108, 110, 113, 128], "much": [1, 16, 17, 19, 61, 74, 91, 102], "bug": 1, "autopep8": 1, "codespel": 1, "pyinstrument": [1, 110, 114], "re": [1, 10, 14, 23, 39, 47, 92, 105, 106, 110, 113], "edit": 1, "might": [1, 20, 107, 108], "fork": [1, 100], "via": [1, 2, 16, 30, 98, 101, 104, 110, 114, 121, 122, 123, 125], "interfac": [1, 16, 25, 30, 86, 95, 105, 124], "probabl": [1, 2, 16, 17, 25, 29, 84, 91, 110, 114], "clone": 1, "your": [1, 25, 30, 39, 65, 110, 113, 123, 125], "com": [1, 30, 33, 36, 39, 72, 73, 84, 97, 100, 105, 106], "mikedh": [1, 36], "experi": [1, 14, 19], "cd": [1, 105], "repl": 1, "stub": 1, "def": [1, 20], "fancy_funct": 1, "blah": 1, "rais": [1, 14, 16, 17, 28, 30, 33, 34, 39, 61, 74, 75, 98, 101, 102, 121, 122, 127], "valueerror": [1, 16, 34, 39, 61, 74, 75, 98, 101, 102, 127], "input": [1, 16, 19, 20, 21, 22, 24, 33, 34, 35, 40, 43, 47, 48, 54, 57, 58, 59, 61, 67, 70, 71, 73, 74, 75, 76, 79, 80, 82, 83, 93, 104, 106, 108, 120, 126, 127], "wa": [1, 14, 16, 17, 21, 24, 57, 58, 60, 74, 78, 95, 98, 101, 106, 115, 117, 121, 122, 124, 126], "goofi": [1, 83], "obviou": 1, "whatnot": 1, "dot": [1, 16, 17, 47, 57, 105, 108], "my": 1, "copi": [1, 2, 16, 17, 33, 60, 61, 65, 74, 83, 85, 98, 99, 101, 102, 115, 116, 117, 118, 120, 121, 122, 124, 128], "past": [1, 39], "emb": 1, "__name__": 1, "__main__": [1, 50], "go": [1, 10, 14, 16, 17, 78, 83, 94], "need": [1, 2, 20, 25, 36, 65, 110, 113, 120, 127], "low": 1, "overhead": 1, "profil": [1, 16, 17, 25, 61, 74, 85, 110, 114], "nest": 1, "statement": [1, 16, 17], "cprofil": 1, "tweak": 1, "befor": [1, 16, 17, 23, 30, 33, 73, 75, 78, 108, 110, 113, 127], "finish": 1, "run": [1, 2, 3, 6, 9, 11, 14, 16, 17, 20, 23, 30, 33, 51, 52, 53, 55, 56, 61, 73, 74, 92, 96, 104, 110, 114, 124, 126, 127], "auto": 1, "yell": 1, "about": [1, 16, 17, 19, 21, 23, 65, 74, 83, 98, 100, 101, 102, 112, 115, 117], "violat": 1, "There": [1, 2, 108, 117], "conveni": [1, 16, 17, 82, 124], "script": [1, 53, 55], "bake": [1, 102], "setup": 1, "py": [1, 2, 16, 24, 29, 61, 98, 110, 115, 121], "equival": [1, 16, 17, 39, 108, 124, 127], "yourself": [1, 110, 113], "recurs": [1, 103], "verbos": [1, 30, 61, 74, 79], "place": [1, 16, 17, 33, 39, 48, 61, 65, 74, 80, 82, 83, 84, 94, 104, 121, 122, 128], "aggress": [1, 20, 104], "littl": 1, "possibl": [1, 16, 17, 54, 91, 108, 117, 127], "ever": [1, 20], "block": [1, 16, 30, 48, 67, 108], "loop": [1, 16, 17, 20, 48, 61, 73, 74, 75, 79, 92, 108], "basic": [1, 14, 22, 55, 65, 74, 78, 89, 100, 107, 108, 125], "unus": [1, 30], "even": [1, 14, 16, 17, 19, 20, 47, 92, 105, 120, 127], "moder": 1, "mesh": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 70, 74, 75, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 97, 98, 101, 104, 106, 108, 110, 114, 115, 117, 119, 120, 121, 122, 123, 126], "should": [1, 2, 14, 16, 17, 19, 20, 23, 25, 26, 29, 32, 48, 59, 61, 63, 74, 75, 80, 83, 88, 89, 93, 98, 101, 108, 110, 113, 115, 117, 123, 125], "unless": [1, 16, 17, 105], "absolut": [1, 75, 78, 105], "unavoid": 1, "figur": [1, 5, 16, 98, 101, 108], "advic": 1, "newstuff": 1, "magic": [1, 34, 110, 114], "timeit": [1, 20, 108], "var": 1, "fromstr": 1, "frombuff": 1, "str": [1, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 37, 39, 40, 43, 45, 47, 49, 54, 61, 65, 67, 68, 69, 71, 74, 78, 83, 85, 91, 93, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 110, 111, 114, 115, 117, 118, 120, 121, 122], "6": [1, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 30, 46, 48, 50, 75, 105, 108, 127], "text": [1, 10, 14, 16, 36, 37, 61, 65, 73, 106, 108], "dtype": [1, 8, 16, 17, 20, 39, 46, 48, 105, 108, 115, 117, 121, 124, 127], "float64": [1, 16, 17, 105], "1000": [1, 82, 83, 98, 99, 108], "best": [1, 59, 79, 105, 108], "209": 1, "\u00b5": 1, "per": [1, 16, 17, 20, 23, 25, 42, 47, 48, 57, 61, 63, 74, 75, 78, 82, 83, 85, 88, 91, 98, 99, 100, 101, 106, 108, 115, 117, 120, 121, 122], "sep": 1, "10000": [1, 108], "139": 1, "giant": [1, 14], "rather": [1, 16, 17, 34, 65, 67, 73, 83, 94, 108], "iter": [1, 16, 17, 30, 73, 91, 92, 95, 101, 104, 108, 110, 114, 124, 127], "join": [1, 108], "14": [1, 8, 10], "15": [1, 2, 8, 125], "10": [1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 25, 37, 47, 54, 71, 75, 78, 86, 91, 92, 104, 108], "60": 1, "16": [1, 8, 20, 93, 105], "len": [1, 10, 11, 16, 17, 22, 24, 26, 46, 47, 48, 61, 74, 83, 97, 98, 100, 101, 115, 117, 120, 127], "flatten": [1, 124], "34": [1, 10, 50], "sometim": [1, 2, 16, 17, 20, 108, 120], "matric": [1, 16, 17, 71, 84, 100, 102, 105, 126], "huge": 1, "speedup": [1, 19, 47, 75, 105, 106], "two": [1, 3, 7, 11, 16, 17, 21, 23, 25, 47, 48, 58, 65, 72, 73, 77, 78, 93, 100, 105, 106, 108, 115, 117, 120, 126, 127], "product": [1, 16, 17, 57, 106, 108], "tight": [1, 108], "sum": [1, 6, 10, 16, 17, 26, 46, 48, 50, 74, 78, 91, 98, 101, 106, 108, 121, 124], "often": [1, 16, 17, 83, 91, 110, 114], "pop": [1, 16, 20], "slowest": 1, "ones": [1, 14, 108, 124, 127], "veri": [1, 55, 86, 97, 107, 108, 126], "optim": [1, 19, 91, 104, 105, 127], "substanti": [1, 19, 75], "157": 1, "25": [1, 16, 17, 20, 39, 47, 105], "vstack": [1, 108], "column_stack": 1, "seq": 1, "int": [1, 9, 11, 16, 17, 19, 20, 21, 22, 23, 25, 30, 35, 36, 37, 39, 40, 42, 46, 47, 48, 54, 57, 58, 60, 61, 63, 64, 65, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 97, 98, 99, 101, 102, 104, 108, 110, 112, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 127], "rang": [1, 16, 17, 39, 58, 104, 115, 117], "48": 1, "33": [1, 8], "bincount": 1, "instead": [1, 30, 46, 47], "uniqu": [1, 7, 11, 16, 17, 48, 61, 74, 78, 89, 98, 101, 106, 108, 117], "45": [1, 71, 127], "astyp": [1, 46], "46": [1, 46], "bool": [1, 16, 17, 19, 20, 21, 23, 24, 30, 31, 33, 34, 36, 39, 45, 46, 47, 48, 57, 58, 59, 61, 62, 63, 65, 67, 71, 72, 73, 74, 75, 76, 78, 79, 83, 86, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 124, 126, 127], "true": [1, 8, 16, 17, 19, 21, 23, 30, 31, 32, 33, 36, 39, 42, 45, 47, 48, 57, 58, 59, 61, 62, 63, 65, 67, 71, 73, 74, 75, 76, 78, 80, 83, 86, 88, 89, 91, 92, 93, 94, 96, 97, 98, 101, 102, 104, 105, 106, 107, 108, 110, 111, 114, 118, 120, 123, 124, 127], "47": 1, "100000": [1, 16, 17], "81": 1, "31": 1, "especi": 1, "could": [1, 2], "element": [1, 10, 20, 30, 39, 41, 48, 54, 102, 108, 118, 121, 122, 125, 127], "high": [1, 110, 113], "mai": [1, 14, 16, 17, 19, 30, 36, 60, 61, 74, 75, 80, 83, 89, 97, 100, 105, 108, 110, 113, 123], "comprehens": 1, "quit": 1, "though": [1, 100, 108], "definit": [1, 16, 17, 39], "first": [1, 2, 16, 17, 21, 47, 48, 54, 65, 67, 75, 80, 84, 88, 89, 102, 105, 106, 108, 110, 113, 124], "scope": 1, "reason": [1, 22, 64, 79, 91, 108, 110, 113], "seem": 1, "answer": 1, "nearli": [1, 27], "flaki": 1, "restructur": 1, "form": [1, 16, 17, 35, 40, 47, 48, 58, 64, 65, 71, 78, 93, 105, 106, 108, 127], "didn": 1, "ubuntu": [2, 13], "typic": [2, 26, 110, 113], "dockerfil": 2, "idea": 2, "parti": 2, "buster": 2, "deriv": [2, 16, 17, 104, 124], "unmaintain": 2, "unknow": 2, "black": [2, 10], "fine": 2, "offic": 2, "push": 2, "action": 2, "releas": 2, "demand": 2, "semant": 2, "1c6178d": 2, "These": [2, 16, 17, 61, 74], "embre": 2, "multi": [2, 20, 43, 70, 74, 102], "stage": 2, "avoid": [2, 16, 17, 20, 57, 75, 83, 85, 88, 92, 93, 106, 108, 127], "intermedi": [2, 86, 91], "final": [2, 16, 19, 73, 75, 79, 98, 101], "non": [2, 16, 17, 47, 48, 78, 86, 91, 94, 108, 110, 114, 121, 122, 123, 127], "root": [2, 16, 61, 74, 75, 80, 95, 98, 101, 102, 110, 113], "user": [2, 16, 28, 34, 117], "directori": [2, 33, 36, 43, 95], "home": 2, "txt": [2, 16, 17, 108], "r": [2, 5, 10, 16, 17, 26, 48, 75, 89, 104, 105, 106, 108], "app": [2, 110, 114], "cmd": 2, "save": [2, 3, 16, 17, 30, 36, 54, 83, 95, 110, 114, 117, 127], "multistag": 2, "explicitli": [2, 16, 17, 34, 84], "output": [2, 16, 17, 30, 31, 33, 36, 37, 54, 79, 110, 114, 117], "target": [2, 11, 21, 84, 91, 108, 112], "neeed": 2, "enabl": [2, 14, 92], "buildkit": 2, "docker_buildkit": 2, "makefil": 2, "access": [2, 28, 30, 95], "doc": [2, 54, 125], "help": [2, 20, 30, 91], "eject": 2, "html": [2, 24, 30, 54, 72, 97, 105, 110, 111, 125], "sever": 3, "uv": [3, 12, 14, 16, 17, 25, 39, 48, 115, 117, 118, 120], "coordin": [3, 9, 12, 14, 16, 17, 39, 48, 65, 74, 85, 91, 98, 99, 101, 105, 106, 108, 112, 115, 117, 118, 120, 126], "given": [3, 11, 14, 16, 17, 19, 21, 25, 34, 39, 46, 47, 48, 57, 58, 61, 62, 64, 67, 70, 74, 75, 79, 80, 83, 86, 89, 93, 98, 99, 101, 103, 106, 108, 110, 112, 114, 115, 117, 118, 121, 122, 123, 125, 126, 127], "indic": [3, 11, 16, 17, 21, 25, 46, 47, 48, 57, 58, 65, 67, 70, 74, 75, 78, 80, 91, 92, 97, 107, 108, 110, 112, 113, 115, 117, 120, 121, 122, 124, 126, 127], "while": [3, 11, 60, 100, 127], "travel": [3, 11, 83], "along": [3, 10, 11, 16, 17, 25, 46, 47, 49, 65, 75, 77, 78, 79, 80, 83, 85, 88, 108, 124], "edg": [3, 11, 16, 17, 22, 25, 26, 46, 47, 61, 63, 65, 70, 73, 74, 75, 76, 83, 89, 91, 92, 94, 98, 101, 102, 106, 108, 126], "weight": [3, 11, 16, 17, 91, 97, 104], "search": [3, 11, 16, 17, 19, 30, 47, 89, 91], "variou": [3, 8, 29, 93, 120, 124, 127], "trimesh": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "demonstr": [3, 10], "commonli": [3, 10, 14, 115, 117], "pointcloud": [3, 7, 16, 17, 45, 60, 83, 91, 98, 101, 110, 114, 117], "discret": [3, 5, 16, 17, 23, 26, 61, 62, 64, 65, 74, 79, 80], "gaussian": [3, 5, 16, 17, 26, 82, 84], "measur": [3, 5, 24, 26, 121, 122], "nbsp": [4, 5, 6, 7, 8, 9, 10, 11, 12], "quot": [4, 5, 6, 7, 8, 9, 10, 11, 12], "39": [4, 5, 6, 7, 8, 9, 10, 11, 12], "na": [4, 8, 10, 105], "machinist": 4, "kind": [4, 16, 17, 34, 39, 98, 101, 115, 116, 117, 120], "ifram": [4, 7, 8, 9, 10, 11, 12], "srcdoc": [4, 7, 8, 9, 10, 11, 12], "threej": [4, 7, 8, 9, 10, 11, 12], "viewer": [4, 7, 8, 9, 10, 11, 12, 14, 16, 83, 98, 101], "width": [4, 7, 8, 9, 10, 11, 12, 16, 17, 61, 73, 74, 75, 76, 89, 98, 99, 110, 112, 113, 114], "height": [4, 7, 8, 9, 10, 11, 12, 16, 17, 19, 25, 49, 57, 61, 65, 73, 74, 78, 85, 98, 99, 106, 110, 111, 112, 113, 114], "500px": [4, 7, 8, 9, 10, 11, 12], "border": [4, 7, 8, 9, 10, 11, 12], "none": [4, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], "discrete_gaussian_curvature_measur": [5, 16, 26], "discrete_mean_curvature_measur": [5, 16, 26], "sphere_ball_intersect": [5, 16, 26], "matplotlib": [5, 10, 15, 61, 65, 74, 75, 83, 102, 115, 117], "pyplot": [5, 115, 117], "plt": [5, 10, 65, 75, 83], "inlin": [5, 8, 10, 110], "creation": [5, 9, 16, 17, 61, 74, 85, 121], "icospher": [5, 9, 16, 25, 85], "radii": [5, 16, 17, 47, 86], "linspac": [5, 80, 85, 108], "gauss": 5, "plot": [5, 10, 16, 61, 65, 74, 75, 83, 102], "symbolic_barycentr": [6, 16, 50], "expr": [6, 50], "x": [6, 16, 17, 25, 30, 50, 73, 99, 102, 105, 108, 110, 112, 113, 114, 121, 122], "y": [6, 16, 17, 25, 30, 50, 73, 99, 102, 105, 108, 110, 112, 113, 114, 121, 122], "displaystyl": 6, "frac": 6, "x_": 6, "y_": 6, "z_": 6, "quickli": [6, 14, 16, 17, 22, 75, 79, 83, 86, 126], "03470634": 6, "03479687": 6, "03371525": 6, "09383138": 6, "41341146": 6, "35091146": 6, "9": [6, 8, 9, 10, 11, 15, 16, 17, 30, 42, 48, 73, 91, 105, 127], "3476": [6, 8], "185": 6, "58755255808592": 6, "nvolum": 7, "nand": 7, "ish": [7, 9, 14], "cycloid": 7, "sample_volum": [7, 16, 85], "count": [7, 16, 17, 25, 47, 48, 61, 63, 64, 65, 74, 75, 78, 79, 80, 85, 89, 93, 97, 108, 117, 127], "closest": [7, 16, 17, 21, 39, 77, 78, 83, 86, 91, 98, 99, 106], "closest_point": [7, 16, 86, 91, 106], "triangle_id": [7, 86], "on_surfac": [7, 16, 86], "format": [7, 9, 10, 14, 16, 17, 23, 24, 29, 31, 33, 34, 36, 37, 39, 41, 42, 45, 47, 48, 54, 67, 69, 71, 83, 93, 95, 102, 105, 108, 110, 114, 118], "02855585": 7, "17455774": 7, "04150697": 7, "02384298": 7, "00956705": 7, "0455916": 7, "01334118": 7, "16073014": 7, "21145696": 7, "16142849": 7, "cloud_origin": 7, "cloud_clos": 7, "cloud_color": 7, "vertices_color": 7, "contain": [7, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 47, 48, 60, 61, 62, 63, 67, 70, 71, 73, 74, 75, 83, 85, 86, 88, 89, 91, 92, 95, 101, 103, 108, 110, 111, 113, 114, 115, 117, 118, 120, 123, 127], "wuse": 7, "load_mesh": [8, 10, 16, 29, 34], "raw": [8, 30], "intact": 8, "disabl": 8, "divid": [8, 16, 17, 92, 108], "7792407744466932": 8, "93059627e": 8, "00": 8, "43877613e": 8, "03": [8, 105], "49424850e": 8, "01": [8, 75, 78, 98, 99], "19191960e": 8, "25194047e": 8, "04": [8, 25, 33], "62344872e": 8, "lt": [8, 10], "1722": 8, "gt": [8, 10], "11": [8, 9, 10, 11], "13": [8, 86], "trackedarrai": [8, 16, 17, 20], "43962499": 8, "63591498": 8, "48669471": 8, "375": 8, "03583507e": 8, "02": [8, 10, 105], "13722261e": 8, "75028033e": 8, "66295316e": 8, "40279704e": 8, "14355820e": 8, "11949146e": 8, "88294992e": 8, "39318003e": 8, "39580758e": 8, "63166257e": 8, "19469786e": 8, "00000000e": 8, "17": [8, 105], "187500000000025": 8, "77148570415638": 8, "95": [8, 73], "8943899752207": 8, "ray_origin": [9, 88, 89], "ray_direct": [9, 88, 89], "docstr": 9, "intersects_loc": [9, 16, 87, 88, 89], "__doc__": 9, "hit": [9, 10, 61, 74, 75, 88, 89], "paramet": [9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "float": [9, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 35, 36, 37, 39, 40, 46, 47, 48, 49, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 112, 114, 115, 117, 118, 120, 121, 122, 123, 126, 128], "direct": [9, 16, 17, 47, 48, 57, 61, 65, 72, 74, 75, 77, 78, 83, 85, 86, 88, 89, 94, 98, 99, 100, 101, 102, 123], "sequenc": [9, 16, 17, 47, 48, 57, 74, 75, 80, 86, 88, 89, 98, 101, 108, 127], "p": [9, 25, 47, 48, 72, 75, 80, 83, 88, 92, 94, 104, 105, 108, 118, 120, 126], "index_rai": [9, 88, 89], "index_tri": [9, 88, 89], "565": 9, "416": 9, "stack": [9, 75, 108], "segment": [9, 16, 23, 25, 26, 57, 61, 62, 64, 65, 67, 69, 70, 74, 75, 77, 79, 80, 85, 108], "path3d": [9, 11, 16, 17, 25, 33, 34, 61, 63, 69, 70, 74, 81, 85, 93, 98, 101, 110, 114], "ray_visu": 9, "load_path": [9, 11, 16, 61, 66, 69], "hstack": 9, "reshap": [9, 16, 99, 121, 124], "unmerg": 9, "unmerge_vertic": [9, 16, 17], "white": [9, 11], "255": [9, 11, 30, 127], "linestr": [10, 25, 70], "pylab": 10, "config": [10, 110, 114], "inlinebackend": 10, "figure_format": 10, "deprec": [10, 60, 121, 122], "popul": [10, 33, 39], "namespac": [10, 16, 95], "filenam": [10, 16, 17, 32, 68, 83, 96], "plane_origin": [10, 16, 17, 57, 63, 83], "centroid": [10, 16, 17, 61, 74, 83, 98, 101], "plane_norm": [10, 16, 17, 57, 63, 72, 83], "move": [10, 16, 17, 19, 25, 46, 57, 60, 61, 63, 73, 74, 75, 85, 98, 101, 110, 113], "curv": [10, 14, 16, 17, 23, 24, 25, 61, 65, 70, 74, 75, 79, 80], "path2d": [10, 16, 17, 33, 34, 61, 63, 67, 69, 70, 71, 73, 74, 76, 79, 80, 81, 93, 98, 101, 110, 114], "easili": [10, 28], "slice_2d": 10, "to_3d": [10, 16, 17, 57, 61, 74], "to_planar": [10, 16, 61, 74], "rdf": 10, "xmln": 10, "dc": 10, "purl": 10, "cc": 10, "creativecommon": 10, "www": [10, 19, 24, 30, 73, 105, 106], "w3": 10, "1999": 10, "22": [10, 15], "syntax": 10, "type": [10, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "resourc": [10, 16, 17, 85, 95, 110, 113], "dcmityp": 10, "stillimag": 10, "2022": 10, "02t16": 10, "09": 10, "700498": 10, "creator": 10, "agent": 10, "v3": [10, 92, 108], "css": 10, "stroke": 10, "linejoin": 10, "round": [10, 58, 108], "linecap": 10, "butt": 10, "take": [10, 16, 17, 47, 50, 63, 73, 80, 86, 102, 108, 126], "bunch": 10, "parallel": [10, 16, 17, 47, 54, 57, 72, 78, 83, 86], "printer": 10, "section_multiplan": [10, 16, 17], "evenli": [10, 61, 63, 74, 75, 80, 97, 108], "space": [10, 16, 17, 19, 25, 26, 45, 57, 59, 61, 62, 63, 65, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 97, 98, 99, 100, 101, 106, 108, 110, 113, 121, 122, 123, 126, 128], "chunk": [10, 67], "minz": [10, 30], "maxz": [10, 30], "z_extent": 10, "125": 10, "eg": [10, 16, 17, 32, 34, 39, 48, 93, 98, 101, 102, 107, 108], "inch": [10, 16, 17, 98, 101, 107], "z_level": 10, "arang": [10, 80, 85], "304": 10, "entiti": [10, 16, 61, 67, 70, 74, 79, 80, 117], "636": 10, "616": 10, "610": 10, "739": 10, "547": 10, "735": 10, "18": [10, 15], "186": 10, "put": [10, 33, 48, 65, 107], "combin": [10, 16, 17, 48, 91, 108, 118, 120], "243229": 10, "polygons_ful": [10, 16, 61, 74], "class": [10, 16, 17, 20, 21, 23, 28, 30, 34, 46, 48, 53, 60, 61, 65, 73, 74, 80, 82, 83, 85, 86, 88, 89, 95, 98, 99, 100, 101, 102, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128], "__class__": 10, "multilinestr": [10, 16, 69, 70], "red": [10, 115, 117], "green": [10, 115, 117], "ax": [10, 16, 17, 30, 49, 75, 91, 105, 124], "gca": 10, "h": [10, 54, 89, 104], "geom": 10, "404199": 10, "medial": [10, 61, 74, 75], "medial_axi": [10, 16, 61, 74, 75], "681466": 10, "ngiven": 11, "nbetween": 11, "nof": 11, "nx": [11, 16, 17, 47, 80], "edges_uniqu": [11, 16, 17], "actual": [11, 16, 17, 28, 74, 103, 108, 110, 113, 114], "length": [11, 16, 17, 22, 25, 26, 30, 39, 47, 48, 54, 61, 63, 65, 73, 74, 75, 76, 78, 83, 85, 86, 92, 97, 98, 99, 101, 106, 108, 121, 122, 123, 124, 126, 127], "edges_unique_length": [11, 16, 17], "l": [11, 22, 78, 127], "zip": [11, 16, 31, 42, 95, 108], "add_edg": [11, 16, 98, 102], "start": [11, 16, 17, 39, 47, 58, 62, 67, 77, 78, 83, 91, 95, 108, 110, 113, 114, 124, 127], "shortest_path": [11, 16, 98, 102], "path_visu": 11, "nload": 12, "fuze": 12, "664": 12, "overview": 13, "ipynb": 13, "save_imag": [13, 16, 98, 101, 110, 114], "shortest": [13, 48, 102], "quick_start": 13, "curvatur": [13, 16, 17, 25, 104], "importerror": 14, "runtim": 14, "isn": [14, 16, 17, 20, 48, 75], "mac": 14, "extra": [14, 16, 21, 33, 98, 101, 102], "Or": [14, 54], "prefer": [14, 39], "forg": 14, "feedstock": 14, "repo": [14, 95], "miniconda": 14, "subprocess": [14, 30], "them": [14, 16, 17, 20, 39, 43, 46, 47, 48, 57, 58, 61, 62, 70, 74, 75, 77, 78, 80, 85, 98, 101, 102, 108, 118, 124, 126], "apt": 14, "sudo": 14, "lot": [14, 47, 108, 117], "upstream": 14, "sure": [14, 16, 17, 75, 94, 110, 113], "big": [14, 73], "quick": [14, 24], "summari": 14, "level": [14, 42, 108, 110, 113], "spatial": [14, 16, 17, 74, 83, 98, 101], "convexhul": 14, "csgraph": [14, 47], "ckdtree": [14, 16, 17, 74, 83, 91], "b": [14, 16, 17, 46, 48, 58, 61, 64, 65, 67, 74, 79, 91, 92, 95, 104, 108, 121, 122, 126], "spline": [14, 23, 61, 64, 65, 74, 79], "interpol": [14, 16, 91, 115, 117], "noth": [14, 16, 98, 101, 110, 113, 117], "mind": [14, 110, 113], "whole": [14, 16, 98, 101], "heck": 14, "annoi": 14, "abil": 14, "parent": [14, 16, 61, 65, 74, 98, 101, 102, 113, 116], "node": [14, 16, 17, 21, 42, 47, 61, 65, 73, 74, 80, 98, 99, 100, 101, 102, 106, 110, 114], "think": 14, "df": [14, 47], "bf": [14, 47], "faang": 14, "interview": 14, "been": [14, 16, 17, 22, 39, 110, 113, 115, 117], "written": [14, 16, 17, 65, 83, 108], "But": 14, "grok": 14, "bind": [14, 55], "geo": 14, "theoret": 14, "planar": [14, 16, 17, 23, 61, 74, 84], "offset": [14, 16, 17, 57, 73, 98, 101, 110, 114], "clipper": 14, "mayb": 14, "nd": [14, 83, 124], "rectangl": [14, 16, 19, 61, 63, 73], "broad": [14, 89, 106, 108], "phase": [14, 89, 106, 108], "fcl": [14, 21], "exchang": [14, 16, 53, 61], "load_remot": [14, 16, 29, 34], "sympi": [14, 50, 107], "algebra": 14, "msgpack": [14, 16, 17, 35], "serial": 14, "byte": [14, 16, 30, 32, 33, 35, 36, 39, 40, 42, 54, 68, 74, 95, 96, 98, 101, 108, 110, 114, 118, 121, 122], "protobuf": 14, "chardet": [14, 108], "fail": [14, 16, 17, 28, 75, 107, 108], "decod": [14, 96, 108, 127], "utf": [14, 96, 108], "guess": [14, 16, 17, 59, 74, 79, 98, 101, 107, 108], "encod": [14, 16, 30, 32, 35, 39, 74, 98, 101, 105, 108, 110, 111, 117, 121, 122, 123, 125, 127], "u": [14, 20, 102, 108], "weird": [14, 93], "colorlog": [14, 108], "log": [14, 16, 17, 23, 59, 61, 74, 79, 97, 108], "pillow": [14, 76], "read": [14, 20, 30, 39, 67, 113], "raster": [14, 16, 61, 74], "jsonschema": [14, 33, 103], "pycollada": 14, "dae": [14, 16, 29, 34], "xatla": [14, 16, 17], "unwrap": [14, 16, 17, 51, 52], "collis": [14, 16, 106, 108], "glooei": [14, 113], "widget": [14, 16, 110], "meshio": [14, 35], "addit": [14, 16, 17, 23, 31, 47, 104, 108, 110, 114, 121, 122, 123, 125], "scikit": [14, 121, 122], "op": [14, 16, 120, 121, 124], "mapbox": [14, 25], "earcut": [14, 25], "triangul": [14, 16, 17, 25, 26, 57, 61, 70, 74, 92], "unusu": 14, "licens": 14, "psutil": 14, "memori": [14, 16, 17, 83, 123], "usag": [14, 108], "instanti": [14, 33, 74], "pypandoc": 15, "recommonmark": 15, "sphinx": 15, "sphinx_rtd_them": 15, "myst": 15, "parser": 15, "pyopenssl": 15, "autodocsumm": 15, "jinja2": 15, "nbconvert": 15, "binvox": [16, 29, 121, 122], "rle_data": [16, 29, 30, 124, 127], "scale": [16, 17, 23, 29, 30, 43, 60, 61, 62, 64, 65, 71, 74, 75, 79, 80, 82, 88, 91, 98, 100, 101, 105, 107, 112, 121, 122, 128], "supported_input_typ": [16, 29, 30], "supported_output_typ": [16, 29, 30], "__init__": [16, 17, 20, 21, 23, 28, 29, 30, 31, 34, 51, 53, 61, 65, 73, 74, 80, 82, 83, 85, 86, 87, 88, 89, 95, 98, 99, 100, 101, 102, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 124, 128], "file_typ": [16, 17, 29, 30, 32, 34, 35, 38, 60, 68, 69, 71, 74, 83, 98, 101, 108, 121, 122], "binvox_byt": [16, 29, 30], "binvox_head": [16, 29, 30], "export_binvox": [16, 29, 30], "load_binvox": [16, 29, 30], "parse_binvox": [16, 29, 30], "parse_binvox_head": [16, 29, 30], "voxel_from_binvox": [16, 29, 30], "voxelize_mesh": [16, 29, 30], "export_collada": [16, 29, 31], "load_collada": [16, 29, 31], "load_za": [16, 29, 31], "export_dict": [16, 29, 32, 61, 66, 68], "export_dict64": [16, 29, 32], "export_json": [16, 29, 32], "export_mesh": [16, 29, 32], "export_msgpack": [16, 29, 32], "export_scen": [16, 29, 32], "scene_to_dict": [16, 29, 32], "export_glb": [16, 29, 33], "export_gltf": [16, 29, 33], "get_schema": [16, 29, 33, 96], "load_glb": [16, 29, 33], "load_gltf": [16, 29, 33], "specular_to_pbr": [16, 29, 33], "available_format": [16, 29, 34], "load_compress": [16, 29, 34], "load_kwarg": [16, 29, 34, 36, 41], "mesh_format": [16, 29, 34], "parse_file_arg": [16, 29, 34], "misc": [16, 29, 30, 61, 66], "load_dict": [16, 29, 35], "load_meshio": [16, 29, 35], "load_msgpack": [16, 29, 35], "export_obj": [16, 29, 36], "load_obj": [16, 29, 36], "parse_mtl": [16, 29, 36], "export_off": [16, 29, 37], "load_off": [16, 29, 37], "openctm": [16, 29], "load_ctm": [16, 29, 38], "add_attributes_to_data_arrai": [16, 29, 39], "add_attributes_to_dtyp": [16, 29, 39], "add_attributes_to_head": [16, 29, 39], "assert_attributes_valid": [16, 29, 39], "element_color": [16, 29, 39], "elements_to_kwarg": [16, 29, 39], "export_draco": [16, 29, 39], "export_pli": [16, 29, 39], "load_draco": [16, 29, 39], "load_element_differ": [16, 29, 39], "load_element_singl": [16, 29, 39], "load_pli": [16, 29, 39], "numpy_type_to_ply_typ": [16, 29, 39], "parse_head": [16, 29, 39], "ply_ascii": [16, 29, 39], "ply_binari": [16, 29, 39], "headererror": [16, 29, 40], "export_stl": [16, 29, 40], "export_stl_ascii": [16, 29, 40], "load_stl": [16, 29, 40], "load_stl_ascii": [16, 29, 40], "load_stl_binari": [16, 29, 40], "threedxml": [16, 29], "load_3dxml": [16, 29, 41], "print_el": [16, 29, 41], "threemf": [16, 29], "export_3mf": [16, 29, 42], "load_3mf": [16, 29, 42], "export_urdf": [16, 29, 43], "load_xaml": [16, 29, 44], "export_xyz": [16, 29, 45], "load_xyz": [16, 29, 45], "meshscript": [16, 51, 53], "load_gmsh": [16, 51, 54], "to_volum": [16, 51, 54], "scad": [16, 18, 51], "interface_scad": [16, 51, 55], "vhacd": [16, 51], "convex_decomposit": [16, 17, 27, 51, 56], "bulge_to_arc": [16, 61, 66, 67], "convert_ent": [16, 61, 66, 67], "export_dxf": [16, 61, 66, 67], "get_kei": [16, 61, 66, 67], "load_dxf": [16, 61, 66, 67], "export_path": [16, 61, 66, 68], "path_format": [16, 61, 66, 69], "dict_to_path": [16, 61, 66, 70], "edges_to_path": [16, 61, 66, 70], "faces_to_path": [16, 61, 66, 70], "lines_to_path": [16, 61, 66, 70], "linestrings_to_path": [16, 61, 66, 70], "polygon_to_path": [16, 61, 66, 70], "svg_io": [16, 61, 66], "export_svg": [16, 61, 66, 71], "svg_to_path": [16, 61, 66, 71], "transform_to_matric": [16, 61, 66, 71], "arc": [16, 23, 61, 65, 67, 74, 79, 80], "arc_cent": [16, 61, 62], "discretize_arc": [16, 61, 62], "to_threepoint": [16, 61, 62], "box_outlin": [16, 61, 63], "circl": [16, 23, 24, 59, 61, 62, 63, 65, 74, 79, 85], "circle_pattern": [16, 61, 63], "binomi": [16, 61, 64], "discretize_bezi": [16, 61, 64], "discretize_bsplin": [16, 61, 64], "is_valid": [16, 61, 65, 98, 101], "bspline": [16, 61, 65, 74, 79], "to_dict": [16, 17, 61, 65, 74, 85], "bezier": [16, 61, 64, 65], "end_point": [16, 26, 61, 65], "explod": [16, 61, 65, 74, 75, 98, 101], "layer": [16, 61, 65, 67, 71, 74, 110, 113], "metadata": [16, 17, 34, 61, 65, 67, 74, 83, 98, 101, 102, 107, 110, 114, 121, 122, 128], "revers": [16, 17, 47, 61, 65, 80, 108, 127], "line_lin": [16, 61, 72], "pack": [16, 35, 61, 115, 118], "rectanglebin": [16, 61, 73], "insert": [16, 54, 61, 67, 73, 94], "rectangles_singl": [16, 61, 73], "apply_lay": [16, 61, 74], "convert_unit": [16, 17, 61, 74, 98, 101], "dangl": [16, 61, 74], "discretize_path": [16, 61, 74, 80], "fill_gap": [16, 61, 74, 77], "is_clos": [16, 61, 67, 74], "is_empti": [16, 17, 20, 60, 61, 74, 83, 98, 101, 121, 122, 124], "kdtree": [16, 17, 61, 74, 83], "merge_vertic": [16, 17, 48, 61, 74, 83], "referenced_vertic": [16, 17, 61, 74], "remove_duplicate_ent": [16, 61, 74], "remove_ent": [16, 61, 74], "remove_invalid": [16, 61, 74], "remove_unreferenced_vertic": [16, 17, 61, 74], "replace_vertex_refer": [16, 61, 74], "rezero": [16, 17, 61, 74, 98, 101], "vertex_graph": [16, 61, 74, 80], "vertex_nod": [16, 61, 74], "apply_obb": [16, 60, 61, 74], "apply_scal": [16, 60, 61, 74, 121, 128], "area": [16, 17, 26, 47, 50, 61, 73, 74, 75, 82, 85, 97, 98, 101, 106], "body_count": [16, 17, 61, 74], "connected_path": [16, 61, 74], "enclosur": [16, 61, 74], "enclosure_direct": [16, 61, 74], "enclosure_shel": [16, 61, 74], "extrud": [16, 25, 61, 74, 78, 85], "identifier_hash": [16, 17, 22, 61, 74], "identifier_md5": [16, 17, 61, 74], "obb": [16, 60, 61, 73, 74, 75, 85], "path_valid": [16, 61, 74], "plot_discret": [16, 61, 74], "plot_ent": [16, 61, 74], "polygons_clos": [16, 61, 74], "simplifi": [16, 17, 23, 61, 74], "simplify_splin": [16, 61, 74, 79], "edges_to_polygon": [16, 61, 75], "enclosure_tre": [16, 61, 75], "paths_to_polygon": [16, 61, 75], "polygon_hash": [16, 61, 75], "polygon_obb": [16, 61, 75], "polygon_scal": [16, 61, 75], "polygons_obb": [16, 61, 75], "random_polygon": [16, 61, 75], "repair_invalid": [16, 61, 75], "resample_boundari": [16, 61, 75], "second_mo": [16, 61, 75], "stack_boundari": [16, 61, 75], "transform_polygon": [16, 61, 75], "colinear_pair": [16, 61, 78], "overlap": [16, 58, 61, 74, 75, 78], "parameters_to_seg": [16, 61, 78], "resampl": [16, 61, 75, 78, 79, 80, 120], "segments_to_paramet": [16, 61, 78], "to_svg": [16, 61, 78], "fit_circle_check": [16, 61, 79], "is_circl": [16, 61, 79], "merge_colinear": [16, 61, 79], "points_to_spline_ent": [16, 61, 79], "resample_splin": [16, 61, 79], "simplify_bas": [16, 61, 79], "travers": [16, 47, 61, 83, 94, 102], "pathsampl": [16, 61, 80], "truncat": [16, 25, 61, 80], "closed_path": [16, 61, 80], "resample_path": [16, 61, 80], "vertex_to_entity_path": [16, 61, 80], "ray_pyembre": [16, 87], "raymeshintersector": [16, 87, 88, 89], "contains_point": [16, 87, 88, 89], "intersects_ani": [16, 87, 88, 89], "intersects_first": [16, 87, 88, 89], "intersects_id": [16, 87, 88, 89], "ray_triangl": [16, 87], "ray_bound": [16, 87, 89], "ray_triangle_candid": [16, 87, 89], "ray_triangle_id": [16, 87, 89], "ray_util": [16, 87], "camera": [16, 25, 98, 101, 110, 112, 114], "k": [16, 83, 86, 92, 98, 99], "focal": [16, 98, 99], "fov": [16, 25, 98, 99, 101], "look_at": [16, 98, 99], "resolut": [16, 17, 61, 74, 75, 76, 93, 98, 99, 101, 110, 114, 123], "to_rai": [16, 98, 99], "camera_to_rai": [16, 98, 99], "ray_pixel_coord": [16, 98, 99], "directionallight": [16, 98, 100], "intens": [16, 98, 100], "radiu": [16, 17, 19, 23, 25, 26, 47, 48, 49, 59, 62, 63, 65, 75, 78, 79, 83, 85, 86, 97, 98, 100, 123], "pointlight": [16, 98, 100], "spotlight": [16, 98, 100], "innerconeangl": [16, 98, 100], "outerconeangl": [16, 98, 100], "autolight": [16, 98, 100], "add_geometri": [16, 98, 101, 110, 114], "bounds_corn": [16, 98, 101], "camera_rai": [16, 98, 101], "camera_transform": [16, 98, 99, 101], "dedupl": [16, 73, 98, 101, 118], "delete_geometri": [16, 98, 101], "duplicate_nod": [16, 98, 101], "geometry_identifi": [16, 98, 101], "has_camera": [16, 98, 101], "set_camera": [16, 98, 101], "strip_visu": [16, 98, 101], "subscen": [16, 98, 101], "triangles_nod": [16, 98, 101], "append_scen": [16, 98, 101], "split_scen": [16, 98, 101], "enforcedforest": [16, 98, 102], "children": [16, 98, 101, 102, 110, 113], "remove_nod": [16, 98, 102], "successor": [16, 98, 102], "scenegraph": [16, 98, 102], "clear": [16, 17, 20, 83, 98, 102, 110, 113], "from_edgelist": [16, 17, 98, 102], "geometry_nod": [16, 98, 102], "nodes_geometri": [16, 98, 102], "remove_geometri": [16, 98, 102], "to_edgelist": [16, 98, 102], "to_flatten": [16, 98, 102], "to_gltf": [16, 98, 102], "to_networkx": [16, 98, 102], "updat": [16, 17, 20, 74, 98, 101, 102, 110, 112, 113, 114], "kwargs_to_matrix": [16, 98, 102], "in_notebook": [16, 110, 111], "scene_to_html": [16, 110, 111], "scene_to_notebook": [16, 110, 111], "trackbal": [16, 110], "state_pan": [16, 110, 112], "state_rol": [16, 110, 112], "state_rot": [16, 110, 112], "state_zoom": [16, 110, 112], "down": [16, 17, 110, 112, 113, 124], "pose": [16, 17, 110, 112], "resiz": [16, 110, 112, 114, 120], "scroll": [16, 110, 112, 113], "set_stat": [16, 110, 112, 113], "meshgroup": [16, 110, 113], "unset_st": [16, 110, 113], "scenegroup": [16, 110, 113], "scenewidget": [16, 110, 113], "do_claim": [16, 110, 113], "do_draw": [16, 110, 113], "do_regroup": [16, 110, 113], "do_undraw": [16, 110, 113], "on_mouse_drag": [16, 110, 113, 114], "on_mouse_press": [16, 110, 113, 114], "on_mouse_scrol": [16, 110, 113, 114], "reset_view": [16, 110, 113, 114], "scene_group": [16, 110, 113], "sceneview": [16, 98, 101, 110, 114], "cleanup_geometri": [16, 110, 114], "flip": [16, 94, 110, 114, 121, 124], "hide_geometri": [16, 110, 114], "init_gl": [16, 110, 114], "on_draw": [16, 110, 114], "on_key_press": [16, 110, 114], "on_res": [16, 110, 114], "toggle_axi": [16, 110, 114], "toggle_cul": [16, 110, 114], "toggle_fullscreen": [16, 110, 114], "toggle_grid": [16, 110, 114], "toggle_wirefram": [16, 110, 114], "unhide_geometri": [16, 110, 114], "update_flag": [16, 110, 114], "geometry_hash": [16, 110, 114], "render_scen": [16, 110, 114], "update_fac": [16, 17, 115, 116, 117, 120], "update_vertic": [16, 17, 115, 116, 117, 120], "colorvisu": [16, 17, 98, 101, 115, 117, 119, 120], "defin": [16, 17, 24, 25, 39, 57, 58, 60, 63, 65, 74, 77, 78, 83, 85, 98, 99, 100, 101, 108, 115, 117, 118, 120, 128], "face_subset": [16, 115, 117, 120], "main_color": [16, 115, 117, 118], "to_textur": [16, 115, 117], "transpar": [16, 115, 117, 118], "vertex_color": [16, 17, 115, 117, 118, 119], "vertexcolor": [16, 115, 117], "colors_to_materi": [16, 115, 117], "face_to_vertex_color": [16, 115, 117], "hex_to_rgba": [16, 115, 117], "linear_color_map": [16, 115, 117], "to_float": [16, 115, 117], "to_rgba": [16, 115, 117], "uv_to_color": [16, 115, 117], "uv_to_interpolated_color": [16, 115, 117], "vertex_to_face_color": [16, 115, 117], "multimateri": [16, 115, 118], "to_pbr": [16, 115, 118], "pbrmateri": [16, 33, 115, 118], "alphacutoff": [16, 115, 118], "alphamod": [16, 115, 118], "basecolorfactor": [16, 115, 118], "basecolortextur": [16, 115, 118], "doublesid": [16, 115, 118], "emissivefactor": [16, 115, 118], "metallicfactor": [16, 115, 118], "roughnessfactor": [16, 115, 118], "to_color": [16, 115, 118, 120], "to_simpl": [16, 115, 118], "simplemateri": [16, 115, 118, 120], "glossi": [16, 115, 118], "to_obj": [16, 115, 118], "empty_materi": [16, 115, 118], "from_color": [16, 115, 118], "create_visu": [16, 115, 119], "texturevisu": [16, 17, 115, 119, 120], "power_res": [16, 73, 115, 120], "unmerge_fac": [16, 115, 120], "voxelgrid": [16, 17, 30, 121, 122, 123], "as_box": [16, 121, 122], "element_volum": [16, 121, 122], "filled_count": [16, 121, 122], "hollow": [16, 121, 122], "indices_to_point": [16, 121, 122, 126], "is_fil": [16, 108, 121, 122], "marching_cub": [16, 121, 122, 126], "pitch": [16, 17, 61, 74, 76, 121, 122, 123, 126, 128], "points_to_indic": [16, 121, 122, 126], "revoxel": [16, 121, 122], "sparse_indic": [16, 121, 122, 124, 126], "strip": [16, 98, 101, 108, 121, 122, 124, 127], "local_voxel": [16, 121, 123], "binaryrunlengthencod": [16, 121, 124], "binary_run_length_data": [16, 121, 124], "dens": [16, 19, 46, 121, 122, 124, 125, 126, 127], "from_brl": [16, 121, 124], "from_dens": [16, 121, 124], "from_rl": [16, 121, 124], "gather": [16, 34, 121, 124, 127], "gather_nd": [16, 121, 124], "mask": [16, 17, 57, 74, 83, 108, 115, 117, 118, 120, 121, 124, 127], "run_length_data": [16, 121, 124], "sorted_gath": [16, 121, 124], "sparse_compon": [16, 121, 124], "sparse_valu": [16, 121, 124], "denseencod": [16, 121, 124], "flat": [16, 17, 30, 75, 93, 102, 108, 121, 124], "get_valu": [16, 121, 124], "mutabl": [16, 20, 104, 121, 124], "ndim": [16, 121, 124], "transpos": [16, 105, 121, 124], "flattenedencod": [16, 121, 124], "flippedencod": [16, 121, 124], "lazyindexmap": [16, 121, 124], "runlengthencod": [16, 30, 121, 124], "shapedencod": [16, 121, 124], "sparsebinaryencod": [16, 121, 124], "sparseencod": [16, 121, 124], "transposedencod": [16, 121, 124], "perm": [16, 121, 124], "morphologi": [16, 108, 121, 122], "binary_clos": [16, 121, 125], "binary_dil": [16, 121, 125], "boolean_spars": [16, 121, 126], "fill_bas": [16, 121, 126], "fill_orthograph": [16, 121, 126], "fill_voxel": [16, 121, 126], "matrix_to_marching_cub": [16, 121, 126], "matrix_to_point": [16, 121, 126], "multibox": [16, 121, 126], "points_to_marching_cub": [16, 121, 126], "sparse_to_matrix": [16, 121, 126], "strip_arrai": [16, 121, 126], "runlength": [16, 121, 124], "brle_gather_1d": [16, 121, 127], "brle_gatherer_1d": [16, 121, 127], "brle_length": [16, 121, 127], "brle_logical_not": [16, 121, 127], "brle_mask": [16, 121, 127], "brle_revers": [16, 121, 127], "brle_strip": [16, 121, 127], "brle_to_brl": [16, 121, 127], "brle_to_dens": [16, 121, 127], "brle_to_rl": [16, 121, 127], "brle_to_spars": [16, 121, 127], "dense_to_brl": [16, 121, 127], "dense_to_rl": [16, 121, 127], "merge_brle_length": [16, 121, 127], "merge_rle_length": [16, 121, 127], "rle_gather_1d": [16, 121, 127], "rle_gatherer_1d": [16, 121, 127], "rle_length": [16, 121, 127], "rle_mask": [16, 121, 127], "rle_revers": [16, 121, 127], "rle_strip": [16, 121, 127], "rle_to_brl": [16, 121, 127], "rle_to_dens": [16, 121, 127], "rle_to_rl": [16, 121, 127], "rle_to_spars": [16, 121, 127], "sorted_brle_gather_1d": [16, 121, 127], "sorted_rle_gather_1d": [16, 121, 127], "split_long_brle_length": [16, 121, 127], "split_long_rle_length": [16, 121, 127], "apply_transl": [16, 60, 121, 128], "inverse_matrix": [16, 121, 128], "inverse_transform_point": [16, 121, 128], "is_ident": [16, 121, 128], "transform_point": [16, 121, 128], "unit_volum": [16, 121, 128], "area_fac": [16, 17], "as_open3d": [16, 17], "compute_stable_pos": [16, 17, 84], "densiti": [16, 17, 73, 84, 106], "edges_fac": [16, 17], "edges_sort": [16, 17, 47], "edges_sorted_tre": [16, 17], "edges_spars": [16, 17], "edges_unique_invers": [16, 17], "eval_cach": [16, 17], "face_adjac": [16, 17, 24, 47], "face_adjacency_angl": [16, 17], "face_adjacency_convex": [16, 17], "face_adjacency_edg": [16, 17], "face_adjacency_edges_tre": [16, 17], "face_adjacency_project": [16, 17], "face_adjacency_radiu": [16, 17, 47], "face_adjacency_span": [16, 17], "face_adjacency_tre": [16, 17], "face_adjacency_unshar": [16, 17, 47], "face_angl": [16, 17, 46], "face_angles_spars": [16, 17, 26], "face_neighborhood": [16, 17, 47], "face_norm": [16, 17, 35, 40, 46], "faces_spars": [16, 17, 46, 47], "faces_unique_edg": [16, 17], "facets_area": [16, 17], "facets_boundari": [16, 17], "facets_norm": [16, 17], "facets_on_hul": [16, 17], "facets_origin": [16, 17], "fill_hol": [16, 17, 94], "fix_norm": [16, 17, 94], "integral_mean_curvatur": [16, 17], "invert": [16, 17, 22, 94, 105], "is_convex": [16, 17, 24], "is_volum": [16, 17], "is_winding_consist": [16, 17], "mass_properti": [16, 17, 106], "outlin": [16, 17, 24, 61, 63, 70, 74, 75, 76, 85], "principal_inertia_compon": [16, 17], "principal_inertia_transform": [16, 17], "principal_inertia_vector": [16, 17], "remove_degenerate_fac": [16, 17], "remove_duplicate_fac": [16, 17], "remove_infinite_valu": [16, 17], "simplify_quadratic_decim": [16, 17], "slice_plan": [16, 17], "subdivide_loop": [16, 17, 92], "subdivide_to_s": [16, 17, 92], "submesh": [16, 17, 108], "symmetri": [16, 17, 49], "symmetry_axi": [16, 17], "symmetry_sect": [16, 17], "triangles_cent": [16, 17], "triangles_cross": [16, 17], "triangles_tre": [16, 17], "vertex_adjacency_graph": [16, 17, 47], "vertex_defect": [16, 17, 26], "vertex_degre": [16, 17], "vertex_fac": [16, 17, 46], "vertex_neighbor": [16, 17], "vertex_norm": [16, 17, 35, 39, 46, 104], "boolean_automat": [16, 18], "corner": [16, 19, 46, 80, 98, 101], "minimum_cylind": [16, 19], "oriented_bound": [16, 19], "oriented_bounds_2d": [16, 19], "to_ext": [16, 19], "delet": [16, 20, 21, 98, 101, 102, 110, 113], "id_set": [16, 20], "verifi": [16, 20], "datastor": [16, 20], "fast_hash": [16, 20], "diskcach": [16, 20], "cache_decor": [16, 20], "hash_fallback": [16, 20], "sha256": [16, 17, 20, 22, 61, 74], "tracked_arrai": [16, 20], "collisionmanag": [16, 21], "add_object": [16, 21], "in_collision_intern": [16, 21], "in_collision_oth": [16, 21], "in_collision_singl": [16, 21], "min_distance_intern": [16, 21], "min_distance_oth": [16, 21], "min_distance_singl": [16, 21], "remove_object": [16, 21], "set_transform": [16, 21], "contactdata": [16, 21], "depth": [16, 21, 47, 108], "distancedata": [16, 21], "mesh_to_bvh": [16, 21], "mesh_to_convex": [16, 21], "scene_to_collis": [16, 21], "comparison": [16, 65, 74, 91], "face_ord": [16, 22], "identifier_simpl": [16, 22], "constant": [16, 80, 104], "resolutionpath": [16, 23], "tolerancemesh": [16, 23], "tolerancepath": [16, 23], "log_tim": [16, 23], "adjacency_project": [16, 24], "hull_point": [16, 24], "annulu": [16, 25], "camera_mark": [16, 25], "capsul": [16, 25, 85], "cone": [16, 25, 100], "extrude_polygon": [16, 25], "extrude_triangul": [16, 25], "icosahedron": [16, 25], "random_soup": [16, 25], "revolv": [16, 17, 25, 112], "sweep_polygon": [16, 25], "triangulate_polygon": [16, 25, 61, 74], "truncated_pr": [16, 25], "uv_spher": [16, 25], "line_ball_intersect": [16, 26], "decomposit": [16, 17, 43, 56], "exceptionmodul": [16, 28], "closur": [16, 28], "align_vector": [16, 46], "faces_to_edg": [16, 46], "index_spars": [16, 46], "mean_vertex_norm": [16, 46], "plane_transform": [16, 46], "triangulate_quad": [16, 46], "vector_angl": [16, 46], "vertex_face_indic": [16, 46], "weighted_vertex_norm": [16, 46], "connected_component_label": [16, 47], "connected_compon": [16, 17, 47], "edges_to_coo": [16, 47], "fill_travers": [16, 47], "graph_to_svg": [16, 47], "multigraph_collect": [16, 47], "multigraph_path": [16, 47], "neighbor": [16, 17, 47, 91, 92, 104], "shared_edg": [16, 47], "split_travers": [16, 47], "boolean_row": [16, 48], "cluster": [16, 48, 83], "float_to_int": [16, 48], "group_dist": [16, 48], "group_min": [16, 48], "group_row": [16, 48], "group_vector": [16, 48], "hashable_row": [16, 47, 48], "merge_run": [16, 48], "unique_bincount": [16, 48], "unique_float": [16, 48], "unique_ord": [16, 48], "unique_row": [16, 48], "unique_value_in_row": [16, 48], "cylinder_inertia": [16, 49], "principal_axi": [16, 49], "radial_symmetri": [16, 49], "sphere_inertia": [16, 49], "transform_inertia": [16, 49], "substitute_barycentr": [16, 50], "mesh_multiplan": [16, 57], "mesh_plan": [16, 57], "plane_lin": [16, 57], "planes_lin": [16, 57], "slice_faces_plan": [16, 57], "slice_mesh_plan": [16, 57], "interv": 16, "nsphere": 16, "fit_nspher": [16, 59], "is_nspher": [16, 59], "minimum_nspher": [16, 59], "geometry3d": [16, 17, 60, 83, 98, 101], "bounding_primit": [16, 60], "permut": [16, 95], "nois": [16, 82], "k_mean": [16, 83], "major_axi": [16, 83], "plane_fit": [16, 83], "plot_point": [16, 83], "point_plane_dist": [16, 83], "project_to_plan": [16, 83], "radial_sort": [16, 83], "remove_clos": [16, 83], "tsp": [16, 83], "as_outlin": [16, 85], "is_ori": [16, 85], "sample_grid": [16, 85], "slide": [16, 85], "proxim": [16, 83, 91, 123], "nearestqueryresult": [16, 83, 86], "has_norm": [16, 86], "proximityqueri": [16, 86], "signed_dist": [16, 86], "closest_point_na": [16, 86], "longest_rai": [16, 86], "max_tangent_spher": [16, 86], "nearby_fac": [16, 86], "thick": [16, 86], "registr": 16, "icp": [16, 17, 91], "mesh_oth": [16, 91], "nricp_amberg": [16, 91], "nricp_sumn": [16, 91], "procrust": [16, 91], "remesh": [16, 82], "colors_to_gl": [16, 93], "convert_to_vertexlist": [16, 93, 110, 114], "light_to_gl": [16, 93], "material_to_textur": [16, 93], "matrix_to_gl": [16, 93], "mesh_to_vertexlist": [16, 93], "path_to_vertexlist": [16, 93], "points_to_vertexlist": [16, 93], "vector_to_gl": [16, 93], "broken_fac": [16, 94], "fix_invers": [16, 94], "fix_wind": [16, 94], "stitch": [16, 94], "resolv": [16, 30, 31, 32, 33, 34, 36, 39, 96, 103], "filepathresolv": [16, 95], "kei": [16, 17, 19, 20, 35, 36, 39, 40, 47, 48, 62, 65, 67, 70, 75, 95, 98, 101, 102, 103, 106, 108, 110, 114, 115, 117, 121, 122], "githubresolv": [16, 95], "webresolv": [16, 95], "zipresolv": [16, 95], "nearby_nam": [16, 95], "sample_surfac": [16, 97], "sample_surface_even": [16, 97], "sample_surface_spher": [16, 97], "volume_mesh": [16, 97], "volume_rectangular": [16, 97], "schema": [16, 17, 33, 85, 96], "dilate_slop": [16, 104], "filter_humphrei": [16, 104], "filter_laplacian": [16, 104], "filter_mut_dif_laplacian": [16, 104], "filter_taubin": [16, 104], "get_vertices_norm": [16, 104], "laplacian_calcul": [16, 104], "all_coplanar": [16, 106], "any_coplanar": [16, 106], "barycentric_to_point": [16, 106], "bounds_tre": [16, 106, 108], "nondegener": [16, 17, 106], "points_to_barycentr": [16, 106], "to_kwarg": [16, 106], "windings_align": [16, 106], "unit_convers": [16, 107], "units_from_metadata": [16, 107], "functionregistri": [16, 108], "temporarydirectori": [16, 108], "allclos": [16, 105, 108], "append_fac": [16, 108], "array_to_encod": [16, 35, 108], "array_to_str": [16, 108], "comment_strip": [16, 108], "compress": [16, 34, 39, 42, 108], "convert_lik": [16, 108], "decimal_to_digit": [16, 108], "decode_kei": [16, 108], "decode_text": [16, 108], "decompress": [16, 95, 108], "diagonal_dot": [16, 108], "distance_to_end": [16, 108], "encoded_to_arrai": [16, 35, 108], "euclidean": [16, 21, 83, 108], "generate_basi": [16, 108], "grid_arang": [16, 108], "grid_linspac": [16, 108], "has_modul": [16, 108], "is_binary_fil": [16, 108], "is_ccw": [16, 108], "is_instance_nam": [16, 108], "is_non": [16, 108], "is_pathlib": [16, 108], "is_sequ": [16, 108], "is_shap": [16, 108], "is_str": [16, 108], "isclos": [16, 108], "jsonifi": [16, 108], "make_sequ": [16, 108], "multi_dict": [16, 108], "pairwis": [16, 21, 108], "row_norm": [16, 108], "sigfig_int": [16, 108], "sigfig_round": [16, 108], "spherical_to_vector": [16, 108], "split_extens": [16, 108], "stack_3d": [16, 108], "stack_lin": [16, 108], "structured_array_to_str": [16, 108], "to_ascii": [16, 108], "tolist": [16, 108], "triangle_strips_to_fac": [16, 108], "type_bas": [16, 108], "type_nam": [16, 108], "unique_id": [16, 108], "unique_nam": [16, 108], "vector_hemispher": [16, 108], "vector_to_spher": [16, 108], "vstack_empti": [16, 108], "wrap_as_stream": [16, 108], "write_encod": [16, 108], "zero_pad": [16, 108], "fulli": [16, 61, 74, 83, 118], "hold": [16, 21, 23, 48, 61, 74, 83, 89, 100, 102, 117, 118, 119], "dict": [16, 17, 19, 20, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 57, 61, 62, 65, 67, 68, 69, 70, 71, 74, 75, 83, 85, 91, 92, 95, 96, 98, 101, 102, 106, 107, 108, 110, 114, 118, 121, 122], "homogen": [16, 17, 19, 21, 46, 61, 74, 75, 78, 83, 84, 85, 93, 97, 98, 101, 102, 105, 121, 122, 128], "maximum": [16, 17, 23, 48, 54, 61, 63, 74, 75, 78, 82, 83, 88, 91, 92, 93, 124, 127], "verteex": [16, 83], "self": [16, 17, 20, 26, 47, 61, 65, 74, 83, 85, 98, 99, 101, 102, 110, 114, 115, 117, 121, 122, 128], "safe": [16, 17, 83, 98, 99], "cloud": [16, 45, 83, 91], "empti": [16, 17, 20, 30, 74, 83, 85, 98, 101, 108, 118, 121, 122, 123, 125], "issu": [16, 17, 83, 110, 114], "initi": [16, 17, 21, 34, 54, 83, 91, 95, 98, 99, 101, 108, 110, 112, 113, 114, 118, 128], "until": [16, 17, 20, 78, 83, 92], "regener": [16, 17, 83], "file_obj": [16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 60, 67, 68, 69, 71, 74, 83, 98, 101, 108, 110, 114, 121, 122], "param": [16, 17, 78, 83, 104], "Not": [16, 17, 71, 83], "lead": [16, 17, 83, 121, 122, 127], "observ": [16, 17, 83], "segfault": [16, 17, 83], "closer": [16, 23, 48, 83], "tol": [16, 17, 23, 39, 48, 79, 83, 86], "1e": [16, 17, 23, 39, 75, 78, 83, 86, 89, 91, 108], "input_point": [16, 83], "associ": [16, 30, 67, 70, 75, 83, 102, 106, 110, 113, 115, 117, 127, 128], "argument": [16, 17, 28, 33, 34, 36, 38, 39, 42, 70, 83, 85, 93, 98, 101, 102, 105, 106, 110, 114, 115, 119], "query_from_point": [16, 83], "base_fram": [16, 98, 101, 102], "directli": [16, 17, 29, 61, 70, 74, 83, 98, 101], "endpoint": [16, 25, 57, 65, 67, 74, 78, 80, 98, 101, 127], "raytrac": [16, 17, 88, 98, 101], "ad": [16, 39, 65, 80, 94, 98, 101, 118], "hashabl": [16, 20, 47, 48, 65, 98, 101, 102, 110, 114, 121, 122], "transformforest": [16, 98, 101, 102], "node_nam": [16, 98, 101], "geom_nam": [16, 98, 101], "parent_node_nam": [16, 98, 101], "null": [16, 98, 101], "modifi": [16, 17, 20, 39, 79, 92, 98, 101, 110, 113, 114, 115, 120, 123, 125], "overal": [16, 17, 62, 65, 79, 80, 92, 98, 101], "min": [16, 17, 21, 30, 61, 65, 73, 74, 75, 85, 89, 98, 101, 108], "max": [16, 17, 30, 33, 46, 47, 48, 61, 65, 73, 74, 75, 85, 89, 98, 101, 108, 127], "post": [16, 33, 98, 101], "aabb": [16, 17, 19, 60, 65, 74, 75, 89, 98, 101], "manual": [16, 79, 91, 98, 101], "ab": [16, 98, 101], "pixel": [16, 61, 74, 76, 98, 99, 101, 110, 112, 114, 115, 118, 120], "correspond": [16, 17, 21, 33, 47, 48, 61, 74, 89, 91, 98, 99, 101, 106, 120, 127], "desir": [16, 17, 25, 74, 75, 79, 98, 101, 107, 108], "convert": [16, 17, 19, 30, 33, 34, 40, 42, 43, 47, 54, 58, 61, 62, 67, 71, 74, 78, 79, 80, 93, 98, 101, 105, 106, 108, 110, 111, 115, 117, 118, 120, 121, 122, 126, 127], "mm": [16, 30, 98, 101, 107], "onc": [16, 19, 48, 98, 101, 108], "discard": [16, 17, 75, 98, 101], "dedup": [16, 98, 101], "One": [16, 69, 86, 98, 99, 101, 106, 112, 115, 117, 118], "freez": [16, 98, 101], "ident": [16, 17, 48, 74, 84, 91, 98, 101, 108, 127], "Will": [16, 17, 28, 33, 91, 92, 94, 98, 99, 101, 104, 108], "repeat": [16, 48, 65, 98, 101, 127], "around": [16, 17, 25, 30, 49, 83, 85, 98, 101, 112, 123, 124, 125], "radial": [16, 17, 25, 49, 83, 98, 101], "spheric": [16, 17, 49, 98, 99, 101, 108], "snapshot": [16, 32, 98, 101], "ie": [16, 17, 32, 47, 48, 61, 69, 74, 78, 98, 101, 126], "dict64": [16, 17, 32, 98, 101], "side": [16, 17, 57, 63, 75, 85, 97, 98, 101, 106, 108, 110, 114, 118, 121, 122, 123], "anyth": [16, 34, 98, 101, 102, 106, 110, 113, 126], "png": [16, 98, 101, 110, 114], "approxim": [16, 17, 19, 27, 47, 56, 61, 62, 74, 75, 83, 88, 92, 97, 98, 101], "factor": [16, 17, 30, 60, 61, 74, 75, 97, 98, 101, 118, 121, 122, 128], "sane": [16, 98, 101, 117], "roughli": [16, 25, 39, 48, 91, 98, 101, 106, 108], "radian": [16, 17, 25, 46, 47, 48, 62, 65, 78, 98, 99, 100, 101, 102, 105, 106, 108, 112], "turn": [16, 20, 47, 48, 70, 74, 75, 76, 77, 78, 80, 98, 101, 108, 110, 113, 117, 126], "shade": [16, 17, 47, 93, 98, 101, 110, 114], "part": [16, 27, 30, 91, 98, 101, 108, 110, 113], "succe": [16, 98, 101, 102], "partial": [16, 33, 98, 101], "correctli": [16, 97, 98, 101, 108], "triangles_index": [16, 98, 101], "mix": [16, 34, 46, 98, 101], "face_attribut": [16, 17], "vertex_attribut": [16, 17, 92, 115, 120], "merge_tex": [16, 17, 48], "merge_norm": [16, 17, 48], "use_embre": [16, 17], "initial_cach": [16, 17], "inf": [16, 17, 47, 48], "immedi": [16, 17, 61, 74, 75], "alter": [16, 17, 20, 74, 82, 85, 94, 108, 117, 120], "ensur": [16, 17, 34, 108, 112], "consist": [16, 17, 19, 22, 25, 33, 49, 61, 62, 65, 74, 79], "fall": [16, 17], "slower": [16, 17, 23, 106], "expens": [16, 17, 20], "were": [16, 17, 65, 73, 83, 108, 110, 113, 120], "assign": [16, 17, 47, 91, 92, 94, 113], "bookkeep": [16, 17], "recomput": [16, 17, 57], "open3d": [16, 17], "trianglemesh": [16, 17], "meaningless": [16, 17, 123], "garbag": [16, 17], "averag": [16, 17, 91, 118], "unlik": [16, 17, 47], "sigma": [16, 17, 84], "n_sampl": [16, 17, 84], "threshold": [16, 17, 23, 73, 84, 86, 91, 108, 118], "quasi": [16, 17, 84], "static": [16, 17, 84, 105, 124], "multivari": [16, 17, 84], "cov": [16, 17], "equal": [16, 17, 48, 83, 84, 100, 104, 118], "rest": [16, 17, 30, 84], "workspac": [16, 17, 84], "land": [16, 17, 84], "drop": [16, 17, 84], "onto": [16, 17, 24, 46, 47, 61, 73, 74, 75, 83, 84, 91], "tabl": [16, 17, 84], "randomli": [16, 17, 82, 84, 97], "4x4": [16, 17, 84, 105, 121, 122, 128], "against": [16, 17, 21, 33, 49, 84, 91], "upward": [16, 17, 84], "probabilti": [16, 17, 84], "sort": [16, 17, 47, 48, 83, 84, 127], "assum": [16, 17, 30, 39, 65, 83, 84, 100, 108, 126, 127], "uniform": [16, 17, 84, 94, 105, 121, 122], "covari": [16, 17, 84], "touch": [16, 17, 65, 84], "prob": [16, 17, 84], "whether": [16, 17, 22, 39, 47, 49, 57, 61, 65, 72, 73, 74, 85, 86, 88, 89, 91, 96, 108, 110, 113, 114, 118], "error": [16, 17, 28, 30, 59, 91, 108], "cartesian": [16, 17, 24, 57, 62, 89, 106, 108, 128], "maxhul": [16, 17], "20": [16, 17, 25, 46, 91], "testvhacd": [16, 17], "concav": [16, 17, 24, 26], "001": [16, 17, 19, 79, 91], "alpha": [16, 17, 104, 105, 118], "05": [16, 17, 75, 78, 89, 91, 106], "beta": [16, 17, 104, 105], "pca": [16, 17], "64": [16, 17, 22, 61, 74], "0001": [16, 17, 48, 91, 108], "opencl": [16, 17], "acceler": [16, 17], "platform": [16, 17, 110, 114], "id": [16, 17, 20, 30, 105], "devic": [16, 17], "wrl": [16, 17], "keyword": [16, 17, 35, 36, 38, 39, 70, 75, 102, 106, 115, 119], "rtype": [16, 17, 65], "include_cach": [16, 17], "By": [16, 17, 60], "never": [16, 17], "shallow": [16, 17], "belong": [16, 17, 39, 83, 100], "map": [16, 17, 20, 91, 102, 108, 124, 127], "coo": [16, 17, 46, 47, 104], "invers": [16, 17, 48, 100, 102, 104, 127, 128], "reproduc": [16, 17], "referenc": [16, 17, 31, 32, 34, 36, 48, 55, 61, 65, 67, 70, 74, 94, 95, 96, 102, 103, 120], "long": [16, 17, 23, 127], "characterist": [16, 17], "topolog": [16, 17], "order": [16, 17, 19, 20, 21, 22, 25, 30, 47, 48, 62, 64, 67, 73, 80, 83, 102, 108, 112, 115, 117, 127], "correct": [16, 17, 24, 48, 91, 94, 100], "after": [16, 17, 25, 85, 108, 110, 113, 114, 121, 122], "arg": [16, 17, 30, 33, 34, 35, 39, 41, 44, 65, 75, 85, 91, 93, 95, 115, 117, 118, 119, 120, 121, 122], "code": [16, 17, 67, 105, 127], "eval": [16, 17], "writeabl": [16, 17, 20, 30], "file_nam": [16, 17, 29, 54, 108], "pair": [16, 17, 19, 20, 21, 46, 47, 54, 58, 73, 77, 78, 91, 97, 99, 108, 127], "1112": [16, 17], "949": [16, 17], "3467": [16, 17], "3475": [16, 17], "1113": [16, 17], "408": [16, 17], "1239": [16, 17], "int64": [16, 17, 46, 58, 124, 127], "adjacency_angl": [16, 17], "local": [16, 17, 34, 95, 100], "zero": [16, 17, 23, 26, 46, 47, 48, 75, 77, 78, 79, 89, 100, 106, 108, 121, 122, 124, 127], "neg": [16, 17, 26, 48, 65, 67, 86, 108], "are_convex": [16, 17], "perpendicular": [16, 17, 47, 83], "span": [16, 17, 23, 47, 62, 63, 79], "rectangular": [16, 17, 73, 97], "cell": [16, 17, 121, 122, 126], "vid_unshar": [16, 17, 47], "coo_matrix": [16, 17, 26, 46, 47, 104], "neighborhood": [16, 17, 47], "magnitud": [16, 17, 25, 62, 74, 82, 108], "regard": [16, 17], "cannot": [16, 17, 110, 114], "_data": [16, 17], "unique_edg": [16, 17], "6946": [16, 17], "24224": [16, 17], "1727": [16, 17], "24225": [16, 17], "total": [16, 17, 47, 61, 65, 73, 74, 83], "boundari": [16, 17, 30, 54, 61, 74, 75, 92, 94], "edges_boundari": [16, 17], "on_hul": [16, 17], "fix": [16, 17, 58, 77, 94, 110, 114], "outward": [16, 17, 24, 25], "wound": [16, 17], "multibodi": [16, 17, 94], "across": [16, 17, 50, 59], "pick": [16, 17, 18, 19, 91, 97], "hex": [16, 17, 117], "hand": [16, 17, 22, 110, 113], "tune": [16, 17, 22, 91], "sigfig": [16, 17, 108], "negat": [16, 17], "column": [16, 17, 45, 46, 93, 94, 105, 108, 124, 126, 127], "opposit": [16, 17, 94], "global": [16, 17, 123], "again": [16, 17, 57, 122], "taken": [16, 17], "digits_vertex": [16, 17, 48], "digits_norm": [16, 17, 48], "digits_uv": [16, 17, 48], "regardless": [16, 17, 48], "ignor": [16, 17, 31, 48, 71, 75, 100, 108, 118], "digit": [16, 17, 36, 37, 48, 58, 71, 74, 78, 108], "consid": [16, 17, 20, 22, 23, 47, 48, 58, 74, 78, 89, 91, 100, 104, 108, 117, 120], "face_id": [16, 17, 70], "those": [16, 17, 20, 34, 60, 61, 74, 92, 110, 113, 121, 122], "impli": [16, 17], "shorter": [16, 17, 74, 83, 92], "extract": [16, 17, 24, 35, 39, 65, 75, 105, 107], "pattern": [16, 17, 63, 75], "pad": [16, 17, 46, 75, 89, 99, 108, 124, 127], "proport": [16, 17, 75], "de": [16, 17, 19, 75, 104], "gap": [16, 17, 73, 75], "tol_dot": [16, 17, 75], "toler": [16, 17, 23, 48, 75, 78, 80], "max_region": [16, 17, 75], "region": [16, 17, 26, 61, 73, 74, 75, 76, 77, 123], "refin": [16, 17, 91], "icp_first": [16, 17, 91], "icp_fin": [16, 17, 91], "itert": [16, 17], "candid": [16, 17, 86, 89, 91], "wider": [16, 17, 91], "mesh_to_oth": [16, 17, 91], "cost": [16, 17, 91, 123], "08": [16, 17, 108], "On": [16, 17, 83, 110, 113], "finit": [16, 17, 104], "return_index": [16, 17, 46, 48, 78, 92], "face_weight": [16, 17, 97], "distribut": [16, 17, 80, 91, 97], "face_index": [16, 17, 57, 92, 97, 115, 117, 120], "metric": [16, 17], "diagon": [16, 17, 75, 112], "face_count": [16, 17, 25], "thin": [16, 17, 30, 108], "wrapper": [16, 17, 108, 118, 124, 125], "simplify_quadric_decim": [16, 17], "cap": [16, 17, 57], "cached_dot": [16, 17, 57], "portion": [16, 17, 57], "extern": [16, 17, 33, 57, 108], "new_mesh": [16, 17, 57], "half": [16, 17, 63, 98, 99], "smaller": [16, 17, 23, 47, 73, 92, 108], "appear": [16, 17, 47, 48], "facet_minarea": [16, 17, 47], "fraction": [16, 17, 47], "facets_minarea": [16, 17, 47], "larger": [16, 17, 19, 33, 47, 73, 79, 106], "individu": [16, 17, 97, 106, 108], "only_watertight": [16, 17, 47, 108], "remaind": [16, 17], "overrid": [16, 17, 19, 25, 47, 61, 74, 106, 110, 114], "custom": [16, 17, 33, 39, 48, 61, 74, 108], "separ": [16, 17, 33, 45, 54, 80, 108], "four": [16, 17, 92], "longer": [16, 17, 78, 79, 92, 110, 113, 114], "manifold": [16, 17], "midpoint": [16, 17], "postprocess": [16, 17, 42], "subdivis": [16, 17, 25, 85, 92], "catmul": [16, 17], "clark": [16, 17], "primarili": [16, 17, 47, 57], "max_edg": [16, 17, 92], "max_it": [16, 17, 61, 74, 75, 86, 91, 92], "structur": [16, 17, 21, 33, 39, 92, 102, 121, 122, 125], "faces_sequ": [16, 17, 108], "flag": [16, 17, 20, 65, 108, 110, 114, 128], "dictionari": [16, 17, 32, 61, 65, 67, 74, 102, 108], "match": [16, 17, 85, 88, 91, 108, 120], "barycentr": [16, 17, 50, 91, 106], "backend": [16, 17, 18, 47], "pil": [16, 17, 39, 61, 73, 74, 76, 115, 117, 118, 120], "vertex_mask": [16, 17], "reconstruct": [16, 17, 48], "nearbi": [16, 17, 47, 86, 95], "techniqu": [16, 17, 30, 47], "pi": [16, 17, 26, 62, 100], "minu": [16, 17, 26, 61, 74], "degre": [16, 17, 19, 30, 74, 79, 98, 99], "alreadi": [16, 17, 21], "mismatch": [16, 17], "extens": [16, 33, 34, 35, 69, 108], "loaded": [16, 34], "asset": [16, 31, 32, 34, 36, 39, 95, 103], "coerc": [16, 34], "everyth": [16, 20, 34], "file_object": [16, 69], "nativ": [16, 69, 88], "remot": [16, 34, 95], "must": [16, 30, 34, 39, 60, 83, 95, 100, 108, 118, 123, 124], "accident": [16, 34], "check_valid": [16, 108], "nonzero": [16, 106, 108], "cutoff": [16, 47, 100, 108, 118], "either": [18, 30, 35, 62, 67, 74, 75, 85, 95, 98, 99, 108], "dimens": [19, 24, 30, 48, 59, 60, 61, 62, 64, 65, 70, 74, 79, 80, 83, 108, 120], "points_insid": 19, "cube": [19, 30, 88, 121, 122, 123, 126, 128], "sample_count": 19, "angle_tol": 19, "hemispher": [19, 25, 108], "discuss": [19, 105], "staff": 19, "uni": 19, "mainz": 19, "schoemer": 19, "public": 19, "algo00": 19, "pdf": [19, 49, 105, 106], "angular": [19, 62], "180": [19, 24], "angle_digit": 19, "precis": [19, 22, 48, 58, 62, 65, 75, 79, 105], "less": [19, 24, 60, 91, 100, 108, 118], "cover": [19, 85, 110, 113], "albeit": 19, "to_origin": 19, "qhull_opt": [19, 24], "qbb": [19, 24], "AT": 19, "THE": 19, "ndarrai": [20, 108, 124], "23": [20, 105], "blake2b": 20, "hexdigest": 20, "102": 20, "684": 20, "24": [20, 105], "142": 20, "73": 20, "xxh3_64_intdigest": 20, "37": 20, "116": 20, "id_funct": 20, "force_immut": 20, "exclud": 20, "item": [20, 48, 103, 108], "still": [20, 23, 78], "reflect": [20, 22, 39, 74, 91, 105, 121, 122], "crc32": 20, "xxh64": 20, "checksum": 20, "is_mut": 20, "expire_dai": 20, "30": 20, "disk": 20, "expir": 20, "gigabyt": 20, "corpus": 20, "corpu": 20, "old": [20, 82], "fetch": [20, 36, 103], "recent": 20, "necessarili": 20, "ideal": 20, "wrong": 20, "__hash__": 20, "fastest": 20, "xxh3_64": 20, "xxh_64": 20, "decor": [20, 23, 60], "retriev": [20, 34, 95, 118], "foo": 20, "happi": [20, 55], "dai": 20, "properli": [20, 34, 108], "pitfal": 20, "contigu": [20, 48, 105], "manag": 21, "return_nam": [21, 67], "return_data": 21, "collid": 21, "is_collis": 21, "occur": [21, 30, 48, 104, 108, 115, 117, 121, 122, 127], "otherwis": [21, 34, 105, 106, 108, 118, 127], "tup": [21, 108], "tupl": [21, 30, 79, 91, 93, 99, 102, 105, 108, 121, 122, 127], "alphabet": 21, "contact": 21, "detect": [21, 75, 106, 108], "other_manag": 21, "second": [21, 75, 83, 108, 110, 114, 124], "prior": [21, 25, 59, 79], "penetr": [21, 75], "distanceresult": 21, "collisoin": 21, "bvhmodel": 21, "bvh": 21, "collisionobject": 21, "medium": 22, "sml": 22, "slm": 22, "rare": 22, "somewhat": 22, "rigid": [22, 91], "seg_frac": [23, 79], "percentag": 23, "draw": [23, 61, 62, 65, 71, 74, 75, 76, 79, 80, 108, 110, 113, 114], "aim": 23, "seg_angl": [23, 79], "max_sect": 23, "control": [23, 62, 64, 65, 79, 104, 105, 110, 113, 121, 122], "min_sect": 23, "solidwork": [23, 41, 44], "accord": [23, 30, 34, 121, 122], "facet_threshold": 23, "strict": [23, 102], "aspect_frac": 23, "aspect": 23, "ratio": [23, 46, 92], "differfrom": 23, "escap": 23, "earli": [23, 73], "radius_frac": [23, 79], "deviat": [23, 59, 79], "radius_min": [23, 79], "multipli": [23, 107, 108, 118], "radius_max": [23, 79], "tangent": [23, 67, 79, 86], "emit": [23, 97, 100], "took": 23, "execut": [23, 30, 73, 83], "deal": [24, 47, 48, 49, 58, 78, 83, 92, 103, 106, 107, 110, 114, 117, 119], "extend": [24, 86], "exterior": [24, 61, 74, 75, 86], "interior": [24, 61, 74, 75, 92], "pp": [24, 105], "qt": 24, "attempt": [24, 30, 47, 74, 75, 83], "detail": [24, 26, 30, 49, 54, 61, 74, 124], "qhull": [24, 59], "qh": 24, "htm": [24, 105], "o": [24, 64, 108, 126], "r_min": 25, "r_max": 25, "annular": 25, "inner": [25, 105], "outer": 25, "pie": 25, "wedg": 25, "origin_s": 25, "origin_color": 25, "axis_radiu": 25, "axis_length": 25, "cuboid": [25, 63], "marker_height": 25, "far": [25, 61, 74, 100, 108], "32": [25, 30, 63], "latitud": 25, "longitud": 25, "revolut": 25, "triangle_arg": [25, 85], "polyhedron": 25, "ico": 25, "icosahederon": 25, "isopher": 25, "grow": 25, "under": [25, 91, 110, 113], "intend": 25, "complex": 25, "symmetr": [25, 49], "eventu": 25, "counterclockwis": [25, 108], "sharp": [25, 47, 91], "sweep": 25, "mapbox_earcut": 25, "pq30": 25, "prism": 25, "below": [25, 30, 64, 85, 97], "theta": 25, "phi": 25, "uglier": 25, "restrict": 26, "delaunai": [26, 54], "cycl": [26, 61, 74, 80], "cohen": 26, "steiner": 26, "morvan": 26, "within": [26, 48, 78, 86, 108, 110, 113], "gaussian_curvatur": 26, "greater": [26, 100, 118], "mean_curvatur": 26, "start_point": 26, "ball": 26, "decompos": [27, 56, 105], "mesh_arg": 27, "exc": 28, "dummi": 28, "surviv": [28, 121, 122], "appropri": [28, 39, 110, 114, 127], "debugg": 28, "later": 28, "wrap": [29, 48, 71, 88, 108], "patrickmin": 30, "alia": 30, "field": [30, 33, 39, 67, 98, 99], "z_buffer_carv": 30, "z_buffer_vot": 30, "dilated_carv": 30, "exact": [30, 60, 75], "remove_intern": 30, "rotate_x": 30, "rotate_z": 30, "block_id": 30, "use_material_block_id": 30, "use_offscreen_pbuff": 30, "downsample_factor": 30, "downsample_threshold": 30, "binvox_path": 30, "cl": 30, "respons": 30, "configur": 30, "__call__": 30, "publish": 30, "pleas": 30, "cite": 30, "websit": 30, "articl": [30, 104], "nooruddin03": 30, "fakir": 30, "nooruddin": 30, "greg": 30, "turk": 30, "simplif": 30, "journal": [30, 46], "ieee": 30, "transact": 30, "graphic": [30, 46, 105, 110, 113, 114], "page": [30, 91], "191": 30, "205": 30, "year": 30, "2003": 30, "patrick": 30, "howpublish": 30, "googl": [30, 39], "2004": [30, 91, 105], "yyyi": 30, "dd": 30, "ug": 30, "dfx": 30, "xgl": 30, "pov": 30, "jot": 30, "hip": 30, "mira": 30, "vtk": [30, 35], "schemat": 30, "msh": [30, 54], "1024": 30, "carv": 30, "At": 30, "pariti": [30, 105], "vote": 30, "stop": [30, 62, 91], "card": 30, "minx": [30, 73, 108], "mini": [30, 73, 108], "maxx": [30, 73, 108], "maxi": [30, 73, 108], "odd": [30, 92, 105], "behaviour": 30, "occupi": [30, 89, 121, 122, 126], "90": [30, 127], "ccw": [30, 108], "cw": 30, "use_matrial_block_id": 30, "spec": 30, "usemtl": 30, "blockid_": 30, "offscreen": 30, "pbuffer": 30, "onscreen": 30, "downsampl": 30, "power": [30, 47, 93, 120], "adjust": 30, "destin": 30, "silenc": 30, "stdout": 30, "stderr": 30, "entir": [30, 95, 118], "suitabl": [30, 91], "denot": [30, 121, 122, 124], "num": 30, "axis_ord": 30, "xzy": 30, "eement": 30, "relev": [30, 75, 128], "fp": 30, "namedtupl": 30, "rle": [30, 127], "ioerror": 30, "invalid": [30, 33, 74], "factori": [30, 124], "encoded_ax": 30, "circumst": 30, "export_typ": 30, "binvoxer_kwarg": 30, "simpli": [30, 110, 113], "suppli": 30, "temporarili": 30, "ignore_broken": [31, 33], "broken": [31, 94], "dure": [31, 110, 112, 114], "daeunsupportederror": 31, "daebrokenreferror": 31, "zae": 31, "Such": 32, "base64": [32, 35, 108, 110, 111], "use_base64": 32, "include_metadata": 32, "as_dict": [32, 65, 70, 85], "gl_triangl": 33, "gl_line": 33, "include_norm": [33, 36], "unitize_norm": 33, "tree_postprocessor": 33, "buffer_postprocessor": 33, "serializ": [33, 85, 108], "func": 33, "merge_buff": 33, "oppos": [33, 123], "tree_postprocess": 33, "callabl": 33, "exit": [33, 73], "merge_primit": 33, "mesh_kwarg": [33, 39], "khronosgroup": 33, "master": 33, "specularfactor": 33, "glossinessfactor": 33, "specularglossinesstextur": 33, "diffusetextur": 33, "diffusefactor": 33, "todo": [33, 36, 47, 98, 99, 118], "specular": [33, 118], "done": [33, 74, 75], "javascript": 33, "89427b26fcac884385a2e6d5803d917ab5d1b04f": 33, "archiv": [33, 34, 95, 108], "khr_materials_pbrspecularglossi": 33, "workflow": 33, "bj": 33, "babylon": 33, "pbrutil": 33, "l33": 33, "l64": 33, "metallicrough": 33, "oneminu": 33, "els": [33, 79, 91, 106, 108, 127], "dielectricspecular": 33, "err": 33, "validationerror": 33, "gltf2": 33, "both": [34, 39, 47, 48, 58, 63, 78, 91, 98, 99, 106, 108, 110, 113, 117, 127], "lowercas": 34, "rb": 34, "special": [34, 64, 108], "charact": [34, 45, 105, 108], "lower": [34, 75], "abov": [34, 54, 73, 85], "did": [34, 57, 88], "aka": [35, 80], "include_color": 36, "include_textur": 36, "return_textur": 36, "write_textur": 36, "mtl_name": [36, 118], "vt": [36, 120], "writabl": [36, 108], "mtl": [36, 95, 118], "top": 36, "group_materi": 36, "skip_materi": 36, "maintain_ord": 36, "reorder": [36, 74, 82, 83], "artifact": 36, "web": [36, 95], "mtllib": 36, "newmtl": 36, "map_kd": 36, "kd": 36, "ctm": 38, "data_arrai": 39, "entri": [39, 124], "assert": 39, "aren": [39, 61, 65, 74, 102, 110, 113], "signal": 39, "estim": [39, 91], "fix_textur": 39, "prefer_color": 39, "expect": [39, 105], "ordereddict": 39, "28": 39, "draco": 39, "draco_encod": 39, "quantiz": 39, "drc": 39, "include_attribut": 39, "binary_little_endian": 39, "numpy_typ": 39, "ply_typ": 39, "leav": [39, 73, 121, 122], "collect": [39, 47], "is_ascii": 39, "image_nam": 39, "texturefil": 39, "cad": [41, 54], "etre": 41, "batch_siz": 42, "4096": 42, "compresslevel": 42, "batch": [42, 110, 113], "zipfil": [42, 108], "zip_": 42, "75": 43, "simul": 43, "break": [43, 65, 94, 108], "piec": 43, "write_color": 45, "delimit": [45, 108], "whitespac": 45, "return_angl": [46, 62], "toarrai": 46, "vertex_count": 46, "unreferenc": 46, "fewer": [46, 97, 108], "use_loop": 46, "contibut": 46, "respect": [46, 54, 105], "surround": 46, "grit": 46, "thuerrner": 46, "charl": 46, "wuethrich": 46, "1998": 46, "43": 46, "abstract": [47, 60, 95, 116, 118, 124], "node_count": 47, "label": [47, 65, 83], "largest": 47, "min_len": [47, 48], "return_edg": 47, "add_edges_from": 47, "graph_connect": 47, "unshar": 47, "exactli": [47, 57, 65, 80, 82, 102, 110, 113], "fact": [47, 59], "bipartit": 47, "edges_hash": 47, "consecut": [47, 48, 108], "graphviz": 47, "pictor": 47, "layout": 47, "attrib": 47, "multidigraph": 47, "leaf": 47, "all_simple_path": 47, "visit": [47, 83], "multigraph": 47, "max_index": 47, "edgelist": [47, 102], "faces_a": 47, "faces_b": 47, "patch": [47, 94], "sequenti": [47, 48, 108], "edge_hash": 47, "routin": 47, "undirect": [47, 61, 74], "max_len": 48, "only_nonzero": 48, "retuurn": 48, "1d": [48, 58, 108, 115, 117, 124], "intersect1d": 48, "setdiff1d": 48, "neighbour": 48, "int32": 48, "integ": [48, 58, 108, 117, 124, 126, 127], "convers": [48, 105, 107, 108], "as_int": [48, 108], "min_length": 48, "longest": [48, 86], "max_length": 48, "farther": 48, "apart": [48, 85, 108], "median": 48, "require_count": 48, "10x": 48, "decim": [48, 108], "include_neg": 48, "new_vector": 48, "minlength": 48, "return_invers": 48, "return_count": [48, 78], "member": [48, 108], "tol_merg": 48, "occurr": 48, "keep_ord": 48, "last": [48, 65, 94, 102, 105, 108], "int8": 48, "tensor": [49, 85], "known": [49, 61, 74, 91, 108, 127], "No": [49, 121, 122], "inertia_tensor": 49, "ocw": 49, "mit16_07f09_lec26": 49, "express": 50, "lambda": [50, 104], "integrate_barycentr": 50, "0x7f66cd2a6200": 50, "641016151377542": 50, "angle_limit": 52, "66": 52, "island_margin": 52, "gmsh_arg": 54, "cascad": 54, "breap": 54, "stp": 54, "info": [54, 65, 106, 108], "texinfo": 54, "pypi": 54, "download": [54, 95], "setnumb": 54, "max_el": 54, "mesher_id": 54, "perform": [54, 91, 108, 110, 114, 127], "recov": [54, 105], "si": 54, "recoveri": 54, "br": 54, "Then": 54, "dimension": [54, 60, 78], "constraint": [54, 91], "frontal": 54, "schoeberl": 54, "netgen": 54, "hxt": 54, "effici": 54, "reimplementaton": 54, "mmg3d": 54, "experiment": 54, "anisotrop": 54, "tetrahedr": 54, "unstructur": [54, 108], "itself": 55, "cgal": 55, "csg": 55, "difficult": 55, "tempfil": [55, 108], "send": [55, 91], "mesh_0": [55, 102], "mesh_1": 55, "return_fac": 57, "local_fac": 57, "limit": [57, 104], "line_seg": 57, "line_origin": 57, "line_direct": 57, "return_dist": 57, "return_denom": 57, "denomin": 57, "on_plan": 57, "denom": 57, "new_vertic": [57, 92], "new_fac": [57, 92, 120], "newli": 57, "a_int": 58, "b_int": 58, "is_1d": 58, "new_rang": 58, "hyperspher": 59, "peak": 59, "furthest": 59, "site": [59, 95], "voronoi": [59, 61, 74, 75], "diagram": [59, 61, 74, 75], "due": [59, 108], "abc": [60, 65, 95, 100, 116, 118, 124], "abstractmethod": 60, "inherit": [60, 100], "octob": [60, 121, 122], "2023": [60, 121, 122], "mincyl": 60, "smallest": [60, 63], "unpad": 60, "sphere_radiu": 60, "sphere_cent": 60, "minbal": 60, "unconnect": [61, 74], "themselv": [61, 65, 74], "independ": [61, 74], "path_id": [61, 74], "include_self": [61, 74], "child": [61, 74, 102, 110, 113], "digraph": [61, 74, 75, 102], "shell": [61, 74, 75], "meshpi": [61, 74], "mesh_info": [61, 74], "refinement_func": [61, 74], "volume_constraint": [61, 74, 104], "max_volum": [61, 74], "allow_boundary_stein": [61, 74], "allow_volume_stein": [61, 74], "quality_mesh": [61, 74], "generate_edg": [61, 74], "generate_fac": [61, 74], "min_angl": [61, 74], "clip": [61, 74, 75, 80, 95], "annot": [61, 65, 74], "notion": [61, 74], "topologi": [61, 74, 82, 104], "circuit": [61, 74], "NO": [61, 74], "enclos": [61, 74], "reject": [61, 74, 75, 79, 97], "colinear": [61, 74, 78, 79, 106], "circular": [61, 63, 74], "0002": [61, 74], "path_3d": [61, 74], "awar": [61, 74], "to_2d": [61, 74], "homeogen": [61, 74], "return_norm": 62, "swept": 62, "establish": 62, "pattern_radiu": 63, "circle_radiu": 63, "include_circl": 63, "sections_circl": 63, "preced": 63, "rect": [63, 110, 113], "coeffici": 64, "binom": 64, "hardcod": 64, "cubic": 64, "polylin": [64, 67, 70, 108], "knot": [64, 65], "geometr": [65, 74], "numer": [65, 74, 75, 80, 106], "made": [65, 67, 108, 121, 122], "wasn": 65, "purpos": 65, "essenti": 65, "tile": 65, "resid": 65, "shortcut": [65, 121, 122], "bag": 65, "poli": [65, 67, 75], "compos": [65, 92], "horizont": [65, 73], "left": [65, 102, 123, 125], "right": [65, 105, 108, 110, 113], "bulg": 67, "bulge_idx": 67, "meet": [67, 106], "autodesk": 67, "fourth": 67, "goe": [67, 100], "clockwis": [67, 83, 108], "semicircl": 67, "blob_raw": 67, "uppercas": 67, "only_lay": [67, 71], "loadabl": 69, "sent": 70, "return_path": 71, "as_svg": 71, "path_str": 71, "50": [71, 73, 91], "36": 71, "skewx": 71, "40": 71, "terminologi": 72, "geomalgorithm": 72, "a05": 72, "_intersect": 72, "p_0": 72, "su": 72, "q_0": 72, "tv": 72, "bsp": 73, "blackpawn": [73, 106], "lightmap": 73, "sheet_siz": 73, "density_escap": 73, "094": 73, "quantiti": 73, "sheet": 73, "overall_insert": 73, "homogeon": 73, "quanta": 73, "consumed_box": 73, "shuffl": 73, "partit": 73, "cleanup": 74, "linear": [74, 100, 118], "025": [74, 77], "whatev": 74, "clean": [74, 121, 122], "entity_id": 74, "declar": 74, "shorten": 74, "representit": [74, 75], "connectivii": 74, "rough": [75, 118, 121, 122, 126], "Of": [75, 102, 121, 122], "particular": 75, "quadrant": 75, "ignore_sign": 75, "rpad": 75, "apad": 75, "200": 75, "produc": [75, 80, 82, 91, 97], "coher": 75, "irrelev": 75, "exceed": [75, 127], "rtol": 75, "trick": 75, "perimet": 75, "upper": [75, 108], "coord": [75, 126], "ix": [75, 105], "ii": [75, 105], "ixi": 75, "addition": 78, "double_sid": 78, "parametr": 78, "maxlen": 78, "came": [78, 110, 113], "atol": [78, 108], "lie": [78, 80, 121, 122], "unknown": 79, "suggest": 79, "OR": [79, 95, 98, 99, 108], "polynomi": 79, "entity_path": 80, "step_round": 80, "ONE": 80, "vertex_path": 80, "deform": [82, 91], "effort": [82, 121, 122], "maintain": 82, "saniti": 82, "displac": 82, "translation_scal": 82, "variant": [82, 95], "reord": 82, "rigidli": [82, 91], "en": 83, "wikipedia": 83, "wiki": 83, "metric_k": 83, "vq": 83, "kmean": 83, "major": [83, 93, 105, 114], "svd": 83, "simultan": 83, "return_transform": 83, "return_planar": 83, "overridden": 83, "counter": [83, 108], "next": [83, 110, 114], "salesman": 83, "20x": 83, "29m": 83, "2014": 83, "i7": 83, "rhe": 84, "parameter": 85, "becaus": [85, 100, 110, 113, 127], "_primit": 85, "inflat": 85, "twice": [85, 89], "analyt": 85, "distance_height": 85, "expand": 85, "extrude_direct": 85, "vertex_id": 86, "cast": [86, 124], "inward": 86, "06": 86, "tangenti": 86, "masatomo": 86, "inui": 86, "nobuyuki": 86, "umezu": 86, "ryohei": 86, "shiman": 86, "2016": 86, "shrink": 86, "aid": 86, "applic": [86, 115, 120], "199": 86, "207": 86, "doi": 86, "1080": 86, "16864360": 86, "2015": [86, 105], "1084186": 86, "max_spher": 86, "reach": [86, 100], "scale_to_box": 88, "behavior": [88, 89], "undefin": [88, 89, 110, 114], "triangle_index": [88, 89], "multiple_hit": [88, 89], "max_hit": 88, "return_loc": [88, 89], "precomput": 89, "index_triangl": 89, "had": 89, "buffer_dist": 89, "interest": 89, "ray_candid": 89, "ray_id": 89, "triangles_norm": 89, "max_iter": 91, "found": 91, "landmark": 91, "500": [91, 110, 111], "flippag": 91, "source_mesh": 91, "target_geometri": 91, "source_landmark": 91, "target_posit": 91, "ep": [91, 104], "gamma": [91, 105], "distance_threshold": 91, "return_record": 91, "use_fac": 91, "use_vertex_norm": 91, "neighbors_count": 91, "amberg": 91, "2007": 91, "nonrigid": 91, "explain": 91, "paper": [91, 106], "tend": 91, "solv": 91, "wherea": 91, "wn": 91, "wl": 91, "term": [91, 108], "decreas": 91, "inferior": 91, "skew": [91, 98, 99], "account": 91, "face_pairs_typ": 91, "sumner": 91, "popov": 91, "transfer": 91, "wc": 91, "wi": 91, "strength": 91, "yield": [91, 95], "smoother": 91, "return_cost": 91, "subject": 91, "ta": 91, "improv": [91, 104], "noisi": [91, 104], "won": 92, "index_dict": 92, "v2": [92, 105, 108], "f0": 92, "v0": [92, 105, 108], "v1": [92, 105, 108], "f1": 92, "v": [92, 102, 104, 105, 120], "b0": 92, "b1": 92, "kb": 92, "colors_typ": 93, "colors_gl": 93, "lightn": 93, "gllightfv": 93, "gl_light0": 93, "gl_light1": 93, "multiarg": 93, "gllightfb": 93, "upsiz": [93, 120], "compat": 93, "upscal": 93, "glfloat": 93, "glmatrix": 93, "smooth_threshold": 93, "60000": 93, "statu": 94, "proper": 94, "meaning": 94, "insert_vertic": 94, "fan": 94, "wonki": 94, "branch": 95, "repositori": 95, "owner": 95, "sub": 95, "quadknot": 95, "substr": [95, 108], "lightli": 95, "decode_json": 96, "as_stream": 96, "folder": 96, "sample_color": 97, "mathworld": 97, "wolfram": 97, "trianglepointpick": 97, "accomplish": 97, "too": 97, "togeth": 97, "warn": 97, "spherepointpick": 97, "solid": 97, "z_near": [98, 99], "z_far": [98, 99], "intrins": [98, 99], "extrins": [98, 99], "cx": [98, 99], "cy": [98, 99], "fovx": [98, 99], "fovi": [98, 99], "splittabl": [98, 101], "top_left": 99, "bottom_right": 99, "mmatl": 100, "act": 100, "infinit": 100, "awai": 100, "effect": [100, 112], "attenu": 100, "Its": 100, "lumen": 100, "metr": 100, "lux": 100, "lm": 100, "m2": 100, "unit8": 100, "bright": 100, "spot": 100, "lumin": 100, "candela": 100, "sr": 100, "illumin": 100, "manner": [100, 118], "increas": 100, "7853981633974483": 100, "falloff": 100, "As": [100, 106], "affect": 100, "centr": 100, "begin": 100, "decent": 100, "shouldn": 101, "remap": 101, "forest": 102, "simpler": 102, "enforc": 102, "free": 102, "disregard": 102, "affili": 102, "node_a": 102, "node_b": 102, "malform": 102, "geometry_nam": 102, "frame_to": 102, "frame_from": 102, "derefer": 102, "draw_networkx": 102, "mesh_index": 102, "quaternion": [102, 105], "particularli": 103, "ref": 103, "dilat": 104, "scalar": 104, "variat": [104, 127], "initial_volum": 104, "srinked_volum": 104, "laplacian_oper": 104, "filter": 104, "vollmer": 104, "mencl": 104, "muller": 104, "shrinkag": 104, "autogener": 104, "lamb": 104, "implicit_time_integr": 104, "fair": 104, "irregular": 104, "diffus": [104, 117, 118], "flow": 104, "desbrun": 104, "meyer": 104, "schroder": 104, "caltech": 104, "speed": [104, 105], "stabil": 104, "difus": 104, "barroqueiro": 104, "andrad": 104, "campo": 104, "dia": 104, "oliveira": 104, "valent": 104, "januari": 104, "21": 104, "2021": 104, "bridg": 104, "asm": 104, "mech": 104, "nu": 104, "shall": 104, "vertices_norm": 104, "equal_weight": 104, "pinned_vertic": 104, "shear": [105, 121, 122], "orthogon": 105, "superimpos": 105, "arcbal": 105, "christoph": 105, "gohlk": 105, "organ": 105, "laboratori": 105, "fluoresc": 105, "dynam": 105, "univers": 105, "california": 105, "irvin": 105, "2017": 105, "cpython": 105, "19": 105, "yet": [105, 110, 113], "revis": 105, "epydoc": 105, "linalg": [105, 108], "inv": 105, "m0": 105, "m1": 105, "storag": 105, "convent": 105, "glmultmatrixd": 105, "carri": 105, "jy": 105, "kz": 105, "tripl": 105, "interpret": [105, 118], "sxyz": 105, "ryxi": 105, "tatic": 105, "otat": 105, "remain": [105, 110, 113], "success": 105, "rightmost": 105, "repetit": 105, "transforms3d": 105, "mathutil": 105, "ronald": 105, "goldman": 105, "gem": 105, "472": 105, "475": 105, "morgan": 105, "kaufmann": 105, "1990": 105, "pseudo": 105, "perspect": 105, "320": 105, "323": 105, "1991": 105, "spencer": 105, "thoma": 105, "324": 105, "331": 105, "ken": 105, "shoemak": 105, "iv": 105, "222": 105, "229": 105, "1994": 105, "175": 105, "192": 105, "attitud": 105, "jame": 105, "diebel": 105, "2006": 105, "kabsch": 105, "acta": 105, "cryst": 105, "1978": 105, "a34": 105, "827": 105, "828": 105, "bkp": 105, "horn": 105, "opt": 105, "soc": 105, "am": 105, "1987": 105, "629": 105, "642": 105, "sfu": 105, "ca": [105, 106], "jwa3": 105, "cmpt461": 105, "quatut": 105, "jmp": 105, "van": 105, "waveren": 105, "2005": 105, "intel": 105, "asmo": 105, "eng": 105, "293748": 105, "iii": 105, "124": 105, "132": 105, "1992": 105, "molecular": 105, "cff": 105, "karnei": 105, "mol": 105, "mod": 105, "595": 105, "604": 105, "itzhack": 105, "bar": 105, "contr": 105, "2000": 105, "1085": 105, "1087": 105, "vision": 105, "hartlei": 105, "zissermann": 105, "cambridg": 105, "2nd": 105, "ed": [105, 127], "chapter": 105, "130": 105, "steve": 105, "hollasch": 105, "net": 105, "cgindex": 105, "math": 105, "vec": 105, "123": 105, "234": 105, "345": 105, "xaxi": 105, "yaxi": 105, "zaxi": 105, "identity_matrix": 105, "rx": 105, "rotation_matrix": 105, "ry": 105, "rz": 105, "concatenate_matric": 105, "euler_from_matrix": 105, "rxyz": 105, "euler_matrix": 105, "is_same_transform": 105, "ga": 105, "qx": 105, "quaternion_about_axi": 105, "qy": 105, "qz": 105, "quaternion_multipli": 105, "rq": 105, "quaternion_matrix": 105, "scale_matrix": 105, "translation_matrix": 105, "shear_matrix": 105, "rand": 105, "tran": 105, "persp": 105, "decompose_matrix": 105, "tan": 105, "compose_matrix": 105, "random_vector": 105, "angle_between_vector": 105, "vector_product": 105, "unit_vector": 105, "real": 106, "variabl": [106, 110, 114], "closestptpointtriangl": 106, "confus": 106, "skip_inertia": 106, "geometrictool": 106, "polyhedralmassproperti": 106, "coloc": 106, "cramer": 106, "pointinpoli": 106, "ubc": 106, "heidrich": 106, "jgt": 106, "2x": 106, "normals_compar": 106, "pint": 107, "now": [107, 110, 113], "millimet": 107, "hint": 107, "standalon": 108, "overwrit": 108, "risk": 108, "hi": 108, "vertices_seq": 108, "faces_seq": 108, "verticesvertex": 108, "compact": 108, "col_delim": 108, "row_delim": 108, "value_format": 108, "surprisingli": 108, "bad": 108, "handler": 108, "capture_warn": 108, "blacklist": 108, "stream": 108, "enum": 108, "formatt": 108, "starts_with": 108, "new_lin": 108, "comment": 108, "unmodifi": 108, "min_digit": 108, "untouch": 108, "1020": 108, "nah": 108, "tar": 108, "gz": 108, "vari": 108, "181": 108, "einsum": 108, "ij": 108, "62": 108, "diag": 108, "429": 108, "61": 108, "55": 108, "tobyt": 108, "epsilon": 108, "basi": 108, "0x7f": 108, "127": 108, "is_inst": 108, "pathlib": 108, "allow_zero": 108, "wildcard": 108, "shape_ok": 108, "4x": 108, "as_sequ": 108, "regular": 108, "norm": 108, "76": 108, "651": 108, "220": 108, "41": 108, "signific": 108, "expon": 108, "reduc": [108, 123], "round_sigfig": 108, "232453": 108, "00014045456": 108, "200000": 108, "0001405": 108, "bz2": 108, "multipart": 108, "period": [108, 110, 114], "return_2d": 108, "is_2d": 108, "thisexist": 108, "conversionsar": 108, "min_fac": 108, "significantli": 108, "program": 108, "v4": 108, "seri": 108, "drawn": [108, 110, 113, 114], "similar": 108, "builtin": 108, "alphanumer": 108, "uuid": 108, "logic": 108, "determinist": 108, "__includes__": 108, "start_10": 108, "increment": 108, "accordingli": 108, "bundl": 108, "return_sign": 108, "constitu": 108, "io": [108, 118], "bufferedrandom": 108, "visibl": [110, 113, 114], "start_loop": [110, 114], "callback": [110, 114], "callback_period": [110, 114], "caption": [110, 114], "offset_lin": [110, 114], "line_set": [110, 114], "background": [110, 113, 114], "window_conf": [110, 114], "record": [110, 112, 114], "basewindow": [110, 114], "init": [110, 114], "skip": [110, 114], "swap": [110, 114], "front": [110, 114], "doubl": [110, 114, 118], "content": [110, 114], "eventloop": [110, 114], "event": [110, 113, 114], "incant": [110, 114], "dx": [110, 113, 114], "dy": [110, 113, 114], "button": [110, 113, 114], "abl": [110, 114], "hidden": [110, 114], "forget": [110, 113], "claim": [110, 113], "enough": [110, 113], "composit": [110, 113], "_draw": [110, 113], "gui": [110, 113], "hierarchi": [110, 113], "subsequ": [110, 113], "react": [110, 113], "state": [110, 112, 113], "whenev": [110, 113], "do_regroup_children": [110, 113], "regroup": [110, 113], "trivial": [110, 113], "simplest": [110, 113], "sprite": [110, 113], "migrat": [110, 113], "know": [110, 113], "gl_quad": [110, 113], "undrawn": [110, 113], "anymor": [110, 113], "readi": [110, 113], "propag": [110, 113], "on_mouse_drag_ent": [110, 113], "trigger": [110, 113], "on_mouse_drag_leav": [110, 113], "previous": [110, 113], "on_mouse_hold": [110, 113], "on_rollov": [110, 113], "fire": [110, 113], "rollov": [110, 113], "jypyt": [110, 111], "highli": [110, 114, 127], "driver": [110, 114], "refus": [110, 114], "blank": [110, 114], "embed": [110, 111], "viewpoint": 112, "movement": 112, "motion": 112, "suffici": [112, 128], "tracbal": 112, "mark": 112, "autolab_cor": 112, "rigidtransform": 112, "azimuth": 112, "forward": 112, "repeal": 113, "pixel_per_point": 113, "face_materi": [115, 120], "vi": [115, 120], "color_map": [115, 117], "colormap": [115, 117], "viridi": [115, 117], "color_rang": [115, 117], "linearli": [115, 117], "extrema": [115, 117], "ok": [115, 117], "bilinear": [115, 117], "architectur": 117, "categori": 117, "treat": 117, "vertexvisu": 117, "as_float": 117, "idx": 118, "emissivetextur": 118, "normaltextur": 118, "occlusiontextur": 118, "metallicroughnesstextur": 118, "fhkpz": 118, "opaqu": 118, "enumer": 118, "blend": 118, "texel": 118, "emiss": 118, "ech": 118, "metal": 118, "ambient": 118, "promin": 118, "tex_nam": 118, "vn": 120, "maintain_fac": 120, "mask_v": 120, "mask_": 120, "occup": [121, 122, 126], "mutat": [121, 122, 128], "filler": [121, 122, 123, 125], "march": [121, 122, 126], "mere": [121, 122], "runtimeerror": [121, 122], "vox": [121, 122], "trail": [121, 122, 127], "voxelize_subdivid": 123, "own": [123, 125], "custom_kei": [123, 125], "custom_fn": [123, 125], "signatur": [123, 125], "unchang": [123, 125], "oo": 124, "brle_data": [124, 127], "dense_data": [124, 127], "encoding_dtyp": 124, "ordered_indic": [124, 127], "present": [124, 125], "unifi": 124, "conceptu": 124, "lazi": 124, "_to_base_indic": 124, "_from_base_indic": 124, "base_indic": 124, "rank": [124, 125, 127], "csc": 124, "ravel": 124, "unravel": 124, "shift": 124, "base_encod": 124, "ndimag": 125, "filled_encod": 125, "ufunc": 126, "logical_and": 126, "logical_or": 126, "skimag": 126, "fanci": 126, "encdo": 127, "brle": 127, "carefulli": 127, "300": 127, "logical_not": 127, "wise": 127, "wherev": 127, "stripped_brle_data": 127, "almost": 127, "val": 127, "substitut": 127, "valuerror": 127, "sorted_gather_1d": 127, "stripped_rle_data": 127, "raw_data": 127, "ascend": 127, "exce": 127, "max_val": 127, "max_valu": 127, "600": 127, "ey": 128}, "objects": {"": [[16, 0, 0, "-", "trimesh"]], "trimesh": [[16, 1, 1, "", "PointCloud"], [16, 1, 1, "", "Scene"], [16, 1, 1, "", "Trimesh"], [16, 4, 1, "", "available_formats"], [17, 0, 0, "-", "base"], [18, 0, 0, "-", "boolean"], [19, 0, 0, "-", "bounds"], [20, 0, 0, "-", "caching"], [21, 0, 0, "-", "collision"], [22, 0, 0, "-", "comparison"], [23, 0, 0, "-", "constants"], [24, 0, 0, "-", "convex"], [25, 0, 0, "-", "creation"], [26, 0, 0, "-", "curvature"], [27, 0, 0, "-", "decomposition"], [28, 0, 0, "-", "exceptions"], [29, 0, 0, "-", "exchange"], [46, 0, 0, "-", "geometry"], [47, 0, 0, "-", "graph"], [48, 0, 0, "-", "grouping"], [49, 0, 0, "-", "inertia"], [50, 0, 0, "-", "integrate"], [51, 0, 0, "-", "interfaces"], [57, 0, 0, "-", "intersections"], [58, 0, 0, "-", "interval"], [16, 4, 1, "", "load"], [16, 4, 1, "", "load_mesh"], [16, 4, 1, "", "load_path"], [16, 4, 1, "", "load_remote"], [59, 0, 0, "-", "nsphere"], [60, 0, 0, "-", "parent"], [61, 0, 0, "-", "path"], [82, 0, 0, "-", "permutate"], [83, 0, 0, "-", "points"], [84, 0, 0, "-", "poses"], [85, 0, 0, "-", "primitives"], [86, 0, 0, "-", "proximity"], [87, 0, 0, "-", "ray"], [91, 0, 0, "-", "registration"], [92, 0, 0, "-", "remesh"], [93, 0, 0, "-", "rendering"], [94, 0, 0, "-", "repair"], [95, 0, 0, "-", "resolvers"], [96, 0, 0, "-", "resources"], [97, 0, 0, "-", "sample"], [98, 0, 0, "-", "scene"], [103, 0, 0, "-", "schemas"], [104, 0, 0, "-", "smoothing"], [16, 4, 1, "", "transform_points"], [105, 0, 0, "-", "transformations"], [106, 0, 0, "-", "triangles"], [16, 4, 1, "", "unitize"], [107, 0, 0, "-", "units"], [108, 0, 0, "-", "util"], [109, 0, 0, "-", "version"], [110, 0, 0, "-", "viewer"], [115, 0, 0, "-", "visual"], [121, 0, 0, "-", "voxel"]], "trimesh.PointCloud": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "apply_transform"], [16, 3, 1, "", "bounds"], [16, 3, 1, "", "centroid"], [16, 3, 1, "", "colors"], [16, 3, 1, "", "convex_hull"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "crc"], [16, 2, 1, "", "export"], [16, 3, 1, "", "extents"], [16, 2, 1, "", "hash"], [16, 3, 1, "", "is_empty"], [16, 3, 1, "", "kdtree"], [16, 2, 1, "", "merge_vertices"], [16, 2, 1, "", "query"], [16, 2, 1, "", "scene"], [16, 3, 1, "", "shape"], [16, 2, 1, "", "show"], [16, 3, 1, "", "vertices"]], "trimesh.Scene": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "add_geometry"], [16, 2, 1, "", "apply_transform"], [16, 3, 1, "", "area"], [16, 3, 1, "", "bounds"], [16, 3, 1, "", "bounds_corners"], [16, 3, 1, "", "camera"], [16, 2, 1, "", "camera_rays"], [16, 3, 1, "", "camera_transform"], [16, 3, 1, "", "centroid"], [16, 2, 1, "", "convert_units"], [16, 3, 1, "", "convex_hull"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "deduplicated"], [16, 2, 1, "", "delete_geometry"], [16, 2, 1, "", "dump"], [16, 3, 1, "", "duplicate_nodes"], [16, 2, 1, "", "explode"], [16, 2, 1, "", "export"], [16, 3, 1, "", "extents"], [16, 3, 1, "", "geometry_identifiers"], [16, 3, 1, "", "has_camera"], [16, 3, 1, "", "is_empty"], [16, 3, 1, "", "is_valid"], [16, 3, 1, "", "lights"], [16, 2, 1, "", "rezero"], [16, 2, 1, "", "save_image"], [16, 3, 1, "", "scale"], [16, 2, 1, "", "scaled"], [16, 2, 1, "", "set_camera"], [16, 2, 1, "", "show"], [16, 2, 1, "", "strip_visuals"], [16, 2, 1, "", "subscene"], [16, 3, 1, "", "triangles"], [16, 3, 1, "", "triangles_node"], [16, 3, 1, "", "units"]], "trimesh.Trimesh": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "apply_transform"], [16, 3, 1, "", "area"], [16, 3, 1, "", "area_faces"], [16, 3, 1, "", "as_open3d"], [16, 3, 1, "", "body_count"], [16, 3, 1, "", "bounds"], [16, 3, 1, "", "center_mass"], [16, 3, 1, "", "centroid"], [16, 2, 1, "", "compute_stable_poses"], [16, 2, 1, "", "contains"], [16, 2, 1, "", "convert_units"], [16, 2, 1, "", "convex_decomposition"], [16, 3, 1, "", "convex_hull"], [16, 2, 1, "", "copy"], [16, 3, 1, "", "density"], [16, 2, 1, "", "difference"], [16, 3, 1, "", "edges"], [16, 3, 1, "", "edges_face"], [16, 3, 1, "", "edges_sorted"], [16, 3, 1, "", "edges_sorted_tree"], [16, 3, 1, "", "edges_sparse"], [16, 3, 1, "", "edges_unique"], [16, 3, 1, "", "edges_unique_inverse"], [16, 3, 1, "", "edges_unique_length"], [16, 3, 1, "", "euler_number"], [16, 2, 1, "", "eval_cached"], [16, 2, 1, "", "export"], [16, 3, 1, "", "extents"], [16, 3, 1, "", "face_adjacency"], [16, 3, 1, "", "face_adjacency_angles"], [16, 3, 1, "", "face_adjacency_convex"], [16, 3, 1, "", "face_adjacency_edges"], [16, 3, 1, "", "face_adjacency_edges_tree"], [16, 3, 1, "", "face_adjacency_projections"], [16, 3, 1, "", "face_adjacency_radius"], [16, 3, 1, "", "face_adjacency_span"], [16, 3, 1, "", "face_adjacency_tree"], [16, 3, 1, "", "face_adjacency_unshared"], [16, 3, 1, "", "face_angles"], [16, 3, 1, "", "face_angles_sparse"], [16, 3, 1, "", "face_neighborhood"], [16, 3, 1, "", "face_normals"], [16, 3, 1, "", "faces"], [16, 3, 1, "", "faces_sparse"], [16, 3, 1, "", "faces_unique_edges"], [16, 3, 1, "", "facets"], [16, 3, 1, "", "facets_area"], [16, 3, 1, "", "facets_boundary"], [16, 3, 1, "", "facets_normal"], [16, 3, 1, "", "facets_on_hull"], [16, 3, 1, "", "facets_origin"], [16, 2, 1, "", "fill_holes"], [16, 2, 1, "", "fix_normals"], [16, 3, 1, "", "identifier"], [16, 3, 1, "", "identifier_hash"], [16, 3, 1, "", "identifier_md5"], [16, 3, 1, "", "integral_mean_curvature"], [16, 2, 1, "", "intersection"], [16, 2, 1, "", "invert"], [16, 3, 1, "", "is_convex"], [16, 3, 1, "", "is_empty"], [16, 3, 1, "", "is_volume"], [16, 3, 1, "", "is_watertight"], [16, 3, 1, "", "is_winding_consistent"], [16, 3, 1, "", "kdtree"], [16, 3, 1, "", "mass"], [16, 3, 1, "", "mass_properties"], [16, 2, 1, "", "merge_vertices"], [16, 3, 1, "", "moment_inertia"], [16, 2, 1, "", "outline"], [16, 3, 1, "", "principal_inertia_components"], [16, 3, 1, "", "principal_inertia_transform"], [16, 3, 1, "", "principal_inertia_vectors"], [16, 2, 1, "", "process"], [16, 2, 1, "", "projected"], [16, 3, 1, "", "referenced_vertices"], [16, 2, 1, "", "register"], [16, 2, 1, "", "remove_degenerate_faces"], [16, 2, 1, "", "remove_duplicate_faces"], [16, 2, 1, "", "remove_infinite_values"], [16, 2, 1, "", "remove_unreferenced_vertices"], [16, 2, 1, "", "rezero"], [16, 2, 1, "", "sample"], [16, 3, 1, "", "scale"], [16, 2, 1, "", "scene"], [16, 2, 1, "", "section"], [16, 2, 1, "", "section_multiplane"], [16, 2, 1, "", "show"], [16, 2, 1, "", "simplify_quadratic_decimation"], [16, 2, 1, "", "slice_plane"], [16, 2, 1, "", "smoothed"], [16, 2, 1, "", "split"], [16, 2, 1, "", "subdivide"], [16, 2, 1, "", "subdivide_loop"], [16, 2, 1, "", "subdivide_to_size"], [16, 2, 1, "", "submesh"], [16, 3, 1, "", "symmetry"], [16, 3, 1, "", "symmetry_axis"], [16, 3, 1, "", "symmetry_section"], [16, 2, 1, "", "to_dict"], [16, 3, 1, "", "triangles"], [16, 3, 1, "", "triangles_center"], [16, 3, 1, "", "triangles_cross"], [16, 3, 1, "", "triangles_tree"], [16, 2, 1, "", "union"], [16, 3, 1, "", "units"], [16, 2, 1, "", "unmerge_vertices"], [16, 2, 1, "", "unwrap"], [16, 2, 1, "", "update_faces"], [16, 2, 1, "", "update_vertices"], [16, 3, 1, "", "vertex_adjacency_graph"], [16, 3, 1, "", "vertex_defects"], [16, 3, 1, "", "vertex_degree"], [16, 3, 1, "", "vertex_faces"], [16, 3, 1, "", "vertex_neighbors"], [16, 3, 1, "", "vertex_normals"], [16, 3, 1, "", "vertices"], [16, 3, 1, "", "visual"], [16, 3, 1, "", "volume"], [16, 2, 1, "", "voxelized"]], "trimesh.base": [[17, 1, 1, "", "Trimesh"]], "trimesh.base.Trimesh": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "apply_transform"], [17, 3, 1, "", "area"], [17, 3, 1, "", "area_faces"], [17, 3, 1, "", "as_open3d"], [17, 3, 1, "", "body_count"], [17, 3, 1, "", "bounds"], [17, 3, 1, "", "center_mass"], [17, 3, 1, "", "centroid"], [17, 2, 1, "", "compute_stable_poses"], [17, 2, 1, "", "contains"], [17, 2, 1, "", "convert_units"], [17, 2, 1, "", "convex_decomposition"], [17, 3, 1, "", "convex_hull"], [17, 2, 1, "", "copy"], [17, 3, 1, "", "density"], [17, 2, 1, "", "difference"], [17, 3, 1, "", "edges"], [17, 3, 1, "", "edges_face"], [17, 3, 1, "", "edges_sorted"], [17, 3, 1, "", "edges_sorted_tree"], [17, 3, 1, "", "edges_sparse"], [17, 3, 1, "", "edges_unique"], [17, 3, 1, "", "edges_unique_inverse"], [17, 3, 1, "", "edges_unique_length"], [17, 3, 1, "", "euler_number"], [17, 2, 1, "", "eval_cached"], [17, 2, 1, "", "export"], [17, 3, 1, "", "extents"], [17, 3, 1, "", "face_adjacency"], [17, 3, 1, "", "face_adjacency_angles"], [17, 3, 1, "", "face_adjacency_convex"], [17, 3, 1, "", "face_adjacency_edges"], [17, 3, 1, "", "face_adjacency_edges_tree"], [17, 3, 1, "", "face_adjacency_projections"], [17, 3, 1, "", "face_adjacency_radius"], [17, 3, 1, "", "face_adjacency_span"], [17, 3, 1, "", "face_adjacency_tree"], [17, 3, 1, "", "face_adjacency_unshared"], [17, 3, 1, "", "face_angles"], [17, 3, 1, "", "face_angles_sparse"], [17, 3, 1, "", "face_neighborhood"], [17, 3, 1, "", "face_normals"], [17, 3, 1, "", "faces"], [17, 3, 1, "", "faces_sparse"], [17, 3, 1, "", "faces_unique_edges"], [17, 3, 1, "", "facets"], [17, 3, 1, "", "facets_area"], [17, 3, 1, "", "facets_boundary"], [17, 3, 1, "", "facets_normal"], [17, 3, 1, "", "facets_on_hull"], [17, 3, 1, "", "facets_origin"], [17, 2, 1, "", "fill_holes"], [17, 2, 1, "", "fix_normals"], [17, 3, 1, "", "identifier"], [17, 3, 1, "", "identifier_hash"], [17, 3, 1, "", "identifier_md5"], [17, 3, 1, "", "integral_mean_curvature"], [17, 2, 1, "", "intersection"], [17, 2, 1, "", "invert"], [17, 3, 1, "", "is_convex"], [17, 3, 1, "", "is_empty"], [17, 3, 1, "", "is_volume"], [17, 3, 1, "", "is_watertight"], [17, 3, 1, "", "is_winding_consistent"], [17, 3, 1, "", "kdtree"], [17, 3, 1, "", "mass"], [17, 3, 1, "", "mass_properties"], [17, 2, 1, "", "merge_vertices"], [17, 3, 1, "", "moment_inertia"], [17, 2, 1, "", "outline"], [17, 3, 1, "", "principal_inertia_components"], [17, 3, 1, "", "principal_inertia_transform"], [17, 3, 1, "", "principal_inertia_vectors"], [17, 2, 1, "", "process"], [17, 2, 1, "", "projected"], [17, 3, 1, "", "referenced_vertices"], [17, 2, 1, "", "register"], [17, 2, 1, "", "remove_degenerate_faces"], [17, 2, 1, "", "remove_duplicate_faces"], [17, 2, 1, "", "remove_infinite_values"], [17, 2, 1, "", "remove_unreferenced_vertices"], [17, 2, 1, "", "rezero"], [17, 2, 1, "", "sample"], [17, 3, 1, "", "scale"], [17, 2, 1, "", "scene"], [17, 2, 1, "", "section"], [17, 2, 1, "", "section_multiplane"], [17, 2, 1, "", "show"], [17, 2, 1, "", "simplify_quadratic_decimation"], [17, 2, 1, "", "slice_plane"], [17, 2, 1, "", "smoothed"], [17, 2, 1, "", "split"], [17, 2, 1, "", "subdivide"], [17, 2, 1, "", "subdivide_loop"], [17, 2, 1, "", "subdivide_to_size"], [17, 2, 1, "", "submesh"], [17, 3, 1, "", "symmetry"], [17, 3, 1, "", "symmetry_axis"], [17, 3, 1, "", "symmetry_section"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "triangles"], [17, 3, 1, "", "triangles_center"], [17, 3, 1, "", "triangles_cross"], [17, 3, 1, "", "triangles_tree"], [17, 2, 1, "", "union"], [17, 3, 1, "", "units"], [17, 2, 1, "", "unmerge_vertices"], [17, 2, 1, "", "unwrap"], [17, 2, 1, "", "update_faces"], [17, 2, 1, "", "update_vertices"], [17, 3, 1, "", "vertex_adjacency_graph"], [17, 3, 1, "", "vertex_defects"], [17, 3, 1, "", "vertex_degree"], [17, 3, 1, "", "vertex_faces"], [17, 3, 1, "", "vertex_neighbors"], [17, 3, 1, "", "vertex_normals"], [17, 3, 1, "", "vertices"], [17, 3, 1, "", "visual"], [17, 3, 1, "", "volume"], [17, 2, 1, "", "voxelized"]], "trimesh.boolean": [[18, 4, 1, "", "boolean_automatic"], [18, 4, 1, "", "difference"], [18, 4, 1, "", "intersection"], [18, 4, 1, "", "union"]], "trimesh.bounds": [[19, 4, 1, "", "contains"], [19, 4, 1, "", "corners"], [19, 4, 1, "", "minimum_cylinder"], [19, 4, 1, "", "oriented_bounds"], [19, 4, 1, "", "oriented_bounds_2D"], [19, 4, 1, "", "to_extents"]], "trimesh.caching": [[20, 1, 1, "", "Cache"], [20, 1, 1, "", "DataStore"], [20, 1, 1, "", "DiskCache"], [20, 1, 1, "", "TrackedArray"], [20, 4, 1, "", "cache_decorator"], [20, 4, 1, "", "hash_fallback"], [20, 4, 1, "", "sha256"], [20, 4, 1, "", "tracked_array"]], "trimesh.caching.Cache": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "clear"], [20, 2, 1, "", "delete"], [20, 2, 1, "", "id_set"], [20, 2, 1, "", "update"], [20, 2, 1, "", "verify"]], "trimesh.caching.DataStore": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "clear"], [20, 2, 1, "", "crc"], [20, 2, 1, "", "fast_hash"], [20, 2, 1, "", "hash"], [20, 2, 1, "", "is_empty"], [20, 3, 1, "", "mutable"], [20, 2, 1, "", "pop"], [20, 2, 1, "", "update"]], "trimesh.caching.DiskCache": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "get"]], "trimesh.caching.TrackedArray": [[20, 2, 1, "", "crc"], [20, 2, 1, "", "hash"], [20, 2, 1, "", "md5"], [20, 3, 1, "", "mutable"]], "trimesh.collision": [[21, 1, 1, "", "CollisionManager"], [21, 1, 1, "", "ContactData"], [21, 1, 1, "", "DistanceData"], [21, 4, 1, "", "mesh_to_BVH"], [21, 4, 1, "", "mesh_to_convex"], [21, 4, 1, "", "scene_to_collision"]], "trimesh.collision.CollisionManager": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "add_object"], [21, 2, 1, "", "in_collision_internal"], [21, 2, 1, "", "in_collision_other"], [21, 2, 1, "", "in_collision_single"], [21, 2, 1, "", "min_distance_internal"], [21, 2, 1, "", "min_distance_other"], [21, 2, 1, "", "min_distance_single"], [21, 2, 1, "", "remove_object"], [21, 2, 1, "", "set_transform"]], "trimesh.collision.ContactData": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "depth"], [21, 2, 1, "", "index"], [21, 3, 1, "", "normal"], [21, 3, 1, "", "point"]], "trimesh.collision.DistanceData": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "distance"], [21, 2, 1, "", "index"], [21, 2, 1, "", "point"]], "trimesh.comparison": [[22, 4, 1, "", "face_ordering"], [22, 4, 1, "", "identifier_hash"], [22, 4, 1, "", "identifier_simple"]], "trimesh.constants": [[23, 1, 1, "", "ResolutionPath"], [23, 1, 1, "", "ToleranceMesh"], [23, 1, 1, "", "TolerancePath"], [23, 4, 1, "", "log_time"]], "trimesh.constants.ResolutionPath": [[23, 2, 1, "", "__init__"]], "trimesh.constants.ToleranceMesh": [[23, 2, 1, "", "__init__"]], "trimesh.constants.TolerancePath": [[23, 2, 1, "", "__init__"]], "trimesh.convex": [[24, 4, 1, "", "adjacency_projections"], [24, 4, 1, "", "convex_hull"], [24, 4, 1, "", "hull_points"], [24, 4, 1, "", "is_convex"]], "trimesh.creation": [[25, 4, 1, "", "annulus"], [25, 4, 1, "", "axis"], [25, 4, 1, "", "box"], [25, 4, 1, "", "camera_marker"], [25, 4, 1, "", "capsule"], [25, 4, 1, "", "cone"], [25, 4, 1, "", "cylinder"], [25, 4, 1, "", "extrude_polygon"], [25, 4, 1, "", "extrude_triangulation"], [25, 4, 1, "", "icosahedron"], [25, 4, 1, "", "icosphere"], [25, 4, 1, "", "random_soup"], [25, 4, 1, "", "revolve"], [25, 4, 1, "", "sweep_polygon"], [25, 4, 1, "", "triangulate_polygon"], [25, 4, 1, "", "truncated_prisms"], [25, 4, 1, "", "uv_sphere"]], "trimesh.curvature": [[26, 4, 1, "", "discrete_gaussian_curvature_measure"], [26, 4, 1, "", "discrete_mean_curvature_measure"], [26, 4, 1, "", "face_angles_sparse"], [26, 4, 1, "", "line_ball_intersection"], [26, 4, 1, "", "sphere_ball_intersection"], [26, 4, 1, "", "vertex_defects"]], "trimesh.decomposition": [[27, 4, 1, "", "convex_decomposition"]], "trimesh.exceptions": [[28, 1, 1, "", "ExceptionModule"], [28, 4, 1, "", "closure"]], "trimesh.exceptions.ExceptionModule": [[28, 2, 1, "", "__init__"]], "trimesh.exchange": [[30, 0, 0, "-", "binvox"], [31, 0, 0, "-", "dae"], [32, 0, 0, "-", "export"], [33, 0, 0, "-", "gltf"], [34, 0, 0, "-", "load"], [35, 0, 0, "-", "misc"], [36, 0, 0, "-", "obj"], [37, 0, 0, "-", "off"], [38, 0, 0, "-", "openctm"], [39, 0, 0, "-", "ply"], [40, 0, 0, "-", "stl"], [41, 0, 0, "-", "threedxml"], [42, 0, 0, "-", "threemf"], [43, 0, 0, "-", "urdf"], [44, 0, 0, "-", "xaml"], [45, 0, 0, "-", "xyz"]], "trimesh.exchange.binvox": [[30, 1, 1, "", "Binvox"], [30, 1, 1, "", "Binvoxer"], [30, 4, 1, "", "binvox_bytes"], [30, 4, 1, "", "binvox_header"], [30, 4, 1, "", "export_binvox"], [30, 4, 1, "", "load_binvox"], [30, 4, 1, "", "parse_binvox"], [30, 4, 1, "", "parse_binvox_header"], [30, 4, 1, "", "voxel_from_binvox"], [30, 4, 1, "", "voxelize_mesh"]], "trimesh.exchange.binvox.Binvox": [[30, 5, 1, "", "rle_data"], [30, 5, 1, "", "scale"], [30, 5, 1, "", "shape"], [30, 5, 1, "", "translate"]], "trimesh.exchange.binvox.Binvoxer": [[30, 5, 1, "", "SUPPORTED_INPUT_TYPES"], [30, 5, 1, "", "SUPPORTED_OUTPUT_TYPES"], [30, 2, 1, "", "__init__"], [30, 3, 1, "", "file_type"]], "trimesh.exchange.dae": [[31, 4, 1, "", "export_collada"], [31, 4, 1, "", "load_collada"], [31, 4, 1, "", "load_zae"]], "trimesh.exchange.export": [[32, 4, 1, "", "export_dict"], [32, 4, 1, "", "export_dict64"], [32, 4, 1, "", "export_json"], [32, 4, 1, "", "export_mesh"], [32, 4, 1, "", "export_msgpack"], [32, 4, 1, "", "export_scene"], [32, 4, 1, "", "scene_to_dict"]], "trimesh.exchange.gltf": [[33, 4, 1, "", "export_glb"], [33, 4, 1, "", "export_gltf"], [33, 4, 1, "", "get_schema"], [33, 4, 1, "", "load_glb"], [33, 4, 1, "", "load_gltf"], [33, 4, 1, "", "specular_to_pbr"], [33, 4, 1, "", "validate"]], "trimesh.exchange.load": [[34, 4, 1, "", "available_formats"], [34, 4, 1, "", "load"], [34, 4, 1, "", "load_compressed"], [34, 4, 1, "", "load_kwargs"], [34, 4, 1, "", "load_mesh"], [34, 4, 1, "", "load_remote"], [34, 4, 1, "", "mesh_formats"], [34, 4, 1, "", "parse_file_args"]], "trimesh.exchange.misc": [[35, 4, 1, "", "load_dict"], [35, 4, 1, "", "load_meshio"], [35, 4, 1, "", "load_msgpack"]], "trimesh.exchange.obj": [[36, 4, 1, "", "export_obj"], [36, 4, 1, "", "load_obj"], [36, 4, 1, "", "parse_mtl"]], "trimesh.exchange.off": [[37, 4, 1, "", "export_off"], [37, 4, 1, "", "load_off"]], "trimesh.exchange.openctm": [[38, 4, 1, "", "load_ctm"]], "trimesh.exchange.ply": [[39, 4, 1, "", "add_attributes_to_data_array"], [39, 4, 1, "", "add_attributes_to_dtype"], [39, 4, 1, "", "add_attributes_to_header"], [39, 4, 1, "", "assert_attributes_valid"], [39, 4, 1, "", "element_colors"], [39, 4, 1, "", "elements_to_kwargs"], [39, 4, 1, "", "export_draco"], [39, 4, 1, "", "export_ply"], [39, 4, 1, "", "load_draco"], [39, 4, 1, "", "load_element_different"], [39, 4, 1, "", "load_element_single"], [39, 4, 1, "", "load_ply"], [39, 4, 1, "", "numpy_type_to_ply_type"], [39, 4, 1, "", "parse_header"], [39, 4, 1, "", "ply_ascii"], [39, 4, 1, "", "ply_binary"]], "trimesh.exchange.stl": [[40, 6, 1, "", "HeaderError"], [40, 4, 1, "", "export_stl"], [40, 4, 1, "", "export_stl_ascii"], [40, 4, 1, "", "load_stl"], [40, 4, 1, "", "load_stl_ascii"], [40, 4, 1, "", "load_stl_binary"]], "trimesh.exchange.threedxml": [[41, 4, 1, "", "load_3DXML"], [41, 4, 1, "", "print_element"]], "trimesh.exchange.threemf": [[42, 4, 1, "", "export_3MF"], [42, 4, 1, "", "load_3MF"]], "trimesh.exchange.urdf": [[43, 4, 1, "", "export_urdf"]], "trimesh.exchange.xaml": [[44, 4, 1, "", "load_XAML"]], "trimesh.exchange.xyz": [[45, 4, 1, "", "export_xyz"], [45, 4, 1, "", "load_xyz"]], "trimesh.geometry": [[46, 4, 1, "", "align_vectors"], [46, 4, 1, "", "faces_to_edges"], [46, 4, 1, "", "index_sparse"], [46, 4, 1, "", "mean_vertex_normals"], [46, 4, 1, "", "plane_transform"], [46, 4, 1, "", "triangulate_quads"], [46, 4, 1, "", "vector_angle"], [46, 4, 1, "", "vertex_face_indices"], [46, 4, 1, "", "weighted_vertex_normals"]], "trimesh.graph": [[47, 4, 1, "", "connected_component_labels"], [47, 4, 1, "", "connected_components"], [47, 4, 1, "", "edges_to_coo"], [47, 4, 1, "", "face_adjacency"], [47, 4, 1, "", "face_adjacency_radius"], [47, 4, 1, "", "face_adjacency_unshared"], [47, 4, 1, "", "face_neighborhood"], [47, 4, 1, "", "facets"], [47, 4, 1, "", "fill_traversals"], [47, 4, 1, "", "graph_to_svg"], [47, 4, 1, "", "is_watertight"], [47, 4, 1, "", "multigraph_collect"], [47, 4, 1, "", "multigraph_paths"], [47, 4, 1, "", "neighbors"], [47, 4, 1, "", "shared_edges"], [47, 4, 1, "", "smoothed"], [47, 4, 1, "", "split"], [47, 4, 1, "", "split_traversal"], [47, 4, 1, "", "traversals"], [47, 4, 1, "", "vertex_adjacency_graph"]], "trimesh.grouping": [[48, 4, 1, "", "blocks"], [48, 4, 1, "", "boolean_rows"], [48, 4, 1, "", "clusters"], [48, 4, 1, "", "float_to_int"], [48, 4, 1, "", "group"], [48, 4, 1, "", "group_distance"], [48, 4, 1, "", "group_min"], [48, 4, 1, "", "group_rows"], [48, 4, 1, "", "group_vectors"], [48, 4, 1, "", "hashable_rows"], [48, 4, 1, "", "merge_runs"], [48, 4, 1, "", "merge_vertices"], [48, 4, 1, "", "unique_bincount"], [48, 4, 1, "", "unique_float"], [48, 4, 1, "", "unique_ordered"], [48, 4, 1, "", "unique_rows"], [48, 4, 1, "", "unique_value_in_row"]], "trimesh.inertia": [[49, 4, 1, "", "cylinder_inertia"], [49, 4, 1, "", "principal_axis"], [49, 4, 1, "", "radial_symmetry"], [49, 4, 1, "", "sphere_inertia"], [49, 4, 1, "", "transform_inertia"]], "trimesh.integrate": [[50, 4, 1, "", "substitute_barycentric"], [50, 4, 1, "", "symbolic_barycentric"]], "trimesh.interfaces": [[52, 0, 0, "-", "blender"], [53, 0, 0, "-", "generic"], [54, 0, 0, "-", "gmsh"], [55, 0, 0, "-", "scad"], [56, 0, 0, "-", "vhacd"]], "trimesh.interfaces.blender": [[52, 4, 1, "", "boolean"], [52, 4, 1, "", "unwrap"]], "trimesh.interfaces.generic": [[53, 1, 1, "", "MeshScript"]], "trimesh.interfaces.generic.MeshScript": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "run"]], "trimesh.interfaces.gmsh": [[54, 4, 1, "", "load_gmsh"], [54, 4, 1, "", "to_volume"]], "trimesh.interfaces.scad": [[55, 4, 1, "", "boolean"], [55, 4, 1, "", "interface_scad"]], "trimesh.interfaces.vhacd": [[56, 4, 1, "", "convex_decomposition"]], "trimesh.intersections": [[57, 4, 1, "", "mesh_multiplane"], [57, 4, 1, "", "mesh_plane"], [57, 4, 1, "", "plane_lines"], [57, 4, 1, "", "planes_lines"], [57, 4, 1, "", "slice_faces_plane"], [57, 4, 1, "", "slice_mesh_plane"]], "trimesh.interval": [[58, 4, 1, "", "check"], [58, 4, 1, "", "intersection"]], "trimesh.nsphere": [[59, 4, 1, "", "fit_nsphere"], [59, 4, 1, "", "is_nsphere"], [59, 4, 1, "", "minimum_nsphere"]], "trimesh.parent": [[60, 1, 1, "", "Geometry"], [60, 1, 1, "", "Geometry3D"]], "trimesh.parent.Geometry": [[60, 2, 1, "", "apply_scale"], [60, 2, 1, "", "apply_transform"], [60, 2, 1, "", "apply_translation"], [60, 3, 1, "", "bounds"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "crc"], [60, 2, 1, "", "export"], [60, 3, 1, "", "extents"], [60, 2, 1, "", "hash"], [60, 2, 1, "", "is_empty"], [60, 2, 1, "", "md5"], [60, 2, 1, "", "show"]], "trimesh.parent.Geometry3D": [[60, 2, 1, "", "apply_obb"], [60, 3, 1, "", "bounding_box"], [60, 3, 1, "", "bounding_box_oriented"], [60, 3, 1, "", "bounding_cylinder"], [60, 3, 1, "", "bounding_primitive"], [60, 3, 1, "", "bounding_sphere"]], "trimesh.path": [[61, 1, 1, "", "Path2D"], [61, 1, 1, "", "Path3D"], [62, 0, 0, "-", "arc"], [63, 0, 0, "-", "creation"], [64, 0, 0, "-", "curve"], [65, 0, 0, "-", "entities"], [66, 0, 0, "-", "exchange"], [72, 0, 0, "-", "intersections"], [73, 0, 0, "-", "packing"], [74, 0, 0, "-", "path"], [75, 0, 0, "-", "polygons"], [76, 0, 0, "-", "raster"], [77, 0, 0, "-", "repair"], [78, 0, 0, "-", "segments"], [79, 0, 0, "-", "simplify"], [80, 0, 0, "-", "traversal"], [81, 0, 0, "-", "util"]], "trimesh.path.Path2D": [[61, 2, 1, "", "apply_obb"], [61, 2, 1, "", "apply_scale"], [61, 3, 1, "", "area"], [61, 3, 1, "", "body_count"], [61, 2, 1, "", "connected_paths"], [61, 3, 1, "", "enclosure"], [61, 3, 1, "", "enclosure_directed"], [61, 3, 1, "", "enclosure_shell"], [61, 2, 1, "", "extrude"], [61, 3, 1, "", "identifier"], [61, 3, 1, "", "identifier_hash"], [61, 3, 1, "", "identifier_md5"], [61, 2, 1, "", "medial_axis"], [61, 3, 1, "", "obb"], [61, 3, 1, "", "path_valid"], [61, 2, 1, "", "plot_discrete"], [61, 2, 1, "", "plot_entities"], [61, 3, 1, "", "polygons_closed"], [61, 3, 1, "", "polygons_full"], [61, 2, 1, "", "rasterize"], [61, 3, 1, "", "root"], [61, 2, 1, "", "sample"], [61, 2, 1, "", "show"], [61, 2, 1, "", "simplify"], [61, 2, 1, "", "simplify_spline"], [61, 2, 1, "", "split"], [61, 2, 1, "", "to_3D"], [61, 2, 1, "", "triangulate"]], "trimesh.path.Path3D": [[61, 2, 1, "", "show"], [61, 2, 1, "", "to_planar"]], "trimesh.path.arc": [[62, 4, 1, "", "arc_center"], [62, 4, 1, "", "discretize_arc"], [62, 4, 1, "", "to_threepoint"]], "trimesh.path.creation": [[63, 4, 1, "", "box_outline"], [63, 4, 1, "", "circle"], [63, 4, 1, "", "circle_pattern"], [63, 4, 1, "", "grid"], [63, 4, 1, "", "rectangle"]], "trimesh.path.curve": [[64, 4, 1, "", "binomial"], [64, 4, 1, "", "discretize_bezier"], [64, 4, 1, "", "discretize_bspline"]], "trimesh.path.entities": [[65, 1, 1, "", "Arc"], [65, 1, 1, "", "BSpline"], [65, 1, 1, "", "Bezier"], [65, 1, 1, "", "Curve"], [65, 1, 1, "", "Entity"], [65, 1, 1, "", "Line"], [65, 1, 1, "", "Text"]], "trimesh.path.entities.Arc": [[65, 2, 1, "", "bounds"], [65, 2, 1, "", "center"], [65, 3, 1, "", "closed"], [65, 2, 1, "", "discrete"], [65, 3, 1, "", "is_valid"], [65, 2, 1, "", "length"]], "trimesh.path.entities.BSpline": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "discrete"], [65, 2, 1, "", "to_dict"]], "trimesh.path.entities.Bezier": [[65, 2, 1, "", "discrete"]], "trimesh.path.entities.Curve": [[65, 3, 1, "", "nodes"]], "trimesh.path.entities.Entity": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "bounds"], [65, 3, 1, "", "closed"], [65, 2, 1, "", "copy"], [65, 3, 1, "", "end_points"], [65, 2, 1, "", "explode"], [65, 3, 1, "", "is_valid"], [65, 3, 1, "", "layer"], [65, 2, 1, "", "length"], [65, 3, 1, "", "metadata"], [65, 3, 1, "", "nodes"], [65, 2, 1, "", "reverse"], [65, 2, 1, "", "to_dict"]], "trimesh.path.entities.Line": [[65, 2, 1, "", "discrete"], [65, 2, 1, "", "explode"], [65, 3, 1, "", "is_valid"]], "trimesh.path.entities.Text": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "angle"], [65, 3, 1, "", "closed"], [65, 2, 1, "", "discrete"], [65, 3, 1, "", "end_points"], [65, 3, 1, "", "is_valid"], [65, 2, 1, "", "length"], [65, 3, 1, "", "nodes"], [65, 3, 1, "", "normal"], [65, 3, 1, "", "origin"], [65, 2, 1, "", "plot"], [65, 3, 1, "", "vector"]], "trimesh.path.exchange": [[67, 0, 0, "-", "dxf"], [68, 0, 0, "-", "export"], [69, 0, 0, "-", "load"], [70, 0, 0, "-", "misc"], [71, 0, 0, "-", "svg_io"]], "trimesh.path.exchange.dxf": [[67, 4, 1, "", "bulge_to_arcs"], [67, 4, 1, "", "convert_entities"], [67, 4, 1, "", "export_dxf"], [67, 4, 1, "", "get_key"], [67, 4, 1, "", "load_dxf"]], "trimesh.path.exchange.export": [[68, 4, 1, "", "export_dict"], [68, 4, 1, "", "export_path"]], "trimesh.path.exchange.load": [[69, 4, 1, "", "load_path"], [69, 4, 1, "", "path_formats"]], "trimesh.path.exchange.misc": [[70, 4, 1, "", "dict_to_path"], [70, 4, 1, "", "edges_to_path"], [70, 4, 1, "", "faces_to_path"], [70, 4, 1, "", "lines_to_path"], [70, 4, 1, "", "linestrings_to_path"], [70, 4, 1, "", "polygon_to_path"]], "trimesh.path.exchange.svg_io": [[71, 4, 1, "", "export_svg"], [71, 4, 1, "", "svg_to_path"], [71, 4, 1, "", "transform_to_matrices"]], "trimesh.path.intersections": [[72, 4, 1, "", "line_line"]], "trimesh.path.packing": [[73, 1, 1, "", "RectangleBin"], [73, 4, 1, "", "images"], [73, 4, 1, "", "paths"], [73, 4, 1, "", "polygons"], [73, 4, 1, "", "rectangles"], [73, 4, 1, "", "rectangles_single"]], "trimesh.path.packing.RectangleBin": [[73, 2, 1, "", "__init__"], [73, 3, 1, "", "extents"], [73, 2, 1, "", "insert"], [73, 2, 1, "", "split"]], "trimesh.path.path": [[74, 1, 1, "", "Path"], [74, 1, 1, "", "Path2D"], [74, 1, 1, "", "Path3D"]], "trimesh.path.path.Path": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "apply_layer"], [74, 2, 1, "", "apply_transform"], [74, 3, 1, "", "bounds"], [74, 3, 1, "", "centroid"], [74, 3, 1, "", "colors"], [74, 2, 1, "", "convert_units"], [74, 2, 1, "", "copy"], [74, 3, 1, "", "dangling"], [74, 3, 1, "", "discrete"], [74, 2, 1, "", "discretize_path"], [74, 3, 1, "", "entities"], [74, 2, 1, "", "explode"], [74, 2, 1, "", "export"], [74, 3, 1, "", "extents"], [74, 2, 1, "", "fill_gaps"], [74, 3, 1, "", "is_closed"], [74, 3, 1, "", "is_empty"], [74, 3, 1, "", "kdtree"], [74, 3, 1, "", "layers"], [74, 3, 1, "", "length"], [74, 2, 1, "", "merge_vertices"], [74, 3, 1, "", "paths"], [74, 2, 1, "", "process"], [74, 3, 1, "", "referenced_vertices"], [74, 2, 1, "", "remove_duplicate_entities"], [74, 2, 1, "", "remove_entities"], [74, 2, 1, "", "remove_invalid"], [74, 2, 1, "", "remove_unreferenced_vertices"], [74, 2, 1, "", "replace_vertex_references"], [74, 2, 1, "", "rezero"], [74, 3, 1, "", "scale"], [74, 2, 1, "", "scene"], [74, 2, 1, "", "to_dict"], [74, 3, 1, "", "units"], [74, 3, 1, "", "vertex_graph"], [74, 3, 1, "", "vertex_nodes"], [74, 3, 1, "", "vertices"]], "trimesh.path.path.Path2D": [[74, 2, 1, "", "apply_obb"], [74, 2, 1, "", "apply_scale"], [74, 3, 1, "", "area"], [74, 3, 1, "", "body_count"], [74, 2, 1, "", "connected_paths"], [74, 3, 1, "", "enclosure"], [74, 3, 1, "", "enclosure_directed"], [74, 3, 1, "", "enclosure_shell"], [74, 2, 1, "", "extrude"], [74, 3, 1, "", "identifier"], [74, 3, 1, "", "identifier_hash"], [74, 3, 1, "", "identifier_md5"], [74, 2, 1, "", "medial_axis"], [74, 3, 1, "", "obb"], [74, 3, 1, "", "path_valid"], [74, 2, 1, "", "plot_discrete"], [74, 2, 1, "", "plot_entities"], [74, 3, 1, "", "polygons_closed"], [74, 3, 1, "", "polygons_full"], [74, 2, 1, "", "rasterize"], [74, 3, 1, "", "root"], [74, 2, 1, "", "sample"], [74, 2, 1, "", "show"], [74, 2, 1, "", "simplify"], [74, 2, 1, "", "simplify_spline"], [74, 2, 1, "", "split"], [74, 2, 1, "", "to_3D"], [74, 2, 1, "", "triangulate"]], "trimesh.path.path.Path3D": [[74, 2, 1, "", "show"], [74, 2, 1, "", "to_planar"]], "trimesh.path.polygons": [[75, 4, 1, "", "edges_to_polygons"], [75, 4, 1, "", "enclosure_tree"], [75, 4, 1, "", "medial_axis"], [75, 4, 1, "", "paths_to_polygons"], [75, 4, 1, "", "plot"], [75, 4, 1, "", "polygon_hash"], [75, 4, 1, "", "polygon_obb"], [75, 4, 1, "", "polygon_scale"], [75, 4, 1, "", "polygons_obb"], [75, 4, 1, "", "projected"], [75, 4, 1, "", "random_polygon"], [75, 4, 1, "", "repair_invalid"], [75, 4, 1, "", "resample_boundaries"], [75, 4, 1, "", "sample"], [75, 4, 1, "", "second_moment"], [75, 4, 1, "", "stack_boundaries"], [75, 4, 1, "", "transform_polygon"]], "trimesh.path.raster": [[76, 4, 1, "", "rasterize"]], "trimesh.path.repair": [[77, 4, 1, "", "fill_gaps"]], "trimesh.path.segments": [[78, 4, 1, "", "colinear_pairs"], [78, 4, 1, "", "extrude"], [78, 4, 1, "", "length"], [78, 4, 1, "", "overlap"], [78, 4, 1, "", "parameters_to_segments"], [78, 4, 1, "", "resample"], [78, 4, 1, "", "segments_to_parameters"], [78, 4, 1, "", "split"], [78, 4, 1, "", "to_svg"], [78, 4, 1, "", "unique"]], "trimesh.path.simplify": [[79, 4, 1, "", "fit_circle_check"], [79, 4, 1, "", "is_circle"], [79, 4, 1, "", "merge_colinear"], [79, 4, 1, "", "points_to_spline_entity"], [79, 4, 1, "", "resample_spline"], [79, 4, 1, "", "simplify_basic"], [79, 4, 1, "", "simplify_spline"]], "trimesh.path.traversal": [[80, 1, 1, "", "PathSample"], [80, 4, 1, "", "closed_paths"], [80, 4, 1, "", "discretize_path"], [80, 4, 1, "", "resample_path"], [80, 4, 1, "", "split"], [80, 4, 1, "", "vertex_graph"], [80, 4, 1, "", "vertex_to_entity_path"]], "trimesh.path.traversal.PathSample": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "sample"], [80, 2, 1, "", "truncate"]], "trimesh.path.util": [[81, 4, 1, "", "concatenate"]], "trimesh.permutate": [[82, 1, 1, "", "Permutator"], [82, 4, 1, "", "noise"], [82, 4, 1, "", "tessellation"], [82, 4, 1, "", "transform"]], "trimesh.permutate.Permutator": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "noise"], [82, 2, 1, "", "tessellation"], [82, 2, 1, "", "transform"]], "trimesh.points": [[83, 1, 1, "", "PointCloud"], [83, 4, 1, "", "k_means"], [83, 4, 1, "", "major_axis"], [83, 4, 1, "", "plane_fit"], [83, 4, 1, "", "plot_points"], [83, 4, 1, "", "point_plane_distance"], [83, 4, 1, "", "project_to_plane"], [83, 4, 1, "", "radial_sort"], [83, 4, 1, "", "remove_close"], [83, 4, 1, "", "tsp"]], "trimesh.points.PointCloud": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "apply_transform"], [83, 3, 1, "", "bounds"], [83, 3, 1, "", "centroid"], [83, 3, 1, "", "colors"], [83, 3, 1, "", "convex_hull"], [83, 2, 1, "", "copy"], [83, 2, 1, "", "crc"], [83, 2, 1, "", "export"], [83, 3, 1, "", "extents"], [83, 2, 1, "", "hash"], [83, 3, 1, "", "is_empty"], [83, 3, 1, "", "kdtree"], [83, 2, 1, "", "merge_vertices"], [83, 2, 1, "", "query"], [83, 2, 1, "", "scene"], [83, 3, 1, "", "shape"], [83, 2, 1, "", "show"], [83, 3, 1, "", "vertices"]], "trimesh.poses": [[84, 4, 1, "", "compute_stable_poses"]], "trimesh.primitives": [[85, 1, 1, "", "Box"], [85, 1, 1, "", "Capsule"], [85, 1, 1, "", "Cylinder"], [85, 1, 1, "", "Extrusion"], [85, 1, 1, "", "Sphere"]], "trimesh.primitives.Box": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "as_outline"], [85, 3, 1, "", "is_oriented"], [85, 2, 1, "", "sample_grid"], [85, 2, 1, "", "sample_volume"], [85, 2, 1, "", "to_dict"], [85, 3, 1, "", "transform"], [85, 3, 1, "", "volume"]], "trimesh.primitives.Capsule": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "direction"], [85, 2, 1, "", "to_dict"], [85, 3, 1, "", "transform"]], "trimesh.primitives.Cylinder": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "buffer"], [85, 3, 1, "", "direction"], [85, 3, 1, "", "moment_inertia"], [85, 3, 1, "", "segment"], [85, 2, 1, "", "to_dict"], [85, 3, 1, "", "volume"]], "trimesh.primitives.Extrusion": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "area"], [85, 3, 1, "", "bounding_box_oriented"], [85, 2, 1, "", "buffer"], [85, 3, 1, "", "direction"], [85, 3, 1, "", "origin"], [85, 2, 1, "", "slide"], [85, 2, 1, "", "to_dict"], [85, 3, 1, "", "transform"], [85, 3, 1, "", "volume"]], "trimesh.primitives.Sphere": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "area"], [85, 3, 1, "", "bounding_box_oriented"], [85, 3, 1, "", "bounds"], [85, 3, 1, "", "center"], [85, 3, 1, "", "moment_inertia"], [85, 2, 1, "", "to_dict"], [85, 3, 1, "", "volume"]], "trimesh.proximity": [[86, 1, 1, "", "NearestQueryResult"], [86, 1, 1, "", "ProximityQuery"], [86, 4, 1, "", "closest_point"], [86, 4, 1, "", "closest_point_naive"], [86, 4, 1, "", "longest_ray"], [86, 4, 1, "", "max_tangent_sphere"], [86, 4, 1, "", "nearby_faces"], [86, 4, 1, "", "signed_distance"], [86, 4, 1, "", "thickness"]], "trimesh.proximity.NearestQueryResult": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "has_normals"]], "trimesh.proximity.ProximityQuery": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "on_surface"], [86, 2, 1, "", "signed_distance"], [86, 2, 1, "", "vertex"]], "trimesh.ray": [[88, 0, 0, "-", "ray_pyembree"], [89, 0, 0, "-", "ray_triangle"], [90, 0, 0, "-", "ray_util"]], "trimesh.ray.ray_pyembree": [[88, 1, 1, "", "RayMeshIntersector"]], "trimesh.ray.ray_pyembree.RayMeshIntersector": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "contains_points"], [88, 2, 1, "", "intersects_any"], [88, 2, 1, "", "intersects_first"], [88, 2, 1, "", "intersects_id"], [88, 2, 1, "", "intersects_location"]], "trimesh.ray.ray_triangle": [[89, 1, 1, "", "RayMeshIntersector"], [89, 4, 1, "", "ray_bounds"], [89, 4, 1, "", "ray_triangle_candidates"], [89, 4, 1, "", "ray_triangle_id"]], "trimesh.ray.ray_triangle.RayMeshIntersector": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "contains_points"], [89, 2, 1, "", "intersects_any"], [89, 2, 1, "", "intersects_first"], [89, 2, 1, "", "intersects_id"], [89, 2, 1, "", "intersects_location"]], "trimesh.registration": [[91, 4, 1, "", "icp"], [91, 4, 1, "", "mesh_other"], [91, 4, 1, "", "nricp_amberg"], [91, 4, 1, "", "nricp_sumner"], [91, 4, 1, "", "procrustes"]], "trimesh.remesh": [[92, 4, 1, "", "subdivide"], [92, 4, 1, "", "subdivide_loop"], [92, 4, 1, "", "subdivide_to_size"]], "trimesh.rendering": [[93, 4, 1, "", "colors_to_gl"], [93, 4, 1, "", "convert_to_vertexlist"], [93, 4, 1, "", "light_to_gl"], [93, 4, 1, "", "material_to_texture"], [93, 4, 1, "", "matrix_to_gl"], [93, 4, 1, "", "mesh_to_vertexlist"], [93, 4, 1, "", "path_to_vertexlist"], [93, 4, 1, "", "points_to_vertexlist"], [93, 4, 1, "", "vector_to_gl"]], "trimesh.repair": [[94, 4, 1, "", "broken_faces"], [94, 4, 1, "", "fill_holes"], [94, 4, 1, "", "fix_inversion"], [94, 4, 1, "", "fix_normals"], [94, 4, 1, "", "fix_winding"], [94, 4, 1, "", "stitch"]], "trimesh.resolvers": [[95, 1, 1, "", "FilePathResolver"], [95, 1, 1, "", "GithubResolver"], [95, 1, 1, "", "Resolver"], [95, 1, 1, "", "WebResolver"], [95, 1, 1, "", "ZipResolver"], [95, 4, 1, "", "nearby_names"]], "trimesh.resolvers.FilePathResolver": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "get"], [95, 2, 1, "", "keys"], [95, 2, 1, "", "write"]], "trimesh.resolvers.GithubResolver": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "get"], [95, 2, 1, "", "keys"], [95, 2, 1, "", "namespaced"], [95, 3, 1, "", "zipped"]], "trimesh.resolvers.Resolver": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "get"], [95, 2, 1, "", "namespaced"], [95, 2, 1, "", "write"]], "trimesh.resolvers.WebResolver": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "get"]], "trimesh.resolvers.ZipResolver": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "get"], [95, 2, 1, "", "keys"], [95, 2, 1, "", "namespaced"]], "trimesh.resources": [[96, 4, 1, "", "get"], [96, 4, 1, "", "get_schema"]], "trimesh.sample": [[97, 4, 1, "", "sample_surface"], [97, 4, 1, "", "sample_surface_even"], [97, 4, 1, "", "sample_surface_sphere"], [97, 4, 1, "", "volume_mesh"], [97, 4, 1, "", "volume_rectangular"]], "trimesh.scene": [[98, 1, 1, "", "Camera"], [98, 1, 1, "", "Scene"], [99, 0, 0, "-", "cameras"], [100, 0, 0, "-", "lighting"], [101, 0, 0, "-", "scene"], [98, 4, 1, "", "split_scene"], [102, 0, 0, "-", "transforms"]], "trimesh.scene.Camera": [[98, 3, 1, "", "K"], [98, 2, 1, "", "__init__"], [98, 2, 1, "", "angles"], [98, 2, 1, "", "copy"], [98, 3, 1, "", "focal"], [98, 3, 1, "", "fov"], [98, 2, 1, "", "look_at"], [98, 3, 1, "", "resolution"], [98, 2, 1, "", "to_rays"]], "trimesh.scene.Scene": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "add_geometry"], [98, 2, 1, "", "apply_transform"], [98, 3, 1, "", "area"], [98, 3, 1, "", "bounds"], [98, 3, 1, "", "bounds_corners"], [98, 3, 1, "", "camera"], [98, 2, 1, "", "camera_rays"], [98, 3, 1, "", "camera_transform"], [98, 3, 1, "", "centroid"], [98, 2, 1, "", "convert_units"], [98, 3, 1, "", "convex_hull"], [98, 2, 1, "", "copy"], [98, 2, 1, "", "deduplicated"], [98, 2, 1, "", "delete_geometry"], [98, 2, 1, "", "dump"], [98, 3, 1, "", "duplicate_nodes"], [98, 2, 1, "", "explode"], [98, 2, 1, "", "export"], [98, 3, 1, "", "extents"], [98, 3, 1, "", "geometry_identifiers"], [98, 3, 1, "", "has_camera"], [98, 3, 1, "", "is_empty"], [98, 3, 1, "", "is_valid"], [98, 3, 1, "", "lights"], [98, 2, 1, "", "rezero"], [98, 2, 1, "", "save_image"], [98, 3, 1, "", "scale"], [98, 2, 1, "", "scaled"], [98, 2, 1, "", "set_camera"], [98, 2, 1, "", "show"], [98, 2, 1, "", "strip_visuals"], [98, 2, 1, "", "subscene"], [98, 3, 1, "", "triangles"], [98, 3, 1, "", "triangles_node"], [98, 3, 1, "", "units"]], "trimesh.scene.cameras": [[99, 1, 1, "", "Camera"], [99, 4, 1, "", "camera_to_rays"], [99, 4, 1, "", "look_at"], [99, 4, 1, "", "ray_pixel_coords"]], "trimesh.scene.cameras.Camera": [[99, 3, 1, "", "K"], [99, 2, 1, "", "__init__"], [99, 2, 1, "", "angles"], [99, 2, 1, "", "copy"], [99, 3, 1, "", "focal"], [99, 3, 1, "", "fov"], [99, 2, 1, "", "look_at"], [99, 3, 1, "", "resolution"], [99, 2, 1, "", "to_rays"]], "trimesh.scene.lighting": [[100, 1, 1, "", "DirectionalLight"], [100, 1, 1, "", "Light"], [100, 1, 1, "", "PointLight"], [100, 1, 1, "", "SpotLight"], [100, 4, 1, "", "autolight"]], "trimesh.scene.lighting.DirectionalLight": [[100, 2, 1, "", "__init__"], [100, 5, 1, "", "color"], [100, 5, 1, "", "intensity"], [100, 5, 1, "", "name"], [100, 5, 1, "", "radius"]], "trimesh.scene.lighting.Light": [[100, 2, 1, "", "__init__"], [100, 3, 1, "id0", "color"], [100, 3, 1, "id1", "intensity"], [100, 5, 1, "", "name"], [100, 3, 1, "id2", "radius"]], "trimesh.scene.lighting.PointLight": [[100, 2, 1, "", "__init__"], [100, 5, 1, "", "color"], [100, 5, 1, "", "intensity"], [100, 5, 1, "", "name"], [100, 5, 1, "", "radius"]], "trimesh.scene.lighting.SpotLight": [[100, 2, 1, "", "__init__"], [100, 5, 1, "", "color"], [100, 3, 1, "id3", "innerConeAngle"], [100, 5, 1, "", "intensity"], [100, 5, 1, "", "name"], [100, 3, 1, "id4", "outerConeAngle"], [100, 5, 1, "", "radius"]], "trimesh.scene.scene": [[101, 1, 1, "", "Scene"], [101, 4, 1, "", "append_scenes"], [101, 4, 1, "", "split_scene"]], "trimesh.scene.scene.Scene": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "add_geometry"], [101, 2, 1, "", "apply_transform"], [101, 3, 1, "", "area"], [101, 3, 1, "", "bounds"], [101, 3, 1, "", "bounds_corners"], [101, 3, 1, "", "camera"], [101, 2, 1, "", "camera_rays"], [101, 3, 1, "", "camera_transform"], [101, 3, 1, "", "centroid"], [101, 2, 1, "", "convert_units"], [101, 3, 1, "", "convex_hull"], [101, 2, 1, "", "copy"], [101, 2, 1, "", "deduplicated"], [101, 2, 1, "", "delete_geometry"], [101, 2, 1, "", "dump"], [101, 3, 1, "", "duplicate_nodes"], [101, 2, 1, "", "explode"], [101, 2, 1, "", "export"], [101, 3, 1, "", "extents"], [101, 3, 1, "", "geometry_identifiers"], [101, 3, 1, "", "has_camera"], [101, 3, 1, "", "is_empty"], [101, 3, 1, "", "is_valid"], [101, 3, 1, "", "lights"], [101, 2, 1, "", "rezero"], [101, 2, 1, "", "save_image"], [101, 3, 1, "", "scale"], [101, 2, 1, "", "scaled"], [101, 2, 1, "", "set_camera"], [101, 2, 1, "", "show"], [101, 2, 1, "", "strip_visuals"], [101, 2, 1, "", "subscene"], [101, 3, 1, "", "triangles"], [101, 3, 1, "", "triangles_node"], [101, 3, 1, "", "units"]], "trimesh.scene.transforms": [[102, 1, 1, "", "EnforcedForest"], [102, 1, 1, "", "SceneGraph"], [102, 4, 1, "", "kwargs_to_matrix"]], "trimesh.scene.transforms.EnforcedForest": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "add_edge"], [102, 3, 1, "", "children"], [102, 3, 1, "", "nodes"], [102, 2, 1, "", "remove_node"], [102, 2, 1, "", "shortest_path"], [102, 2, 1, "", "successors"]], "trimesh.scene.transforms.SceneGraph": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "clear"], [102, 2, 1, "", "copy"], [102, 2, 1, "", "from_edgelist"], [102, 3, 1, "", "geometry_nodes"], [102, 2, 1, "", "get"], [102, 2, 1, "", "load"], [102, 3, 1, "", "nodes"], [102, 3, 1, "", "nodes_geometry"], [102, 2, 1, "", "remove_geometries"], [102, 2, 1, "", "show"], [102, 2, 1, "", "to_edgelist"], [102, 2, 1, "", "to_flattened"], [102, 2, 1, "", "to_gltf"], [102, 2, 1, "", "to_networkx"], [102, 2, 1, "", "update"]], "trimesh.schemas": [[103, 4, 1, "", "resolve"]], "trimesh.smoothing": [[104, 4, 1, "", "dilate_slope"], [104, 4, 1, "", "filter_humphrey"], [104, 4, 1, "", "filter_laplacian"], [104, 4, 1, "", "filter_mut_dif_laplacian"], [104, 4, 1, "", "filter_taubin"], [104, 4, 1, "", "get_vertices_normals"], [104, 4, 1, "", "laplacian_calculation"]], "trimesh.triangles": [[106, 4, 1, "", "all_coplanar"], [106, 4, 1, "", "angles"], [106, 4, 1, "", "any_coplanar"], [106, 4, 1, "", "area"], [106, 4, 1, "", "barycentric_to_points"], [106, 4, 1, "", "bounds_tree"], [106, 4, 1, "", "closest_point"], [106, 4, 1, "", "cross"], [106, 4, 1, "", "extents"], [106, 4, 1, "", "mass_properties"], [106, 4, 1, "", "nondegenerate"], [106, 4, 1, "", "normals"], [106, 4, 1, "", "points_to_barycentric"], [106, 4, 1, "", "to_kwargs"], [106, 4, 1, "", "windings_aligned"]], "trimesh.units": [[107, 4, 1, "", "unit_conversion"], [107, 4, 1, "", "units_from_metadata"]], "trimesh.util": [[108, 1, 1, "", "FunctionRegistry"], [108, 1, 1, "", "TemporaryDirectory"], [108, 4, 1, "", "allclose"], [108, 4, 1, "", "append_faces"], [108, 4, 1, "", "array_to_encoded"], [108, 4, 1, "", "array_to_string"], [108, 4, 1, "", "attach_to_log"], [108, 4, 1, "", "bounds_tree"], [108, 4, 1, "", "comment_strip"], [108, 4, 1, "", "compress"], [108, 4, 1, "", "concatenate"], [108, 4, 1, "", "convert_like"], [108, 4, 1, "", "decimal_to_digits"], [108, 4, 1, "", "decode_keys"], [108, 4, 1, "", "decode_text"], [108, 4, 1, "", "decompress"], [108, 4, 1, "", "diagonal_dot"], [108, 4, 1, "", "distance_to_end"], [108, 4, 1, "", "encoded_to_array"], [108, 4, 1, "", "euclidean"], [108, 4, 1, "", "generate_basis"], [108, 4, 1, "", "grid_arange"], [108, 4, 1, "", "grid_linspace"], [108, 4, 1, "", "has_module"], [108, 4, 1, "", "is_binary_file"], [108, 4, 1, "", "is_ccw"], [108, 4, 1, "", "is_file"], [108, 4, 1, "", "is_instance_named"], [108, 4, 1, "", "is_none"], [108, 4, 1, "", "is_pathlib"], [108, 4, 1, "", "is_sequence"], [108, 4, 1, "", "is_shape"], [108, 4, 1, "", "is_string"], [108, 4, 1, "", "isclose"], [108, 4, 1, "", "jsonify"], [108, 4, 1, "", "make_sequence"], [108, 4, 1, "", "multi_dict"], [108, 4, 1, "", "pairwise"], [108, 4, 1, "", "row_norm"], [108, 4, 1, "", "sigfig_int"], [108, 4, 1, "", "sigfig_round"], [108, 4, 1, "", "spherical_to_vector"], [108, 4, 1, "", "split_extension"], [108, 4, 1, "", "stack_3D"], [108, 4, 1, "", "stack_lines"], [108, 4, 1, "", "structured_array_to_string"], [108, 4, 1, "", "submesh"], [108, 4, 1, "", "to_ascii"], [108, 4, 1, "", "tolist"], [108, 4, 1, "", "triangle_strips_to_faces"], [108, 4, 1, "", "type_bases"], [108, 4, 1, "", "type_named"], [108, 4, 1, "", "unique_id"], [108, 4, 1, "", "unique_name"], [108, 4, 1, "", "unitize"], [108, 4, 1, "", "vector_hemisphere"], [108, 4, 1, "", "vector_to_spherical"], [108, 4, 1, "", "vstack_empty"], [108, 4, 1, "", "wrap_as_stream"], [108, 4, 1, "", "write_encoded"], [108, 4, 1, "", "zero_pad"]], "trimesh.util.FunctionRegistry": [[108, 2, 1, "", "__init__"]], "trimesh.viewer": [[110, 1, 1, "", "SceneViewer"], [110, 1, 1, "", "SceneWidget"], [110, 4, 1, "", "in_notebook"], [111, 0, 0, "-", "notebook"], [110, 4, 1, "", "render_scene"], [110, 4, 1, "", "scene_to_html"], [110, 4, 1, "", "scene_to_notebook"], [112, 0, 0, "-", "trackball"], [113, 0, 0, "-", "widget"], [114, 0, 0, "-", "windowed"]], "trimesh.viewer.SceneViewer": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "add_geometry"], [110, 2, 1, "", "cleanup_geometries"], [110, 2, 1, "", "flip"], [110, 2, 1, "", "hide_geometry"], [110, 2, 1, "", "init_gl"], [110, 2, 1, "", "on_draw"], [110, 2, 1, "", "on_key_press"], [110, 2, 1, "", "on_mouse_drag"], [110, 2, 1, "", "on_mouse_press"], [110, 2, 1, "", "on_mouse_scroll"], [110, 2, 1, "", "on_resize"], [110, 2, 1, "", "reset_view"], [110, 2, 1, "", "save_image"], [110, 2, 1, "", "toggle_axis"], [110, 2, 1, "", "toggle_culling"], [110, 2, 1, "", "toggle_fullscreen"], [110, 2, 1, "", "toggle_grid"], [110, 2, 1, "", "toggle_wireframe"], [110, 2, 1, "", "unhide_geometry"], [110, 2, 1, "", "update_flags"]], "trimesh.viewer.SceneWidget": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "clear"], [110, 2, 1, "", "do_claim"], [110, 2, 1, "", "do_draw"], [110, 2, 1, "", "do_regroup"], [110, 2, 1, "", "do_undraw"], [110, 2, 1, "", "on_mouse_drag"], [110, 2, 1, "", "on_mouse_press"], [110, 2, 1, "", "on_mouse_scroll"], [110, 2, 1, "", "reset_view"], [110, 3, 1, "", "scene_group"]], "trimesh.viewer.notebook": [[111, 4, 1, "", "in_notebook"], [111, 4, 1, "", "scene_to_html"], [111, 4, 1, "", "scene_to_notebook"]], "trimesh.viewer.trackball": [[112, 1, 1, "", "Trackball"]], "trimesh.viewer.trackball.Trackball": [[112, 5, 1, "", "STATE_PAN"], [112, 5, 1, "", "STATE_ROLL"], [112, 5, 1, "", "STATE_ROTATE"], [112, 5, 1, "", "STATE_ZOOM"], [112, 2, 1, "", "__init__"], [112, 2, 1, "", "down"], [112, 2, 1, "", "drag"], [112, 3, 1, "", "pose"], [112, 2, 1, "", "resize"], [112, 2, 1, "", "rotate"], [112, 2, 1, "", "scroll"], [112, 2, 1, "", "set_state"]], "trimesh.viewer.widget": [[113, 1, 1, "", "MeshGroup"], [113, 1, 1, "", "SceneGroup"], [113, 1, 1, "", "SceneWidget"]], "trimesh.viewer.widget.MeshGroup": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "set_state"], [113, 2, 1, "", "unset_state"]], "trimesh.viewer.widget.SceneGroup": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "set_state"], [113, 2, 1, "", "unset_state"]], "trimesh.viewer.widget.SceneWidget": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "clear"], [113, 2, 1, "", "do_claim"], [113, 2, 1, "", "do_draw"], [113, 2, 1, "", "do_regroup"], [113, 2, 1, "", "do_undraw"], [113, 2, 1, "", "on_mouse_drag"], [113, 2, 1, "", "on_mouse_press"], [113, 2, 1, "", "on_mouse_scroll"], [113, 2, 1, "", "reset_view"], [113, 3, 1, "", "scene_group"]], "trimesh.viewer.windowed": [[114, 1, 1, "", "SceneViewer"], [114, 4, 1, "", "geometry_hash"], [114, 4, 1, "", "render_scene"]], "trimesh.viewer.windowed.SceneViewer": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "add_geometry"], [114, 2, 1, "", "cleanup_geometries"], [114, 2, 1, "", "flip"], [114, 2, 1, "", "hide_geometry"], [114, 2, 1, "", "init_gl"], [114, 2, 1, "", "on_draw"], [114, 2, 1, "", "on_key_press"], [114, 2, 1, "", "on_mouse_drag"], [114, 2, 1, "", "on_mouse_press"], [114, 2, 1, "", "on_mouse_scroll"], [114, 2, 1, "", "on_resize"], [114, 2, 1, "", "reset_view"], [114, 2, 1, "", "save_image"], [114, 2, 1, "", "toggle_axis"], [114, 2, 1, "", "toggle_culling"], [114, 2, 1, "", "toggle_fullscreen"], [114, 2, 1, "", "toggle_grid"], [114, 2, 1, "", "toggle_wireframe"], [114, 2, 1, "", "unhide_geometry"], [114, 2, 1, "", "update_flags"]], "trimesh.visual": [[115, 1, 1, "", "ColorVisuals"], [115, 1, 1, "", "TextureVisuals"], [116, 0, 0, "-", "base"], [117, 0, 0, "-", "color"], [115, 4, 1, "", "create_visual"], [115, 4, 1, "", "interpolate"], [115, 4, 1, "", "linear_color_map"], [118, 0, 0, "-", "material"], [119, 0, 0, "-", "objects"], [115, 4, 1, "", "random_color"], [120, 0, 0, "-", "texture"], [115, 4, 1, "", "to_rgba"], [115, 4, 1, "", "uv_to_color"], [115, 4, 1, "", "uv_to_interpolated_color"]], "trimesh.visual.ColorVisuals": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "concatenate"], [115, 2, 1, "", "copy"], [115, 3, 1, "", "defined"], [115, 3, 1, "", "face_colors"], [115, 2, 1, "", "face_subset"], [115, 3, 1, "", "kind"], [115, 3, 1, "", "main_color"], [115, 2, 1, "", "to_texture"], [115, 3, 1, "", "transparency"], [115, 2, 1, "", "update_faces"], [115, 2, 1, "", "update_vertices"], [115, 3, 1, "", "vertex_colors"]], "trimesh.visual.TextureVisuals": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "concatenate"], [115, 2, 1, "", "copy"], [115, 3, 1, "", "defined"], [115, 2, 1, "", "face_subset"], [115, 3, 1, "", "kind"], [115, 2, 1, "", "to_color"], [115, 2, 1, "", "update_faces"], [115, 2, 1, "", "update_vertices"], [115, 3, 1, "", "uv"]], "trimesh.visual.base": [[116, 1, 1, "", "Visuals"]], "trimesh.visual.base.Visuals": [[116, 2, 1, "", "concatenate"], [116, 2, 1, "", "copy"], [116, 3, 1, "", "kind"], [116, 2, 1, "", "update_faces"], [116, 2, 1, "", "update_vertices"]], "trimesh.visual.color": [[117, 1, 1, "", "ColorVisuals"], [117, 1, 1, "", "VertexColor"], [117, 4, 1, "", "colors_to_materials"], [117, 4, 1, "", "face_to_vertex_color"], [117, 4, 1, "", "hex_to_rgba"], [117, 4, 1, "", "interpolate"], [117, 4, 1, "", "linear_color_map"], [117, 4, 1, "", "random_color"], [117, 4, 1, "", "to_float"], [117, 4, 1, "", "to_rgba"], [117, 4, 1, "", "uv_to_color"], [117, 4, 1, "", "uv_to_interpolated_color"], [117, 4, 1, "", "vertex_to_face_color"]], "trimesh.visual.color.ColorVisuals": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "concatenate"], [117, 2, 1, "", "copy"], [117, 3, 1, "", "defined"], [117, 3, 1, "", "face_colors"], [117, 2, 1, "", "face_subset"], [117, 3, 1, "", "kind"], [117, 3, 1, "", "main_color"], [117, 2, 1, "", "to_texture"], [117, 3, 1, "", "transparency"], [117, 2, 1, "", "update_faces"], [117, 2, 1, "", "update_vertices"], [117, 3, 1, "", "vertex_colors"]], "trimesh.visual.color.VertexColor": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "concatenate"], [117, 2, 1, "", "copy"], [117, 3, 1, "", "kind"], [117, 2, 1, "", "update_faces"], [117, 2, 1, "", "update_vertices"], [117, 3, 1, "", "vertex_colors"]], "trimesh.visual.material": [[118, 1, 1, "", "Material"], [118, 1, 1, "", "MultiMaterial"], [118, 1, 1, "", "PBRMaterial"], [118, 1, 1, "", "SimpleMaterial"], [118, 4, 1, "", "empty_material"], [118, 4, 1, "", "from_color"], [118, 4, 1, "", "pack"]], "trimesh.visual.material.Material": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "copy"], [118, 3, 1, "", "main_color"], [118, 3, 1, "", "name"]], "trimesh.visual.material.MultiMaterial": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "add"], [118, 2, 1, "", "get"], [118, 3, 1, "", "main_color"], [118, 2, 1, "", "to_pbr"]], "trimesh.visual.material.PBRMaterial": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "alphaCutoff"], [118, 3, 1, "", "alphaMode"], [118, 3, 1, "", "baseColorFactor"], [118, 3, 1, "", "baseColorTexture"], [118, 2, 1, "", "copy"], [118, 3, 1, "", "doubleSided"], [118, 3, 1, "", "emissiveFactor"], [118, 3, 1, "", "main_color"], [118, 3, 1, "", "metallicFactor"], [118, 3, 1, "", "roughnessFactor"], [118, 2, 1, "", "to_color"], [118, 2, 1, "", "to_simple"]], "trimesh.visual.material.SimpleMaterial": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "glossiness"], [118, 3, 1, "", "main_color"], [118, 2, 1, "", "to_color"], [118, 2, 1, "", "to_obj"], [118, 2, 1, "", "to_pbr"]], "trimesh.visual.objects": [[119, 4, 1, "", "concatenate"], [119, 4, 1, "", "create_visual"]], "trimesh.visual.texture": [[120, 1, 1, "", "TextureVisuals"], [120, 4, 1, "", "power_resize"], [120, 4, 1, "", "unmerge_faces"]], "trimesh.visual.texture.TextureVisuals": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "concatenate"], [120, 2, 1, "", "copy"], [120, 3, 1, "", "defined"], [120, 2, 1, "", "face_subset"], [120, 3, 1, "", "kind"], [120, 2, 1, "", "to_color"], [120, 2, 1, "", "update_faces"], [120, 2, 1, "", "update_vertices"], [120, 3, 1, "", "uv"]], "trimesh.voxel": [[121, 1, 1, "", "VoxelGrid"], [122, 0, 0, "-", "base"], [123, 0, 0, "-", "creation"], [124, 0, 0, "-", "encoding"], [125, 0, 0, "-", "morphology"], [126, 0, 0, "-", "ops"], [127, 0, 0, "-", "runlength"], [128, 0, 0, "-", "transforms"]], "trimesh.voxel.VoxelGrid": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "apply_transform"], [121, 2, 1, "", "as_boxes"], [121, 3, 1, "", "bounds"], [121, 2, 1, "", "copy"], [121, 2, 1, "", "crc"], [121, 3, 1, "", "element_volume"], [121, 3, 1, "", "encoding"], [121, 2, 1, "", "export"], [121, 3, 1, "", "extents"], [121, 2, 1, "", "fill"], [121, 3, 1, "", "filled_count"], [121, 2, 1, "", "hash"], [121, 2, 1, "", "hollow"], [121, 2, 1, "", "indices_to_points"], [121, 3, 1, "", "is_empty"], [121, 2, 1, "", "is_filled"], [121, 3, 1, "", "marching_cubes"], [121, 3, 1, "", "matrix"], [121, 3, 1, "", "origin"], [121, 3, 1, "", "pitch"], [121, 3, 1, "", "points"], [121, 2, 1, "", "points_to_indices"], [121, 2, 1, "", "revoxelized"], [121, 3, 1, "", "scale"], [121, 3, 1, "", "shape"], [121, 2, 1, "", "show"], [121, 3, 1, "", "sparse_indices"], [121, 2, 1, "", "strip"], [121, 3, 1, "", "transform"], [121, 3, 1, "", "translation"], [121, 3, 1, "", "volume"]], "trimesh.voxel.base": [[122, 1, 1, "", "VoxelGrid"]], "trimesh.voxel.base.VoxelGrid": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "apply_transform"], [122, 2, 1, "", "as_boxes"], [122, 3, 1, "", "bounds"], [122, 2, 1, "", "copy"], [122, 2, 1, "", "crc"], [122, 3, 1, "", "element_volume"], [122, 3, 1, "", "encoding"], [122, 2, 1, "", "export"], [122, 3, 1, "", "extents"], [122, 2, 1, "", "fill"], [122, 3, 1, "", "filled_count"], [122, 2, 1, "", "hash"], [122, 2, 1, "", "hollow"], [122, 2, 1, "", "indices_to_points"], [122, 3, 1, "", "is_empty"], [122, 2, 1, "", "is_filled"], [122, 3, 1, "", "marching_cubes"], [122, 3, 1, "", "matrix"], [122, 3, 1, "", "origin"], [122, 3, 1, "", "pitch"], [122, 3, 1, "", "points"], [122, 2, 1, "", "points_to_indices"], [122, 2, 1, "", "revoxelized"], [122, 3, 1, "", "scale"], [122, 3, 1, "", "shape"], [122, 2, 1, "", "show"], [122, 3, 1, "", "sparse_indices"], [122, 2, 1, "", "strip"], [122, 3, 1, "", "transform"], [122, 3, 1, "", "translation"], [122, 3, 1, "", "volume"]], "trimesh.voxel.creation": [[123, 4, 1, "", "local_voxelize"], [123, 4, 1, "", "voxelize"]], "trimesh.voxel.encoding": [[124, 1, 1, "", "BinaryRunLengthEncoding"], [124, 1, 1, "", "DenseEncoding"], [124, 1, 1, "", "Encoding"], [124, 1, 1, "", "FlattenedEncoding"], [124, 1, 1, "", "FlippedEncoding"], [124, 1, 1, "", "LazyIndexMap"], [124, 1, 1, "", "RunLengthEncoding"], [124, 1, 1, "", "ShapedEncoding"], [124, 4, 1, "", "SparseBinaryEncoding"], [124, 1, 1, "", "SparseEncoding"], [124, 1, 1, "", "TransposedEncoding"]], "trimesh.voxel.encoding.BinaryRunLengthEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "binary_run_length_data"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 2, 1, "", "from_brle"], [124, 2, 1, "", "from_dense"], [124, 2, 1, "", "from_rle"], [124, 2, 1, "", "gather"], [124, 2, 1, "", "gather_nd"], [124, 3, 1, "", "is_empty"], [124, 2, 1, "", "mask"], [124, 2, 1, "", "run_length_data"], [124, 3, 1, "", "size"], [124, 2, 1, "", "sorted_gather"], [124, 3, 1, "", "sparse_components"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "stripped"], [124, 3, 1, "", "sum"]], "trimesh.voxel.encoding.DenseEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "dtype"], [124, 3, 1, "", "flat"], [124, 2, 1, "", "gather"], [124, 2, 1, "", "gather_nd"], [124, 2, 1, "", "get_value"], [124, 3, 1, "", "is_empty"], [124, 2, 1, "", "mask"], [124, 2, 1, "", "reshape"], [124, 3, 1, "", "shape"], [124, 3, 1, "", "size"], [124, 3, 1, "", "sparse_components"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "sum"]], "trimesh.voxel.encoding.Encoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "binary_run_length_data"], [124, 2, 1, "", "copy"], [124, 2, 1, "", "crc"], [124, 3, 1, "", "data"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "dtype"], [124, 3, 1, "", "flat"], [124, 2, 1, "", "flip"], [124, 2, 1, "", "gather_nd"], [124, 2, 1, "", "get_value"], [124, 2, 1, "", "hash"], [124, 3, 1, "", "is_empty"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "mutable"], [124, 3, 1, "", "ndims"], [124, 2, 1, "", "reshape"], [124, 2, 1, "", "run_length_data"], [124, 3, 1, "", "shape"], [124, 3, 1, "", "size"], [124, 3, 1, "", "sparse_components"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "stripped"], [124, 3, 1, "", "sum"], [124, 2, 1, "", "transpose"]], "trimesh.voxel.encoding.FlattenedEncoding": [[124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "flat"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "shape"]], "trimesh.voxel.encoding.FlippedEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 2, 1, "", "flip"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "shape"]], "trimesh.voxel.encoding.LazyIndexMap": [[124, 3, 1, "", "dtype"], [124, 2, 1, "", "gather_nd"], [124, 2, 1, "", "get_value"], [124, 3, 1, "", "is_empty"], [124, 3, 1, "", "size"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "sum"]], "trimesh.voxel.encoding.RunLengthEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "binary_run_length_data"], [124, 2, 1, "", "copy"], [124, 2, 1, "", "crc"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "dtype"], [124, 2, 1, "", "from_brle"], [124, 2, 1, "", "from_dense"], [124, 2, 1, "", "from_rle"], [124, 2, 1, "", "gather"], [124, 2, 1, "", "gather_nd"], [124, 2, 1, "", "get_value"], [124, 2, 1, "", "hash"], [124, 3, 1, "", "is_empty"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "ndims"], [124, 2, 1, "", "run_length_data"], [124, 3, 1, "", "shape"], [124, 3, 1, "", "size"], [124, 2, 1, "", "sorted_gather"], [124, 3, 1, "", "sparse_components"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "stripped"], [124, 3, 1, "", "sum"]], "trimesh.voxel.encoding.ShapedEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "flat"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "shape"]], "trimesh.voxel.encoding.SparseEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "dense"], [124, 3, 1, "", "dtype"], [124, 2, 1, "", "from_dense"], [124, 2, 1, "", "gather_nd"], [124, 2, 1, "", "get_value"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "ndims"], [124, 3, 1, "", "shape"], [124, 3, 1, "", "size"], [124, 3, 1, "", "sparse_components"], [124, 3, 1, "", "sparse_indices"], [124, 3, 1, "", "sparse_values"], [124, 3, 1, "", "stripped"], [124, 3, 1, "", "sum"]], "trimesh.voxel.encoding.TransposedEncoding": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "copy"], [124, 3, 1, "", "data"], [124, 3, 1, "", "dense"], [124, 2, 1, "", "gather"], [124, 2, 1, "", "get_value"], [124, 2, 1, "", "mask"], [124, 3, 1, "", "perm"], [124, 3, 1, "", "shape"], [124, 2, 1, "", "transpose"]], "trimesh.voxel.morphology": [[125, 4, 1, "", "binary_closing"], [125, 4, 1, "", "binary_dilation"], [125, 4, 1, "", "fill"], [125, 4, 1, "", "surface"]], "trimesh.voxel.ops": [[126, 4, 1, "", "boolean_sparse"], [126, 4, 1, "", "fill_base"], [126, 4, 1, "", "fill_orthographic"], [126, 4, 1, "", "fill_voxelization"], [126, 4, 1, "", "indices_to_points"], [126, 4, 1, "", "matrix_to_marching_cubes"], [126, 4, 1, "", "matrix_to_points"], [126, 4, 1, "", "multibox"], [126, 4, 1, "", "points_to_indices"], [126, 4, 1, "", "points_to_marching_cubes"], [126, 4, 1, "", "sparse_to_matrix"], [126, 4, 1, "", "strip_array"]], "trimesh.voxel.runlength": [[127, 4, 1, "", "brle_gather_1d"], [127, 4, 1, "", "brle_gatherer_1d"], [127, 4, 1, "", "brle_length"], [127, 4, 1, "", "brle_logical_not"], [127, 4, 1, "", "brle_mask"], [127, 4, 1, "", "brle_reverse"], [127, 4, 1, "", "brle_strip"], [127, 4, 1, "", "brle_to_brle"], [127, 4, 1, "", "brle_to_dense"], [127, 4, 1, "", "brle_to_rle"], [127, 4, 1, "", "brle_to_sparse"], [127, 4, 1, "", "dense_to_brle"], [127, 4, 1, "", "dense_to_rle"], [127, 4, 1, "", "merge_brle_lengths"], [127, 4, 1, "", "merge_rle_lengths"], [127, 4, 1, "", "rle_gather_1d"], [127, 4, 1, "", "rle_gatherer_1d"], [127, 4, 1, "", "rle_length"], [127, 4, 1, "", "rle_mask"], [127, 4, 1, "", "rle_reverse"], [127, 4, 1, "", "rle_strip"], [127, 4, 1, "", "rle_to_brle"], [127, 4, 1, "", "rle_to_dense"], [127, 4, 1, "", "rle_to_rle"], [127, 4, 1, "", "rle_to_sparse"], [127, 4, 1, "", "sorted_brle_gather_1d"], [127, 4, 1, "", "sorted_rle_gather_1d"], [127, 4, 1, "", "split_long_brle_lengths"], [127, 4, 1, "", "split_long_rle_lengths"]], "trimesh.voxel.transforms": [[128, 1, 1, "", "Transform"]], "trimesh.voxel.transforms.Transform": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "apply_scale"], [128, 2, 1, "", "apply_transform"], [128, 2, 1, "", "apply_translation"], [128, 2, 1, "", "copy"], [128, 2, 1, "", "crc"], [128, 2, 1, "", "hash"], [128, 3, 1, "", "inverse_matrix"], [128, 2, 1, "", "inverse_transform_points"], [128, 3, 1, "", "is_identity"], [128, 3, 1, "", "matrix"], [128, 3, 1, "", "pitch"], [128, 3, 1, "", "scale"], [128, 2, 1, "", "transform_points"], [128, 3, 1, "", "translation"], [128, 3, 1, "", "unit_volume"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"basic": [0, 2, 13], "instal": [0, 13, 14], "quick": [0, 1, 13], "start": [0, 1, 13], "featur": [0, 13], "viewer": [0, 13, 110, 111, 112, 113, 114], "project": [0, 13], "us": [0, 2, 13], "trimesh": [0, 1, 2, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "which": [0, 13], "mesh": [0, 13], "format": [0, 1, 13], "should": [0, 13], "i": [0, 13], "how": [0, 13], "can": [0, 13], "cite": [0, 13], "thi": [0, 13], "librari": [0, 13], "contain": [0, 13], "contribut": [1, 13], "To": 1, "develop": 1, "automat": 1, "gener": [1, 53], "tip": 1, "help": 1, "try": 1, "avoid": 1, "write": 2, "docker": [2, 13], "imag": 2, "pip": 2, "prebuilt": 2, "build": 2, "exampl": [3, 13], "textur": [3, 12, 120], "ipynb": 3, "integr": [3, 6, 50], "color": [3, 4, 117], "save_imag": 3, "shortest": [3, 11], "rai": [3, 9, 87, 88, 89, 90], "quick_start": [3, 8], "section": [3, 10], "nearest": [3, 7], "curvatur": [3, 5, 26], "link": 13, "api": 13, "refer": 13, "conda": 14, "packag": 14, "ubuntu": 14, "debian": 14, "note": 14, "depend": 14, "overview": 14, "http": 16, "github": [16, 17], "com": [16, 17], "mikedh": [16, 17], "name": [16, 17], "default": [16, 17], "base": [17, 116, 122], "boolean": 18, "py": [18, 20, 22, 25, 26, 28, 33, 41, 44, 47, 48, 49, 50, 57, 58, 59, 60, 65, 73, 74, 76, 77, 78, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 97, 100, 103, 106, 107, 108, 111, 113, 114, 116, 117, 118, 119, 122], "bound": 19, "cach": 20, "collis": 21, "comparison": 22, "constant": 23, "convex": 24, "creation": [25, 63, 123], "decomposit": 27, "except": 28, "exchang": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 66, 67, 68, 69, 70, 71], "binvox": 30, "dae": 31, "export": [32, 68], "gltf": 33, "load": [34, 69], "misc": [35, 70], "obj": 36, "off": 37, "openctm": 38, "ply": 39, "stl": 40, "threedxml": 41, "threemf": 42, "urdf": 43, "xaml": 44, "xyz": 45, "geometri": 46, "graph": 47, "group": 48, "inertia": 49, "interfac": [51, 52, 53, 54, 55, 56], "blender": 52, "gmsh": 54, "scad": 55, "vhacd": 56, "intersect": [57, 72], "interv": 58, "nsphere": 59, "parent": 60, "path": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "arc": 62, "curv": 64, "entiti": 65, "paramet": 65, "dxf": 67, "svg_io": 71, "pack": 73, "polygon": 75, "raster": 76, "repair": [77, 94], "segment": 78, "simplifi": 79, "travers": 80, "util": [81, 108], "permut": 82, "point": 83, "pose": 84, "primit": 85, "proxim": 86, "ray_pyembre": 88, "ray_triangl": 89, "ray_util": 90, "registr": 91, "remesh": 92, "render": 93, "resolv": 95, "resourc": 96, "sampl": 97, "scene": [98, 99, 100, 101, 102], "camera": 99, "light": 100, "transform": [102, 105, 128], "schema": 103, "smooth": 104, "requir": 105, "triangl": 106, "unit": 107, "version": 109, "notebook": 111, "trackbal": 112, "widget": 113, "window": 114, "visual": [115, 116, 117, 118, 119, 120], "goal": 117, "materi": 118, "object": 119, "voxel": [121, 122, 123, 124, 125, 126, 127, 128], "encod": 124, "morphologi": 125, "op": 126, "runlength": 127}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Basic Installation": [[0, "basic-installation"], [13, "basic-installation"]], "Quick Start": [[0, "quick-start"], [13, "quick-start"]], "Features": [[0, "features"], [13, "features"]], "Viewer": [[0, "viewer"], [13, "viewer"]], "Projects Using Trimesh": [[0, "projects-using-trimesh"], [13, "projects-using-trimesh"]], "Which Mesh Format Should I Use?": [[0, "which-mesh-format-should-i-use"], [13, "which-mesh-format-should-i-use"]], "How can I cite this library?": [[0, "how-can-i-cite-this-library"], [13, "how-can-i-cite-this-library"]], "Containers": [[0, "containers"], [13, "containers"]], "Contributing To Trimesh": [[1, "contributing-to-trimesh"]], "Developer Quick Start": [[1, "developer-quick-start"]], "Automatic Formatting": [[1, "automatic-formatting"]], "General Tips": [[1, "general-tips"]], "Helpful": [[1, "helpful"]], "Try To Avoid": [[1, "try-to-avoid"]], "Writing Docker Images": [[2, "writing-docker-images"]], "Docker Basics": [[2, "docker-basics"]], "Using pip": [[2, "using-pip"]], "Using Prebuilt Images": [[2, "using-prebuilt-images"]], "Building Trimesh Images": [[2, "building-trimesh-images"]], "Examples": [[3, "examples"], [13, "examples"]], "texture.ipynb": [[3, "texture-ipynb"]], "integrate.ipynb": [[3, "integrate-ipynb"]], "colors.ipynb": [[3, "colors-ipynb"]], "save_image.ipynb": [[3, "save-image-ipynb"]], "shortest.ipynb": [[3, "shortest-ipynb"]], "ray.ipynb": [[3, "ray-ipynb"]], "quick_start.ipynb": [[3, "quick-start-ipynb"]], "section.ipynb": [[3, "section-ipynb"]], "nearest.ipynb": [[3, "nearest-ipynb"]], "curvature.ipynb": [[3, "curvature-ipynb"]], "colors": [[4, "colors"]], "curvature": [[5, "curvature"]], "integrate": [[6, "integrate"]], "nearest": [[7, "nearest"]], "quick_start": [[8, "quick-start"]], "ray": [[9, "ray"]], "section": [[10, "section"]], "shortest": [[11, "shortest"]], "texture": [[12, "texture"]], "Links": [[13, "links"]], "Install": [[13, "install"]], "Contributing": [[13, "contributing"]], "Docker": [[13, "docker"]], "API Reference": [[13, "api-reference"]], "Installation": [[14, "installation"]], "Conda Packages": [[14, "conda-packages"]], "Ubuntu-Debian Notes": [[14, "ubuntu-debian-notes"]], "Dependency Overview": [[14, "dependency-overview"]], "trimesh": [[16, "trimesh"]], "https://github.com/mikedh/trimesh": [[16, "https-github-com-mikedh-trimesh"]], "Name                                        Default": [[16, "name-default"], [17, "name-default"]], "trimesh.base": [[17, "module-trimesh.base"]], "github.com/mikedh/trimesh": [[17, "github-com-mikedh-trimesh"]], "trimesh.boolean": [[18, "module-trimesh.boolean"]], "boolean.py": [[18, "boolean-py"]], "trimesh.bounds": [[19, "module-trimesh.bounds"]], "trimesh.caching": [[20, "module-trimesh.caching"]], "caching.py": [[20, "caching-py"]], "trimesh.collision": [[21, "module-trimesh.collision"]], "trimesh.comparison": [[22, "module-trimesh.comparison"]], "comparison.py": [[22, "comparison-py"]], "trimesh.constants": [[23, "module-trimesh.constants"]], "trimesh.convex": [[24, "module-trimesh.convex"]], "trimesh.creation": [[25, "module-trimesh.creation"]], "creation.py": [[25, "creation-py"]], "trimesh.curvature": [[26, "module-trimesh.curvature"]], "curvature.py": [[26, "curvature-py"]], "trimesh.decomposition": [[27, "module-trimesh.decomposition"]], "trimesh.exceptions": [[28, "module-trimesh.exceptions"]], "exceptions.py": [[28, "exceptions-py"]], "trimesh.exchange": [[29, "trimesh-exchange"]], "trimesh/exchange": [[29, "id1"]], "trimesh.exchange.binvox": [[30, "module-trimesh.exchange.binvox"]], "trimesh.exchange.dae": [[31, "module-trimesh.exchange.dae"]], "trimesh.exchange.export": [[32, "module-trimesh.exchange.export"]], "trimesh.exchange.gltf": [[33, "module-trimesh.exchange.gltf"]], "gltf.py": [[33, "gltf-py"]], "trimesh.exchange.load": [[34, "module-trimesh.exchange.load"]], "trimesh.exchange.misc": [[35, "module-trimesh.exchange.misc"]], "trimesh.exchange.obj": [[36, "module-trimesh.exchange.obj"]], "trimesh.exchange.off": [[37, "module-trimesh.exchange.off"]], "trimesh.exchange.openctm": [[38, "module-trimesh.exchange.openctm"]], "trimesh.exchange.ply": [[39, "module-trimesh.exchange.ply"]], "trimesh.exchange.stl": [[40, "module-trimesh.exchange.stl"]], "trimesh.exchange.threedxml": [[41, "module-trimesh.exchange.threedxml"]], "threedxml.py": [[41, "threedxml-py"]], "trimesh.exchange.threemf": [[42, "module-trimesh.exchange.threemf"]], "trimesh.exchange.urdf": [[43, "module-trimesh.exchange.urdf"]], "trimesh.exchange.xaml": [[44, "module-trimesh.exchange.xaml"]], "xaml.py": [[44, "xaml-py"]], "trimesh.exchange.xyz": [[45, "module-trimesh.exchange.xyz"]], "trimesh.geometry": [[46, "module-trimesh.geometry"]], "trimesh.graph": [[47, "module-trimesh.graph"]], "graph.py": [[47, "graph-py"]], "trimesh.grouping": [[48, "module-trimesh.grouping"]], "grouping.py": [[48, "grouping-py"]], "trimesh.inertia": [[49, "module-trimesh.inertia"]], "inertia.py": [[49, "inertia-py"]], "trimesh.integrate": [[50, "module-trimesh.integrate"]], "integrate.py": [[50, "integrate-py"]], "trimesh.interfaces": [[51, "trimesh-interfaces"]], "trimesh.interfaces.blender": [[52, "module-trimesh.interfaces.blender"]], "trimesh.interfaces.generic": [[53, "module-trimesh.interfaces.generic"]], "trimesh.interfaces.gmsh": [[54, "module-trimesh.interfaces.gmsh"]], "trimesh.interfaces.scad": [[55, "module-trimesh.interfaces.scad"]], "trimesh.interfaces.vhacd": [[56, "module-trimesh.interfaces.vhacd"]], "trimesh.intersections": [[57, "module-trimesh.intersections"]], "intersections.py": [[57, "intersections-py"]], "trimesh.interval": [[58, "module-trimesh.interval"]], "interval.py": [[58, "interval-py"]], "trimesh.nsphere": [[59, "module-trimesh.nsphere"]], "nsphere.py": [[59, "nsphere-py"]], "trimesh.parent": [[60, "module-trimesh.parent"]], "parent.py": [[60, "parent-py"]], "trimesh.path": [[61, "trimesh-path"], [61, "id1"]], "trimesh.path.arc": [[62, "module-trimesh.path.arc"]], "trimesh.path.creation": [[63, "module-trimesh.path.creation"]], "trimesh.path.curve": [[64, "module-trimesh.path.curve"]], "trimesh.path.entities": [[65, "module-trimesh.path.entities"]], "entities.py": [[65, "entities-py"]], "Parameter": [[65, "parameter"]], "trimesh.path.exchange": [[66, "trimesh-path-exchange"]], "trimesh.path.exchange.dxf": [[67, "module-trimesh.path.exchange.dxf"]], "trimesh.path.exchange.export": [[68, "module-trimesh.path.exchange.export"]], "trimesh.path.exchange.load": [[69, "module-trimesh.path.exchange.load"]], "trimesh.path.exchange.misc": [[70, "module-trimesh.path.exchange.misc"]], "trimesh.path.exchange.svg_io": [[71, "module-trimesh.path.exchange.svg_io"]], "trimesh.path.intersections": [[72, "module-trimesh.path.intersections"]], "trimesh.path.packing": [[73, "module-trimesh.path.packing"]], "packing.py": [[73, "packing-py"]], "trimesh.path.path": [[74, "module-trimesh.path.path"]], "path.py": [[74, "path-py"]], "trimesh.path.polygons": [[75, "module-trimesh.path.polygons"]], "trimesh.path.raster": [[76, "module-trimesh.path.raster"]], "raster.py": [[76, "raster-py"]], "trimesh.path.repair": [[77, "module-trimesh.path.repair"]], "repair.py": [[77, "repair-py"], [94, "repair-py"]], "trimesh.path.segments": [[78, "module-trimesh.path.segments"]], "segments.py": [[78, "segments-py"]], "trimesh.path.simplify": [[79, "module-trimesh.path.simplify"]], "trimesh.path.traversal": [[80, "module-trimesh.path.traversal"]], "trimesh.path.util": [[81, "module-trimesh.path.util"]], "trimesh.permutate": [[82, "module-trimesh.permutate"]], "permutate.py": [[82, "permutate-py"]], "trimesh.points": [[83, "module-trimesh.points"]], "points.py": [[83, "points-py"]], "trimesh.poses": [[84, "module-trimesh.poses"]], "poses.py": [[84, "poses-py"]], "trimesh.primitives": [[85, "module-trimesh.primitives"]], "primitives.py": [[85, "primitives-py"]], "trimesh.proximity": [[86, "module-trimesh.proximity"]], "proximity.py": [[86, "proximity-py"]], "trimesh.ray": [[87, "trimesh-ray"]], "trimesh.ray.ray_pyembree": [[88, "module-trimesh.ray.ray_pyembree"]], "trimesh.ray.ray_triangle": [[89, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[90, "module-trimesh.ray.ray_util"]], "trimesh.registration": [[91, "module-trimesh.registration"]], "registration.py": [[91, "registration-py"]], "trimesh.remesh": [[92, "module-trimesh.remesh"]], "remesh.py": [[92, "remesh-py"]], "trimesh.rendering": [[93, "module-trimesh.rendering"]], "rendering.py": [[93, "rendering-py"]], "trimesh.repair": [[94, "module-trimesh.repair"]], "trimesh.resolvers": [[95, "module-trimesh.resolvers"]], "resolvers.py": [[95, "resolvers-py"]], "trimesh.resources": [[96, "module-trimesh.resources"]], "trimesh.sample": [[97, "module-trimesh.sample"]], "sample.py": [[97, "sample-py"]], "trimesh.scene": [[98, "trimesh-scene"]], "trimesh.scene.cameras": [[99, "module-trimesh.scene.cameras"]], "trimesh.scene.lighting": [[100, "module-trimesh.scene.lighting"]], "lighting.py": [[100, "lighting-py"]], "trimesh.scene.scene": [[101, "module-trimesh.scene.scene"]], "trimesh.scene.transforms": [[102, "module-trimesh.scene.transforms"]], "trimesh.schemas": [[103, "module-trimesh.schemas"]], "schemas.py": [[103, "schemas-py"]], "trimesh.smoothing": [[104, "module-trimesh.smoothing"]], "trimesh.transformations": [[105, "module-trimesh.transformations"]], "Requirements": [[105, "requirements"]], "trimesh.triangles": [[106, "module-trimesh.triangles"]], "triangles.py": [[106, "triangles-py"]], "trimesh.units": [[107, "module-trimesh.units"]], "units.py": [[107, "units-py"]], "trimesh.util": [[108, "module-trimesh.util"]], "util.py": [[108, "util-py"]], "trimesh.version": [[109, "module-trimesh.version"]], "trimesh.viewer": [[110, "trimesh-viewer"]], "viewer": [[110, "viewer"]], "trimesh.viewer.notebook": [[111, "module-trimesh.viewer.notebook"]], "notebook.py": [[111, "notebook-py"]], "trimesh.viewer.trackball": [[112, "module-trimesh.viewer.trackball"]], "trimesh.viewer.widget": [[113, "module-trimesh.viewer.widget"]], "widget.py": [[113, "widget-py"]], "trimesh.viewer.windowed": [[114, "module-trimesh.viewer.windowed"]], "windowed.py": [[114, "windowed-py"]], "trimesh.visual": [[115, "trimesh-visual"]], "visual": [[115, "visual"]], "trimesh.visual.base": [[116, "module-trimesh.visual.base"]], "base.py": [[116, "base-py"]], "trimesh.visual.color": [[117, "module-trimesh.visual.color"]], "color.py": [[117, "color-py"]], "Goals": [[117, "goals"]], "trimesh.visual.material": [[118, "module-trimesh.visual.material"]], "material.py": [[118, "material-py"]], "trimesh.visual.objects": [[119, "module-trimesh.visual.objects"]], "objects.py": [[119, "objects-py"]], "trimesh.visual.texture": [[120, "module-trimesh.visual.texture"]], "trimesh.voxel": [[121, "trimesh-voxel"]], "trimesh.voxel.base": [[122, "module-trimesh.voxel.base"]], "voxel.py": [[122, "voxel-py"]], "trimesh.voxel.creation": [[123, "module-trimesh.voxel.creation"]], "trimesh.voxel.encoding": [[124, "module-trimesh.voxel.encoding"]], "trimesh.voxel.morphology": [[125, "module-trimesh.voxel.morphology"]], "trimesh.voxel.ops": [[126, "module-trimesh.voxel.ops"]], "trimesh.voxel.runlength": [[127, "module-trimesh.voxel.runlength"]], "trimesh.voxel.transforms": [[128, "module-trimesh.voxel.transforms"]]}, "indexentries": {"pointcloud (class in trimesh)": [[16, "trimesh.PointCloud"]], "scene (class in trimesh)": [[16, "trimesh.Scene"]], "trimesh (class in trimesh)": [[16, "trimesh.Trimesh"]], "__init__() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.__init__"]], "__init__() (trimesh.scene method)": [[16, "trimesh.Scene.__init__"]], "__init__() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.__init__"]], "add_geometry() (trimesh.scene method)": [[16, "trimesh.Scene.add_geometry"]], "apply_transform() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.apply_transform"]], "apply_transform() (trimesh.scene method)": [[16, "trimesh.Scene.apply_transform"]], "apply_transform() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.apply_transform"]], "area (trimesh.scene property)": [[16, "trimesh.Scene.area"]], "area (trimesh.trimesh property)": [[16, "trimesh.Trimesh.area"]], "area_faces (trimesh.trimesh property)": [[16, "trimesh.Trimesh.area_faces"]], "as_open3d (trimesh.trimesh property)": [[16, "trimesh.Trimesh.as_open3d"]], "available_formats() (in module trimesh)": [[16, "trimesh.available_formats"]], "body_count (trimesh.trimesh property)": [[16, "trimesh.Trimesh.body_count"]], "bounds (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.bounds"]], "bounds (trimesh.scene property)": [[16, "trimesh.Scene.bounds"]], "bounds (trimesh.trimesh property)": [[16, "trimesh.Trimesh.bounds"]], "bounds_corners (trimesh.scene property)": [[16, "trimesh.Scene.bounds_corners"]], "camera (trimesh.scene property)": [[16, "trimesh.Scene.camera"]], "camera_rays() (trimesh.scene method)": [[16, "trimesh.Scene.camera_rays"]], "camera_transform (trimesh.scene property)": [[16, "trimesh.Scene.camera_transform"]], "center_mass (trimesh.trimesh property)": [[16, "trimesh.Trimesh.center_mass"]], "centroid (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.centroid"]], "centroid (trimesh.scene property)": [[16, "trimesh.Scene.centroid"]], "centroid (trimesh.trimesh property)": [[16, "trimesh.Trimesh.centroid"]], "colors (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.colors"]], "compute_stable_poses() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.compute_stable_poses"]], "contains() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.contains"]], "convert_units() (trimesh.scene method)": [[16, "trimesh.Scene.convert_units"]], "convert_units() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.convert_units"]], "convex_decomposition() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.convex_decomposition"]], "convex_hull (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.convex_hull"]], "convex_hull (trimesh.scene property)": [[16, "trimesh.Scene.convex_hull"]], "convex_hull (trimesh.trimesh property)": [[16, "trimesh.Trimesh.convex_hull"]], "copy() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.copy"]], "copy() (trimesh.scene method)": [[16, "trimesh.Scene.copy"]], "copy() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.copy"]], "crc() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.crc"]], "deduplicated() (trimesh.scene method)": [[16, "trimesh.Scene.deduplicated"]], "delete_geometry() (trimesh.scene method)": [[16, "trimesh.Scene.delete_geometry"]], "density (trimesh.trimesh property)": [[16, "trimesh.Trimesh.density"]], "difference() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.difference"]], "dump() (trimesh.scene method)": [[16, "trimesh.Scene.dump"]], "duplicate_nodes (trimesh.scene property)": [[16, "trimesh.Scene.duplicate_nodes"]], "edges (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges"]], "edges_face (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_face"]], "edges_sorted (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_sparse"]], "edges_unique (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.trimesh property)": [[16, "trimesh.Trimesh.edges_unique_length"]], "euler_number (trimesh.trimesh property)": [[16, "trimesh.Trimesh.euler_number"]], "eval_cached() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.eval_cached"]], "explode() (trimesh.scene method)": [[16, "trimesh.Scene.explode"]], "export() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.export"]], "export() (trimesh.scene method)": [[16, "trimesh.Scene.export"]], "export() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.export"]], "extents (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.extents"]], "extents (trimesh.scene property)": [[16, "trimesh.Scene.extents"]], "extents (trimesh.trimesh property)": [[16, "trimesh.Trimesh.extents"]], "face_adjacency (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_angles"]], "face_angles_sparse (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_neighborhood"]], "face_normals (trimesh.trimesh property)": [[16, "trimesh.Trimesh.face_normals"]], "faces (trimesh.trimesh property)": [[16, "trimesh.Trimesh.faces"]], "faces_sparse (trimesh.trimesh property)": [[16, "trimesh.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.trimesh property)": [[16, "trimesh.Trimesh.faces_unique_edges"]], "facets (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets"]], "facets_area (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets_area"]], "facets_boundary (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets_boundary"]], "facets_normal (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets_normal"]], "facets_on_hull (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets_on_hull"]], "facets_origin (trimesh.trimesh property)": [[16, "trimesh.Trimesh.facets_origin"]], "fill_holes() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.fill_holes"]], "fix_normals() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.fix_normals"]], "geometry_identifiers (trimesh.scene property)": [[16, "trimesh.Scene.geometry_identifiers"]], "has_camera (trimesh.scene property)": [[16, "trimesh.Scene.has_camera"]], "hash() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.hash"]], "identifier (trimesh.trimesh property)": [[16, "trimesh.Trimesh.identifier"]], "identifier_hash (trimesh.trimesh property)": [[16, "trimesh.Trimesh.identifier_hash"]], "identifier_md5 (trimesh.trimesh property)": [[16, "trimesh.Trimesh.identifier_md5"]], "integral_mean_curvature (trimesh.trimesh property)": [[16, "trimesh.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.intersection"]], "invert() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.invert"]], "is_convex (trimesh.trimesh property)": [[16, "trimesh.Trimesh.is_convex"]], "is_empty (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.is_empty"]], "is_empty (trimesh.scene property)": [[16, "trimesh.Scene.is_empty"]], "is_empty (trimesh.trimesh property)": [[16, "trimesh.Trimesh.is_empty"]], "is_valid (trimesh.scene property)": [[16, "trimesh.Scene.is_valid"]], "is_volume (trimesh.trimesh property)": [[16, "trimesh.Trimesh.is_volume"]], "is_watertight (trimesh.trimesh property)": [[16, "trimesh.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.trimesh property)": [[16, "trimesh.Trimesh.is_winding_consistent"]], "kdtree (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.kdtree"]], "kdtree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.kdtree"]], "lights (trimesh.scene property)": [[16, "trimesh.Scene.lights"]], "load() (in module trimesh)": [[16, "trimesh.load"]], "load_mesh() (in module trimesh)": [[16, "trimesh.load_mesh"]], "load_path() (in module trimesh)": [[16, "trimesh.load_path"]], "load_remote() (in module trimesh)": [[16, "trimesh.load_remote"]], "mass (trimesh.trimesh property)": [[16, "trimesh.Trimesh.mass"]], "mass_properties (trimesh.trimesh property)": [[16, "trimesh.Trimesh.mass_properties"]], "merge_vertices() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.merge_vertices"]], "merge_vertices() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.merge_vertices"]], "module": [[16, "module-trimesh"], [17, "module-trimesh.base"], [18, "module-trimesh.boolean"], [19, "module-trimesh.bounds"], [20, "module-trimesh.caching"], [21, "module-trimesh.collision"], [22, "module-trimesh.comparison"], [23, "module-trimesh.constants"], [24, "module-trimesh.convex"], [25, "module-trimesh.creation"], [26, "module-trimesh.curvature"], [27, "module-trimesh.decomposition"], [28, "module-trimesh.exceptions"], [29, "module-trimesh.exchange"], [30, "module-trimesh.exchange.binvox"], [31, "module-trimesh.exchange.dae"], [32, "module-trimesh.exchange.export"], [33, "module-trimesh.exchange.gltf"], [34, "module-trimesh.exchange.load"], [35, "module-trimesh.exchange.misc"], [36, "module-trimesh.exchange.obj"], [37, "module-trimesh.exchange.off"], [38, "module-trimesh.exchange.openctm"], [39, "module-trimesh.exchange.ply"], [40, "module-trimesh.exchange.stl"], [41, "module-trimesh.exchange.threedxml"], [42, "module-trimesh.exchange.threemf"], [43, "module-trimesh.exchange.urdf"], [44, "module-trimesh.exchange.xaml"], [45, "module-trimesh.exchange.xyz"], [46, "module-trimesh.geometry"], [47, "module-trimesh.graph"], [48, "module-trimesh.grouping"], [49, "module-trimesh.inertia"], [50, "module-trimesh.integrate"], [51, "module-trimesh.interfaces"], [52, "module-trimesh.interfaces.blender"], [53, "module-trimesh.interfaces.generic"], [54, "module-trimesh.interfaces.gmsh"], [55, "module-trimesh.interfaces.scad"], [56, "module-trimesh.interfaces.vhacd"], [57, "module-trimesh.intersections"], [58, "module-trimesh.interval"], [59, "module-trimesh.nsphere"], [60, "module-trimesh.parent"], [61, "module-trimesh.path"], [62, "module-trimesh.path.arc"], [63, "module-trimesh.path.creation"], [64, "module-trimesh.path.curve"], [65, "module-trimesh.path.entities"], [66, "module-trimesh.path.exchange"], [67, "module-trimesh.path.exchange.dxf"], [68, "module-trimesh.path.exchange.export"], [69, "module-trimesh.path.exchange.load"], [70, "module-trimesh.path.exchange.misc"], [71, "module-trimesh.path.exchange.svg_io"], [72, "module-trimesh.path.intersections"], [73, "module-trimesh.path.packing"], [74, "module-trimesh.path.path"], [75, "module-trimesh.path.polygons"], [76, "module-trimesh.path.raster"], [77, "module-trimesh.path.repair"], [78, "module-trimesh.path.segments"], [79, "module-trimesh.path.simplify"], [80, "module-trimesh.path.traversal"], [81, "module-trimesh.path.util"], [82, "module-trimesh.permutate"], [83, "module-trimesh.points"], [84, "module-trimesh.poses"], [85, "module-trimesh.primitives"], [86, "module-trimesh.proximity"], [87, "module-trimesh.ray"], [88, "module-trimesh.ray.ray_pyembree"], [89, "module-trimesh.ray.ray_triangle"], [90, "module-trimesh.ray.ray_util"], [91, "module-trimesh.registration"], [92, "module-trimesh.remesh"], [93, "module-trimesh.rendering"], [94, "module-trimesh.repair"], [95, "module-trimesh.resolvers"], [96, "module-trimesh.resources"], [97, "module-trimesh.sample"], [98, "module-trimesh.scene"], [99, "module-trimesh.scene.cameras"], [100, "module-trimesh.scene.lighting"], [101, "module-trimesh.scene.scene"], [102, "module-trimesh.scene.transforms"], [103, "module-trimesh.schemas"], [104, "module-trimesh.smoothing"], [105, "module-trimesh.transformations"], [106, "module-trimesh.triangles"], [107, "module-trimesh.units"], [108, "module-trimesh.util"], [109, "module-trimesh.version"], [110, "module-trimesh.viewer"], [111, "module-trimesh.viewer.notebook"], [112, "module-trimesh.viewer.trackball"], [113, "module-trimesh.viewer.widget"], [114, "module-trimesh.viewer.windowed"], [115, "module-trimesh.visual"], [116, "module-trimesh.visual.base"], [117, "module-trimesh.visual.color"], [118, "module-trimesh.visual.material"], [119, "module-trimesh.visual.objects"], [120, "module-trimesh.visual.texture"], [121, "module-trimesh.voxel"], [122, "module-trimesh.voxel.base"], [123, "module-trimesh.voxel.creation"], [124, "module-trimesh.voxel.encoding"], [125, "module-trimesh.voxel.morphology"], [126, "module-trimesh.voxel.ops"], [127, "module-trimesh.voxel.runlength"], [128, "module-trimesh.voxel.transforms"]], "moment_inertia (trimesh.trimesh property)": [[16, "trimesh.Trimesh.moment_inertia"]], "outline() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.outline"]], "principal_inertia_components (trimesh.trimesh property)": [[16, "trimesh.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.trimesh property)": [[16, "trimesh.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.trimesh property)": [[16, "trimesh.Trimesh.principal_inertia_vectors"]], "process() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.process"]], "projected() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.projected"]], "query() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.query"]], "referenced_vertices (trimesh.trimesh property)": [[16, "trimesh.Trimesh.referenced_vertices"]], "register() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.register"]], "remove_degenerate_faces() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.scene method)": [[16, "trimesh.Scene.rezero"]], "rezero() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.rezero"]], "sample() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.sample"]], "save_image() (trimesh.scene method)": [[16, "trimesh.Scene.save_image"]], "scale (trimesh.scene property)": [[16, "trimesh.Scene.scale"]], "scale (trimesh.trimesh property)": [[16, "trimesh.Trimesh.scale"]], "scaled() (trimesh.scene method)": [[16, "trimesh.Scene.scaled"]], "scene() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.scene"]], "scene() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.scene"]], "section() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.section"]], "section_multiplane() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.section_multiplane"]], "set_camera() (trimesh.scene method)": [[16, "trimesh.Scene.set_camera"]], "shape (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.shape"]], "show() (trimesh.pointcloud method)": [[16, "trimesh.PointCloud.show"]], "show() (trimesh.scene method)": [[16, "trimesh.Scene.show"]], "show() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.simplify_quadratic_decimation"]], "slice_plane() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.slice_plane"]], "smoothed() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.smoothed"]], "split() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.split"]], "strip_visuals() (trimesh.scene method)": [[16, "trimesh.Scene.strip_visuals"]], "subdivide() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.subdivide"]], "subdivide_loop() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.subdivide_to_size"]], "submesh() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.submesh"]], "subscene() (trimesh.scene method)": [[16, "trimesh.Scene.subscene"]], "symmetry (trimesh.trimesh property)": [[16, "trimesh.Trimesh.symmetry"]], "symmetry_axis (trimesh.trimesh property)": [[16, "trimesh.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.trimesh property)": [[16, "trimesh.Trimesh.symmetry_section"]], "to_dict() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.to_dict"]], "transform_points() (in module trimesh)": [[16, "trimesh.transform_points"]], "triangles (trimesh.scene property)": [[16, "trimesh.Scene.triangles"]], "triangles (trimesh.trimesh property)": [[16, "trimesh.Trimesh.triangles"]], "triangles_center (trimesh.trimesh property)": [[16, "trimesh.Trimesh.triangles_center"]], "triangles_cross (trimesh.trimesh property)": [[16, "trimesh.Trimesh.triangles_cross"]], "triangles_node (trimesh.scene property)": [[16, "trimesh.Scene.triangles_node"]], "triangles_tree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.triangles_tree"]], "trimesh": [[16, "module-trimesh"]], "union() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.union"]], "unitize() (in module trimesh)": [[16, "trimesh.unitize"]], "units (trimesh.scene property)": [[16, "trimesh.Scene.units"]], "units (trimesh.trimesh property)": [[16, "trimesh.Trimesh.units"]], "unmerge_vertices() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.unwrap"]], "update_faces() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.update_faces"]], "update_vertices() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_defects"]], "vertex_degree (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_degree"]], "vertex_faces (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertex_normals"]], "vertices (trimesh.pointcloud property)": [[16, "trimesh.PointCloud.vertices"]], "vertices (trimesh.trimesh property)": [[16, "trimesh.Trimesh.vertices"]], "visual (trimesh.trimesh property)": [[16, "trimesh.Trimesh.visual"]], "volume (trimesh.trimesh property)": [[16, "trimesh.Trimesh.volume"]], "voxelized() (trimesh.trimesh method)": [[16, "trimesh.Trimesh.voxelized"]], "trimesh (class in trimesh.base)": [[17, "trimesh.base.Trimesh"]], "__init__() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.__init__"]], "apply_transform() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.apply_transform"]], "area (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.area"]], "area_faces (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.area_faces"]], "as_open3d (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.as_open3d"]], "body_count (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.body_count"]], "bounds (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.bounds"]], "center_mass (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.center_mass"]], "centroid (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.centroid"]], "compute_stable_poses() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.compute_stable_poses"]], "contains() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.contains"]], "convert_units() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.convert_units"]], "convex_decomposition() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.convex_decomposition"]], "convex_hull (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.convex_hull"]], "copy() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.copy"]], "density (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.density"]], "difference() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.difference"]], "edges (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges"]], "edges_face (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_face"]], "edges_sorted (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_sorted"]], "edges_sorted_tree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_sorted_tree"]], "edges_sparse (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_sparse"]], "edges_unique (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_unique"]], "edges_unique_inverse (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_unique_inverse"]], "edges_unique_length (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.edges_unique_length"]], "euler_number (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.euler_number"]], "eval_cached() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.eval_cached"]], "export() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.export"]], "extents (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.extents"]], "face_adjacency (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency"]], "face_adjacency_angles (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_angles"]], "face_adjacency_convex (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_convex"]], "face_adjacency_edges (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_edges"]], "face_adjacency_edges_tree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_edges_tree"]], "face_adjacency_projections (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_projections"]], "face_adjacency_radius (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_radius"]], "face_adjacency_span (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_span"]], "face_adjacency_tree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_tree"]], "face_adjacency_unshared (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_adjacency_unshared"]], "face_angles (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_angles"]], "face_angles_sparse (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_angles_sparse"]], "face_neighborhood (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_neighborhood"]], "face_normals (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.face_normals"]], "faces (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.faces"]], "faces_sparse (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.faces_sparse"]], "faces_unique_edges (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.faces_unique_edges"]], "facets (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets"]], "facets_area (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets_area"]], "facets_boundary (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets_boundary"]], "facets_normal (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets_normal"]], "facets_on_hull (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets_on_hull"]], "facets_origin (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.facets_origin"]], "fill_holes() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.fill_holes"]], "fix_normals() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.fix_normals"]], "identifier (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.identifier"]], "identifier_hash (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.identifier_hash"]], "identifier_md5 (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.identifier_md5"]], "integral_mean_curvature (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.integral_mean_curvature"]], "intersection() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.intersection"]], "invert() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.invert"]], "is_convex (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.is_convex"]], "is_empty (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.is_empty"]], "is_volume (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.is_volume"]], "is_watertight (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.is_watertight"]], "is_winding_consistent (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.is_winding_consistent"]], "kdtree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.kdtree"]], "mass (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.mass"]], "mass_properties (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.mass_properties"]], "merge_vertices() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.merge_vertices"]], "moment_inertia (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.moment_inertia"]], "outline() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.outline"]], "principal_inertia_components (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.principal_inertia_components"]], "principal_inertia_transform (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.principal_inertia_transform"]], "principal_inertia_vectors (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.principal_inertia_vectors"]], "process() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.process"]], "projected() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.projected"]], "referenced_vertices (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.referenced_vertices"]], "register() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.register"]], "remove_degenerate_faces() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.remove_degenerate_faces"]], "remove_duplicate_faces() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.remove_duplicate_faces"]], "remove_infinite_values() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.remove_infinite_values"]], "remove_unreferenced_vertices() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.remove_unreferenced_vertices"]], "rezero() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.rezero"]], "sample() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.sample"]], "scale (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.scale"]], "scene() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.scene"]], "section() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.section"]], "section_multiplane() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.section_multiplane"]], "show() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.show"]], "simplify_quadratic_decimation() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.simplify_quadratic_decimation"]], "slice_plane() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.slice_plane"]], "smoothed() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.smoothed"]], "split() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.split"]], "subdivide() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.subdivide"]], "subdivide_loop() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.subdivide_loop"]], "subdivide_to_size() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.subdivide_to_size"]], "submesh() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.submesh"]], "symmetry (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.symmetry"]], "symmetry_axis (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.symmetry_axis"]], "symmetry_section (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.symmetry_section"]], "to_dict() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.to_dict"]], "triangles (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.triangles"]], "triangles_center (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.triangles_center"]], "triangles_cross (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.triangles_cross"]], "triangles_tree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.triangles_tree"]], "trimesh.base": [[17, "module-trimesh.base"]], "union() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.union"]], "units (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.units"]], "unmerge_vertices() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.unmerge_vertices"]], "unwrap() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.unwrap"]], "update_faces() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.update_faces"]], "update_vertices() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.update_vertices"]], "vertex_adjacency_graph (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_adjacency_graph"]], "vertex_defects (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_defects"]], "vertex_degree (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_degree"]], "vertex_faces (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_faces"]], "vertex_neighbors (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_neighbors"]], "vertex_normals (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertex_normals"]], "vertices (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.vertices"]], "visual (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.visual"]], "volume (trimesh.base.trimesh property)": [[17, "trimesh.base.Trimesh.volume"]], "voxelized() (trimesh.base.trimesh method)": [[17, "trimesh.base.Trimesh.voxelized"]], "boolean_automatic() (in module trimesh.boolean)": [[18, "trimesh.boolean.boolean_automatic"]], "difference() (in module trimesh.boolean)": [[18, "trimesh.boolean.difference"]], "intersection() (in module trimesh.boolean)": [[18, "trimesh.boolean.intersection"]], "trimesh.boolean": [[18, "module-trimesh.boolean"]], "union() (in module trimesh.boolean)": [[18, "trimesh.boolean.union"]], "contains() (in module trimesh.bounds)": [[19, "trimesh.bounds.contains"]], "corners() (in module trimesh.bounds)": [[19, "trimesh.bounds.corners"]], "minimum_cylinder() (in module trimesh.bounds)": [[19, "trimesh.bounds.minimum_cylinder"]], "oriented_bounds() (in module trimesh.bounds)": [[19, "trimesh.bounds.oriented_bounds"]], "oriented_bounds_2d() (in module trimesh.bounds)": [[19, "trimesh.bounds.oriented_bounds_2D"]], "to_extents() (in module trimesh.bounds)": [[19, "trimesh.bounds.to_extents"]], "trimesh.bounds": [[19, "module-trimesh.bounds"]], "cache (class in trimesh.caching)": [[20, "trimesh.caching.Cache"]], "datastore (class in trimesh.caching)": [[20, "trimesh.caching.DataStore"]], "diskcache (class in trimesh.caching)": [[20, "trimesh.caching.DiskCache"]], "trackedarray (class in trimesh.caching)": [[20, "trimesh.caching.TrackedArray"]], "__init__() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.__init__"]], "__init__() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.__init__"]], "__init__() (trimesh.caching.diskcache method)": [[20, "trimesh.caching.DiskCache.__init__"]], "cache_decorator() (in module trimesh.caching)": [[20, "trimesh.caching.cache_decorator"]], "clear() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.clear"]], "clear() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.clear"]], "crc() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.crc"]], "crc() (trimesh.caching.trackedarray method)": [[20, "trimesh.caching.TrackedArray.crc"]], "delete() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.delete"]], "fast_hash() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.fast_hash"]], "get() (trimesh.caching.diskcache method)": [[20, "trimesh.caching.DiskCache.get"]], "hash() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.hash"]], "hash() (trimesh.caching.trackedarray method)": [[20, "trimesh.caching.TrackedArray.hash"]], "hash_fallback() (in module trimesh.caching)": [[20, "trimesh.caching.hash_fallback"]], "id_set() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.id_set"]], "is_empty() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.is_empty"]], "md5() (trimesh.caching.trackedarray method)": [[20, "trimesh.caching.TrackedArray.md5"]], "mutable (trimesh.caching.datastore property)": [[20, "trimesh.caching.DataStore.mutable"]], "mutable (trimesh.caching.trackedarray property)": [[20, "trimesh.caching.TrackedArray.mutable"]], "pop() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.pop"]], "sha256() (in module trimesh.caching)": [[20, "trimesh.caching.sha256"]], "tracked_array() (in module trimesh.caching)": [[20, "trimesh.caching.tracked_array"]], "trimesh.caching": [[20, "module-trimesh.caching"]], "update() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.update"]], "update() (trimesh.caching.datastore method)": [[20, "trimesh.caching.DataStore.update"]], "verify() (trimesh.caching.cache method)": [[20, "trimesh.caching.Cache.verify"]], "collisionmanager (class in trimesh.collision)": [[21, "trimesh.collision.CollisionManager"]], "contactdata (class in trimesh.collision)": [[21, "trimesh.collision.ContactData"]], "distancedata (class in trimesh.collision)": [[21, "trimesh.collision.DistanceData"]], "__init__() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.__init__"]], "__init__() (trimesh.collision.contactdata method)": [[21, "trimesh.collision.ContactData.__init__"]], "__init__() (trimesh.collision.distancedata method)": [[21, "trimesh.collision.DistanceData.__init__"]], "add_object() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.add_object"]], "depth (trimesh.collision.contactdata property)": [[21, "trimesh.collision.ContactData.depth"]], "distance (trimesh.collision.distancedata property)": [[21, "trimesh.collision.DistanceData.distance"]], "in_collision_internal() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.in_collision_internal"]], "in_collision_other() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.in_collision_other"]], "in_collision_single() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.in_collision_single"]], "index() (trimesh.collision.contactdata method)": [[21, "trimesh.collision.ContactData.index"]], "index() (trimesh.collision.distancedata method)": [[21, "trimesh.collision.DistanceData.index"]], "mesh_to_bvh() (in module trimesh.collision)": [[21, "trimesh.collision.mesh_to_BVH"]], "mesh_to_convex() (in module trimesh.collision)": [[21, "trimesh.collision.mesh_to_convex"]], "min_distance_internal() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.min_distance_internal"]], "min_distance_other() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.min_distance_other"]], "min_distance_single() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.min_distance_single"]], "normal (trimesh.collision.contactdata property)": [[21, "trimesh.collision.ContactData.normal"]], "point (trimesh.collision.contactdata property)": [[21, "trimesh.collision.ContactData.point"]], "point() (trimesh.collision.distancedata method)": [[21, "trimesh.collision.DistanceData.point"]], "remove_object() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.remove_object"]], "scene_to_collision() (in module trimesh.collision)": [[21, "trimesh.collision.scene_to_collision"]], "set_transform() (trimesh.collision.collisionmanager method)": [[21, "trimesh.collision.CollisionManager.set_transform"]], "trimesh.collision": [[21, "module-trimesh.collision"]], "face_ordering() (in module trimesh.comparison)": [[22, "trimesh.comparison.face_ordering"]], "identifier_hash() (in module trimesh.comparison)": [[22, "trimesh.comparison.identifier_hash"]], "identifier_simple() (in module trimesh.comparison)": [[22, "trimesh.comparison.identifier_simple"]], "trimesh.comparison": [[22, "module-trimesh.comparison"]], "resolutionpath (class in trimesh.constants)": [[23, "trimesh.constants.ResolutionPath"]], "tolerancemesh (class in trimesh.constants)": [[23, "trimesh.constants.ToleranceMesh"]], "tolerancepath (class in trimesh.constants)": [[23, "trimesh.constants.TolerancePath"]], "__init__() (trimesh.constants.resolutionpath method)": [[23, "trimesh.constants.ResolutionPath.__init__"]], "__init__() (trimesh.constants.tolerancemesh method)": [[23, "trimesh.constants.ToleranceMesh.__init__"]], "__init__() (trimesh.constants.tolerancepath method)": [[23, "trimesh.constants.TolerancePath.__init__"]], "log_time() (in module trimesh.constants)": [[23, "trimesh.constants.log_time"]], "trimesh.constants": [[23, "module-trimesh.constants"]], "adjacency_projections() (in module trimesh.convex)": [[24, "trimesh.convex.adjacency_projections"]], "convex_hull() (in module trimesh.convex)": [[24, "trimesh.convex.convex_hull"]], "hull_points() (in module trimesh.convex)": [[24, "trimesh.convex.hull_points"]], "is_convex() (in module trimesh.convex)": [[24, "trimesh.convex.is_convex"]], "trimesh.convex": [[24, "module-trimesh.convex"]], "annulus() (in module trimesh.creation)": [[25, "trimesh.creation.annulus"]], "axis() (in module trimesh.creation)": [[25, "trimesh.creation.axis"]], "box() (in module trimesh.creation)": [[25, "trimesh.creation.box"]], "camera_marker() (in module trimesh.creation)": [[25, "trimesh.creation.camera_marker"]], "capsule() (in module trimesh.creation)": [[25, "trimesh.creation.capsule"]], "cone() (in module trimesh.creation)": [[25, "trimesh.creation.cone"]], "cylinder() (in module trimesh.creation)": [[25, "trimesh.creation.cylinder"]], "extrude_polygon() (in module trimesh.creation)": [[25, "trimesh.creation.extrude_polygon"]], "extrude_triangulation() (in module trimesh.creation)": [[25, "trimesh.creation.extrude_triangulation"]], "icosahedron() (in module trimesh.creation)": [[25, "trimesh.creation.icosahedron"]], "icosphere() (in module trimesh.creation)": [[25, "trimesh.creation.icosphere"]], "random_soup() (in module trimesh.creation)": [[25, "trimesh.creation.random_soup"]], "revolve() (in module trimesh.creation)": [[25, "trimesh.creation.revolve"]], "sweep_polygon() (in module trimesh.creation)": [[25, "trimesh.creation.sweep_polygon"]], "triangulate_polygon() (in module trimesh.creation)": [[25, "trimesh.creation.triangulate_polygon"]], "trimesh.creation": [[25, "module-trimesh.creation"]], "truncated_prisms() (in module trimesh.creation)": [[25, "trimesh.creation.truncated_prisms"]], "uv_sphere() (in module trimesh.creation)": [[25, "trimesh.creation.uv_sphere"]], "discrete_gaussian_curvature_measure() (in module trimesh.curvature)": [[26, "trimesh.curvature.discrete_gaussian_curvature_measure"]], "discrete_mean_curvature_measure() (in module trimesh.curvature)": [[26, "trimesh.curvature.discrete_mean_curvature_measure"]], "face_angles_sparse() (in module trimesh.curvature)": [[26, "trimesh.curvature.face_angles_sparse"]], "line_ball_intersection() (in module trimesh.curvature)": [[26, "trimesh.curvature.line_ball_intersection"]], "sphere_ball_intersection() (in module trimesh.curvature)": [[26, "trimesh.curvature.sphere_ball_intersection"]], "trimesh.curvature": [[26, "module-trimesh.curvature"]], "vertex_defects() (in module trimesh.curvature)": [[26, "trimesh.curvature.vertex_defects"]], "convex_decomposition() (in module trimesh.decomposition)": [[27, "trimesh.decomposition.convex_decomposition"]], "trimesh.decomposition": [[27, "module-trimesh.decomposition"]], "exceptionmodule (class in trimesh.exceptions)": [[28, "trimesh.exceptions.ExceptionModule"]], "__init__() (trimesh.exceptions.exceptionmodule method)": [[28, "trimesh.exceptions.ExceptionModule.__init__"]], "closure() (in module trimesh.exceptions)": [[28, "trimesh.exceptions.closure"]], "trimesh.exceptions": [[28, "module-trimesh.exceptions"]], "trimesh.exchange": [[29, "module-trimesh.exchange"]], "binvox (class in trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.Binvox"]], "binvoxer (class in trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.Binvoxer"]], "supported_input_types (trimesh.exchange.binvox.binvoxer attribute)": [[30, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_INPUT_TYPES"]], "supported_output_types (trimesh.exchange.binvox.binvoxer attribute)": [[30, "trimesh.exchange.binvox.Binvoxer.SUPPORTED_OUTPUT_TYPES"]], "__init__() (trimesh.exchange.binvox.binvoxer method)": [[30, "trimesh.exchange.binvox.Binvoxer.__init__"]], "binvox_bytes() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.binvox_bytes"]], "binvox_header() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.binvox_header"]], "export_binvox() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.export_binvox"]], "file_type (trimesh.exchange.binvox.binvoxer property)": [[30, "trimesh.exchange.binvox.Binvoxer.file_type"]], "load_binvox() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.load_binvox"]], "parse_binvox() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.parse_binvox"]], "parse_binvox_header() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.parse_binvox_header"]], "rle_data (trimesh.exchange.binvox.binvox attribute)": [[30, "trimesh.exchange.binvox.Binvox.rle_data"]], "scale (trimesh.exchange.binvox.binvox attribute)": [[30, "trimesh.exchange.binvox.Binvox.scale"]], "shape (trimesh.exchange.binvox.binvox attribute)": [[30, "trimesh.exchange.binvox.Binvox.shape"]], "translate (trimesh.exchange.binvox.binvox attribute)": [[30, "trimesh.exchange.binvox.Binvox.translate"]], "trimesh.exchange.binvox": [[30, "module-trimesh.exchange.binvox"]], "voxel_from_binvox() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.voxel_from_binvox"]], "voxelize_mesh() (in module trimesh.exchange.binvox)": [[30, "trimesh.exchange.binvox.voxelize_mesh"]], "export_collada() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.export_collada"]], "load_collada() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.load_collada"]], "load_zae() (in module trimesh.exchange.dae)": [[31, "trimesh.exchange.dae.load_zae"]], "trimesh.exchange.dae": [[31, "module-trimesh.exchange.dae"]], "export_dict() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_dict"]], "export_dict64() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_dict64"]], "export_json() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_json"]], "export_mesh() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_mesh"]], "export_msgpack() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_msgpack"]], "export_scene() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.export_scene"]], "scene_to_dict() (in module trimesh.exchange.export)": [[32, "trimesh.exchange.export.scene_to_dict"]], "trimesh.exchange.export": [[32, "module-trimesh.exchange.export"]], "export_glb() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.export_glb"]], "export_gltf() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.export_gltf"]], "get_schema() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.get_schema"]], "load_glb() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.load_glb"]], "load_gltf() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.load_gltf"]], "specular_to_pbr() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.specular_to_pbr"]], "trimesh.exchange.gltf": [[33, "module-trimesh.exchange.gltf"]], "validate() (in module trimesh.exchange.gltf)": [[33, "trimesh.exchange.gltf.validate"]], "available_formats() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.available_formats"]], "load() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load"]], "load_compressed() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_compressed"]], "load_kwargs() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_kwargs"]], "load_mesh() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_mesh"]], "load_remote() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.load_remote"]], "mesh_formats() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.mesh_formats"]], "parse_file_args() (in module trimesh.exchange.load)": [[34, "trimesh.exchange.load.parse_file_args"]], "trimesh.exchange.load": [[34, "module-trimesh.exchange.load"]], "load_dict() (in module trimesh.exchange.misc)": [[35, "trimesh.exchange.misc.load_dict"]], "load_meshio() (in module trimesh.exchange.misc)": [[35, "trimesh.exchange.misc.load_meshio"]], "load_msgpack() (in module trimesh.exchange.misc)": [[35, "trimesh.exchange.misc.load_msgpack"]], "trimesh.exchange.misc": [[35, "module-trimesh.exchange.misc"]], "export_obj() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.export_obj"]], "load_obj() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.load_obj"]], "parse_mtl() (in module trimesh.exchange.obj)": [[36, "trimesh.exchange.obj.parse_mtl"]], "trimesh.exchange.obj": [[36, "module-trimesh.exchange.obj"]], "export_off() (in module trimesh.exchange.off)": [[37, "trimesh.exchange.off.export_off"]], "load_off() (in module trimesh.exchange.off)": [[37, "trimesh.exchange.off.load_off"]], "trimesh.exchange.off": [[37, "module-trimesh.exchange.off"]], "load_ctm() (in module trimesh.exchange.openctm)": [[38, "trimesh.exchange.openctm.load_ctm"]], "trimesh.exchange.openctm": [[38, "module-trimesh.exchange.openctm"]], "add_attributes_to_data_array() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.add_attributes_to_data_array"]], "add_attributes_to_dtype() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.add_attributes_to_dtype"]], "add_attributes_to_header() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.add_attributes_to_header"]], "assert_attributes_valid() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.assert_attributes_valid"]], "element_colors() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.element_colors"]], "elements_to_kwargs() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.elements_to_kwargs"]], "export_draco() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.export_draco"]], "export_ply() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.export_ply"]], "load_draco() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.load_draco"]], "load_element_different() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.load_element_different"]], "load_element_single() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.load_element_single"]], "load_ply() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.load_ply"]], "numpy_type_to_ply_type() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.numpy_type_to_ply_type"]], "parse_header() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.parse_header"]], "ply_ascii() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.ply_ascii"]], "ply_binary() (in module trimesh.exchange.ply)": [[39, "trimesh.exchange.ply.ply_binary"]], "trimesh.exchange.ply": [[39, "module-trimesh.exchange.ply"]], "headererror": [[40, "trimesh.exchange.stl.HeaderError"]], "export_stl() (in module trimesh.exchange.stl)": [[40, "trimesh.exchange.stl.export_stl"]], "export_stl_ascii() (in module trimesh.exchange.stl)": [[40, "trimesh.exchange.stl.export_stl_ascii"]], "load_stl() (in module trimesh.exchange.stl)": [[40, "trimesh.exchange.stl.load_stl"]], "load_stl_ascii() (in module trimesh.exchange.stl)": [[40, "trimesh.exchange.stl.load_stl_ascii"]], "load_stl_binary() (in module trimesh.exchange.stl)": [[40, "trimesh.exchange.stl.load_stl_binary"]], "trimesh.exchange.stl": [[40, "module-trimesh.exchange.stl"]], "load_3dxml() (in module trimesh.exchange.threedxml)": [[41, "trimesh.exchange.threedxml.load_3DXML"]], "print_element() (in module trimesh.exchange.threedxml)": [[41, "trimesh.exchange.threedxml.print_element"]], "trimesh.exchange.threedxml": [[41, "module-trimesh.exchange.threedxml"]], "export_3mf() (in module trimesh.exchange.threemf)": [[42, "trimesh.exchange.threemf.export_3MF"]], "load_3mf() (in module trimesh.exchange.threemf)": [[42, "trimesh.exchange.threemf.load_3MF"]], "trimesh.exchange.threemf": [[42, "module-trimesh.exchange.threemf"]], "export_urdf() (in module trimesh.exchange.urdf)": [[43, "trimesh.exchange.urdf.export_urdf"]], "trimesh.exchange.urdf": [[43, "module-trimesh.exchange.urdf"]], "load_xaml() (in module trimesh.exchange.xaml)": [[44, "trimesh.exchange.xaml.load_XAML"]], "trimesh.exchange.xaml": [[44, "module-trimesh.exchange.xaml"]], "export_xyz() (in module trimesh.exchange.xyz)": [[45, "trimesh.exchange.xyz.export_xyz"]], "load_xyz() (in module trimesh.exchange.xyz)": [[45, "trimesh.exchange.xyz.load_xyz"]], "trimesh.exchange.xyz": [[45, "module-trimesh.exchange.xyz"]], "align_vectors() (in module trimesh.geometry)": [[46, "trimesh.geometry.align_vectors"]], "faces_to_edges() (in module trimesh.geometry)": [[46, "trimesh.geometry.faces_to_edges"]], "index_sparse() (in module trimesh.geometry)": [[46, "trimesh.geometry.index_sparse"]], "mean_vertex_normals() (in module trimesh.geometry)": [[46, "trimesh.geometry.mean_vertex_normals"]], "plane_transform() (in module trimesh.geometry)": [[46, "trimesh.geometry.plane_transform"]], "triangulate_quads() (in module trimesh.geometry)": [[46, "trimesh.geometry.triangulate_quads"]], "trimesh.geometry": [[46, "module-trimesh.geometry"]], "vector_angle() (in module trimesh.geometry)": [[46, "trimesh.geometry.vector_angle"]], "vertex_face_indices() (in module trimesh.geometry)": [[46, "trimesh.geometry.vertex_face_indices"]], "weighted_vertex_normals() (in module trimesh.geometry)": [[46, "trimesh.geometry.weighted_vertex_normals"]], "connected_component_labels() (in module trimesh.graph)": [[47, "trimesh.graph.connected_component_labels"]], "connected_components() (in module trimesh.graph)": [[47, "trimesh.graph.connected_components"]], "edges_to_coo() (in module trimesh.graph)": [[47, "trimesh.graph.edges_to_coo"]], "face_adjacency() (in module trimesh.graph)": [[47, "trimesh.graph.face_adjacency"]], "face_adjacency_radius() (in module trimesh.graph)": [[47, "trimesh.graph.face_adjacency_radius"]], "face_adjacency_unshared() (in module trimesh.graph)": [[47, "trimesh.graph.face_adjacency_unshared"]], "face_neighborhood() (in module trimesh.graph)": [[47, "trimesh.graph.face_neighborhood"]], "facets() (in module trimesh.graph)": [[47, "trimesh.graph.facets"]], "fill_traversals() (in module trimesh.graph)": [[47, "trimesh.graph.fill_traversals"]], "graph_to_svg() (in module trimesh.graph)": [[47, "trimesh.graph.graph_to_svg"]], "is_watertight() (in module trimesh.graph)": [[47, "trimesh.graph.is_watertight"]], "multigraph_collect() (in module trimesh.graph)": [[47, "trimesh.graph.multigraph_collect"]], "multigraph_paths() (in module trimesh.graph)": [[47, "trimesh.graph.multigraph_paths"]], "neighbors() (in module trimesh.graph)": [[47, "trimesh.graph.neighbors"]], "shared_edges() (in module trimesh.graph)": [[47, "trimesh.graph.shared_edges"]], "smoothed() (in module trimesh.graph)": [[47, "trimesh.graph.smoothed"]], "split() (in module trimesh.graph)": [[47, "trimesh.graph.split"]], "split_traversal() (in module trimesh.graph)": [[47, "trimesh.graph.split_traversal"]], "traversals() (in module trimesh.graph)": [[47, "trimesh.graph.traversals"]], "trimesh.graph": [[47, "module-trimesh.graph"]], "vertex_adjacency_graph() (in module trimesh.graph)": [[47, "trimesh.graph.vertex_adjacency_graph"]], "blocks() (in module trimesh.grouping)": [[48, "trimesh.grouping.blocks"]], "boolean_rows() (in module trimesh.grouping)": [[48, "trimesh.grouping.boolean_rows"]], "clusters() (in module trimesh.grouping)": [[48, "trimesh.grouping.clusters"]], "float_to_int() (in module trimesh.grouping)": [[48, "trimesh.grouping.float_to_int"]], "group() (in module trimesh.grouping)": [[48, "trimesh.grouping.group"]], "group_distance() (in module trimesh.grouping)": [[48, "trimesh.grouping.group_distance"]], "group_min() (in module trimesh.grouping)": [[48, "trimesh.grouping.group_min"]], "group_rows() (in module trimesh.grouping)": [[48, "trimesh.grouping.group_rows"]], "group_vectors() (in module trimesh.grouping)": [[48, "trimesh.grouping.group_vectors"]], "hashable_rows() (in module trimesh.grouping)": [[48, "trimesh.grouping.hashable_rows"]], "merge_runs() (in module trimesh.grouping)": [[48, "trimesh.grouping.merge_runs"]], "merge_vertices() (in module trimesh.grouping)": [[48, "trimesh.grouping.merge_vertices"]], "trimesh.grouping": [[48, "module-trimesh.grouping"]], "unique_bincount() (in module trimesh.grouping)": [[48, "trimesh.grouping.unique_bincount"]], "unique_float() (in module trimesh.grouping)": [[48, "trimesh.grouping.unique_float"]], "unique_ordered() (in module trimesh.grouping)": [[48, "trimesh.grouping.unique_ordered"]], "unique_rows() (in module trimesh.grouping)": [[48, "trimesh.grouping.unique_rows"]], "unique_value_in_row() (in module trimesh.grouping)": [[48, "trimesh.grouping.unique_value_in_row"]], "cylinder_inertia() (in module trimesh.inertia)": [[49, "trimesh.inertia.cylinder_inertia"]], "principal_axis() (in module trimesh.inertia)": [[49, "trimesh.inertia.principal_axis"]], "radial_symmetry() (in module trimesh.inertia)": [[49, "trimesh.inertia.radial_symmetry"]], "sphere_inertia() (in module trimesh.inertia)": [[49, "trimesh.inertia.sphere_inertia"]], "transform_inertia() (in module trimesh.inertia)": [[49, "trimesh.inertia.transform_inertia"]], "trimesh.inertia": [[49, "module-trimesh.inertia"]], "substitute_barycentric() (in module trimesh.integrate)": [[50, "trimesh.integrate.substitute_barycentric"]], "symbolic_barycentric() (in module trimesh.integrate)": [[50, "trimesh.integrate.symbolic_barycentric"]], "trimesh.integrate": [[50, "module-trimesh.integrate"]], "trimesh.interfaces": [[51, "module-trimesh.interfaces"]], "boolean() (in module trimesh.interfaces.blender)": [[52, "trimesh.interfaces.blender.boolean"]], "trimesh.interfaces.blender": [[52, "module-trimesh.interfaces.blender"]], "unwrap() (in module trimesh.interfaces.blender)": [[52, "trimesh.interfaces.blender.unwrap"]], "meshscript (class in trimesh.interfaces.generic)": [[53, "trimesh.interfaces.generic.MeshScript"]], "__init__() (trimesh.interfaces.generic.meshscript method)": [[53, "trimesh.interfaces.generic.MeshScript.__init__"]], "run() (trimesh.interfaces.generic.meshscript method)": [[53, "trimesh.interfaces.generic.MeshScript.run"]], "trimesh.interfaces.generic": [[53, "module-trimesh.interfaces.generic"]], "load_gmsh() (in module trimesh.interfaces.gmsh)": [[54, "trimesh.interfaces.gmsh.load_gmsh"]], "to_volume() (in module trimesh.interfaces.gmsh)": [[54, "trimesh.interfaces.gmsh.to_volume"]], "trimesh.interfaces.gmsh": [[54, "module-trimesh.interfaces.gmsh"]], "boolean() (in module trimesh.interfaces.scad)": [[55, "trimesh.interfaces.scad.boolean"]], "interface_scad() (in module trimesh.interfaces.scad)": [[55, "trimesh.interfaces.scad.interface_scad"]], "trimesh.interfaces.scad": [[55, "module-trimesh.interfaces.scad"]], "convex_decomposition() (in module trimesh.interfaces.vhacd)": [[56, "trimesh.interfaces.vhacd.convex_decomposition"]], "trimesh.interfaces.vhacd": [[56, "module-trimesh.interfaces.vhacd"]], "mesh_multiplane() (in module trimesh.intersections)": [[57, "trimesh.intersections.mesh_multiplane"]], "mesh_plane() (in module trimesh.intersections)": [[57, "trimesh.intersections.mesh_plane"]], "plane_lines() (in module trimesh.intersections)": [[57, "trimesh.intersections.plane_lines"]], "planes_lines() (in module trimesh.intersections)": [[57, "trimesh.intersections.planes_lines"]], "slice_faces_plane() (in module trimesh.intersections)": [[57, "trimesh.intersections.slice_faces_plane"]], "slice_mesh_plane() (in module trimesh.intersections)": [[57, "trimesh.intersections.slice_mesh_plane"]], "trimesh.intersections": [[57, "module-trimesh.intersections"]], "check() (in module trimesh.interval)": [[58, "trimesh.interval.check"]], "intersection() (in module trimesh.interval)": [[58, "trimesh.interval.intersection"]], "trimesh.interval": [[58, "module-trimesh.interval"]], "fit_nsphere() (in module trimesh.nsphere)": [[59, "trimesh.nsphere.fit_nsphere"]], "is_nsphere() (in module trimesh.nsphere)": [[59, "trimesh.nsphere.is_nsphere"]], "minimum_nsphere() (in module trimesh.nsphere)": [[59, "trimesh.nsphere.minimum_nsphere"]], "trimesh.nsphere": [[59, "module-trimesh.nsphere"]], "geometry (class in trimesh.parent)": [[60, "trimesh.parent.Geometry"]], "geometry3d (class in trimesh.parent)": [[60, "trimesh.parent.Geometry3D"]], "apply_obb() (trimesh.parent.geometry3d method)": [[60, "trimesh.parent.Geometry3D.apply_obb"]], "apply_scale() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.apply_scale"]], "apply_transform() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.apply_transform"]], "apply_translation() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.apply_translation"]], "bounding_box (trimesh.parent.geometry3d property)": [[60, "trimesh.parent.Geometry3D.bounding_box"]], "bounding_box_oriented (trimesh.parent.geometry3d property)": [[60, "trimesh.parent.Geometry3D.bounding_box_oriented"]], "bounding_cylinder (trimesh.parent.geometry3d property)": [[60, "trimesh.parent.Geometry3D.bounding_cylinder"]], "bounding_primitive (trimesh.parent.geometry3d property)": [[60, "trimesh.parent.Geometry3D.bounding_primitive"]], "bounding_sphere (trimesh.parent.geometry3d property)": [[60, "trimesh.parent.Geometry3D.bounding_sphere"]], "bounds (trimesh.parent.geometry property)": [[60, "trimesh.parent.Geometry.bounds"]], "copy() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.copy"]], "crc() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.crc"]], "export() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.export"]], "extents (trimesh.parent.geometry property)": [[60, "trimesh.parent.Geometry.extents"]], "hash() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.hash"]], "is_empty() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.is_empty"]], "md5() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.md5"]], "show() (trimesh.parent.geometry method)": [[60, "trimesh.parent.Geometry.show"]], "trimesh.parent": [[60, "module-trimesh.parent"]], "path2d (class in trimesh.path)": [[61, "trimesh.path.Path2D"]], "path3d (class in trimesh.path)": [[61, "trimesh.path.Path3D"]], "apply_obb() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.apply_scale"]], "area (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.area"]], "body_count (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.body_count"]], "connected_paths() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.connected_paths"]], "enclosure (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.enclosure_shell"]], "extrude() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.extrude"]], "identifier (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.identifier_hash"]], "identifier_md5 (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.identifier_md5"]], "medial_axis() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.medial_axis"]], "obb (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.obb"]], "path_valid (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.path_valid"]], "plot_discrete() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.polygons_full"]], "rasterize() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.rasterize"]], "root (trimesh.path.path2d property)": [[61, "trimesh.path.Path2D.root"]], "sample() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.sample"]], "show() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.show"]], "show() (trimesh.path.path3d method)": [[61, "trimesh.path.Path3D.show"]], "simplify() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.simplify_spline"]], "split() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.split"]], "to_3d() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.to_3D"]], "to_planar() (trimesh.path.path3d method)": [[61, "trimesh.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path2d method)": [[61, "trimesh.path.Path2D.triangulate"]], "trimesh.path": [[61, "module-trimesh.path"]], "arc_center() (in module trimesh.path.arc)": [[62, "trimesh.path.arc.arc_center"]], "discretize_arc() (in module trimesh.path.arc)": [[62, "trimesh.path.arc.discretize_arc"]], "to_threepoint() (in module trimesh.path.arc)": [[62, "trimesh.path.arc.to_threepoint"]], "trimesh.path.arc": [[62, "module-trimesh.path.arc"]], "box_outline() (in module trimesh.path.creation)": [[63, "trimesh.path.creation.box_outline"]], "circle() (in module trimesh.path.creation)": [[63, "trimesh.path.creation.circle"]], "circle_pattern() (in module trimesh.path.creation)": [[63, "trimesh.path.creation.circle_pattern"]], "grid() (in module trimesh.path.creation)": [[63, "trimesh.path.creation.grid"]], "rectangle() (in module trimesh.path.creation)": [[63, "trimesh.path.creation.rectangle"]], "trimesh.path.creation": [[63, "module-trimesh.path.creation"]], "binomial() (in module trimesh.path.curve)": [[64, "trimesh.path.curve.binomial"]], "discretize_bezier() (in module trimesh.path.curve)": [[64, "trimesh.path.curve.discretize_bezier"]], "discretize_bspline() (in module trimesh.path.curve)": [[64, "trimesh.path.curve.discretize_bspline"]], "trimesh.path.curve": [[64, "module-trimesh.path.curve"]], "arc (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Arc"]], "bspline (class in trimesh.path.entities)": [[65, "trimesh.path.entities.BSpline"]], "bezier (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Bezier"]], "curve (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Curve"]], "entity (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Entity"]], "line (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Line"]], "text (class in trimesh.path.entities)": [[65, "trimesh.path.entities.Text"]], "__init__() (trimesh.path.entities.bspline method)": [[65, "trimesh.path.entities.BSpline.__init__"]], "__init__() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.__init__"]], "__init__() (trimesh.path.entities.text method)": [[65, "trimesh.path.entities.Text.__init__"]], "angle() (trimesh.path.entities.text method)": [[65, "trimesh.path.entities.Text.angle"]], "bounds() (trimesh.path.entities.arc method)": [[65, "trimesh.path.entities.Arc.bounds"]], "bounds() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.bounds"]], "center() (trimesh.path.entities.arc method)": [[65, "trimesh.path.entities.Arc.center"]], "closed (trimesh.path.entities.arc property)": [[65, "trimesh.path.entities.Arc.closed"]], "closed (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.closed"]], "closed (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.closed"]], "copy() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.copy"]], "discrete() (trimesh.path.entities.arc method)": [[65, "trimesh.path.entities.Arc.discrete"]], "discrete() (trimesh.path.entities.bspline method)": [[65, "trimesh.path.entities.BSpline.discrete"]], "discrete() (trimesh.path.entities.bezier method)": [[65, "trimesh.path.entities.Bezier.discrete"]], "discrete() (trimesh.path.entities.line method)": [[65, "trimesh.path.entities.Line.discrete"]], "discrete() (trimesh.path.entities.text method)": [[65, "trimesh.path.entities.Text.discrete"]], "end_points (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.end_points"]], "end_points (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.end_points"]], "explode() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.explode"]], "explode() (trimesh.path.entities.line method)": [[65, "trimesh.path.entities.Line.explode"]], "is_valid (trimesh.path.entities.arc property)": [[65, "trimesh.path.entities.Arc.is_valid"]], "is_valid (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.is_valid"]], "is_valid (trimesh.path.entities.line property)": [[65, "trimesh.path.entities.Line.is_valid"]], "is_valid (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.is_valid"]], "layer (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.layer"]], "length() (trimesh.path.entities.arc method)": [[65, "trimesh.path.entities.Arc.length"]], "length() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.length"]], "length() (trimesh.path.entities.text method)": [[65, "trimesh.path.entities.Text.length"]], "metadata (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.metadata"]], "nodes (trimesh.path.entities.curve property)": [[65, "trimesh.path.entities.Curve.nodes"]], "nodes (trimesh.path.entities.entity property)": [[65, "trimesh.path.entities.Entity.nodes"]], "nodes (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.nodes"]], "normal (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.normal"]], "origin (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.origin"]], "plot() (trimesh.path.entities.text method)": [[65, "trimesh.path.entities.Text.plot"]], "reverse() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.reverse"]], "to_dict() (trimesh.path.entities.bspline method)": [[65, "trimesh.path.entities.BSpline.to_dict"]], "to_dict() (trimesh.path.entities.entity method)": [[65, "trimesh.path.entities.Entity.to_dict"]], "trimesh.path.entities": [[65, "module-trimesh.path.entities"]], "vector (trimesh.path.entities.text property)": [[65, "trimesh.path.entities.Text.vector"]], "trimesh.path.exchange": [[66, "module-trimesh.path.exchange"]], "bulge_to_arcs() (in module trimesh.path.exchange.dxf)": [[67, "trimesh.path.exchange.dxf.bulge_to_arcs"]], "convert_entities() (in module trimesh.path.exchange.dxf)": [[67, "trimesh.path.exchange.dxf.convert_entities"]], "export_dxf() (in module trimesh.path.exchange.dxf)": [[67, "trimesh.path.exchange.dxf.export_dxf"]], "get_key() (in module trimesh.path.exchange.dxf)": [[67, "trimesh.path.exchange.dxf.get_key"]], "load_dxf() (in module trimesh.path.exchange.dxf)": [[67, "trimesh.path.exchange.dxf.load_dxf"]], "trimesh.path.exchange.dxf": [[67, "module-trimesh.path.exchange.dxf"]], "export_dict() (in module trimesh.path.exchange.export)": [[68, "trimesh.path.exchange.export.export_dict"]], "export_path() (in module trimesh.path.exchange.export)": [[68, "trimesh.path.exchange.export.export_path"]], "trimesh.path.exchange.export": [[68, "module-trimesh.path.exchange.export"]], "load_path() (in module trimesh.path.exchange.load)": [[69, "trimesh.path.exchange.load.load_path"]], "path_formats() (in module trimesh.path.exchange.load)": [[69, "trimesh.path.exchange.load.path_formats"]], "trimesh.path.exchange.load": [[69, "module-trimesh.path.exchange.load"]], "dict_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.dict_to_path"]], "edges_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.edges_to_path"]], "faces_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.faces_to_path"]], "lines_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.lines_to_path"]], "linestrings_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.linestrings_to_path"]], "polygon_to_path() (in module trimesh.path.exchange.misc)": [[70, "trimesh.path.exchange.misc.polygon_to_path"]], "trimesh.path.exchange.misc": [[70, "module-trimesh.path.exchange.misc"]], "export_svg() (in module trimesh.path.exchange.svg_io)": [[71, "trimesh.path.exchange.svg_io.export_svg"]], "svg_to_path() (in module trimesh.path.exchange.svg_io)": [[71, "trimesh.path.exchange.svg_io.svg_to_path"]], "transform_to_matrices() (in module trimesh.path.exchange.svg_io)": [[71, "trimesh.path.exchange.svg_io.transform_to_matrices"]], "trimesh.path.exchange.svg_io": [[71, "module-trimesh.path.exchange.svg_io"]], "line_line() (in module trimesh.path.intersections)": [[72, "trimesh.path.intersections.line_line"]], "trimesh.path.intersections": [[72, "module-trimesh.path.intersections"]], "rectanglebin (class in trimesh.path.packing)": [[73, "trimesh.path.packing.RectangleBin"]], "__init__() (trimesh.path.packing.rectanglebin method)": [[73, "trimesh.path.packing.RectangleBin.__init__"]], "extents (trimesh.path.packing.rectanglebin property)": [[73, "trimesh.path.packing.RectangleBin.extents"]], "images() (in module trimesh.path.packing)": [[73, "trimesh.path.packing.images"]], "insert() (trimesh.path.packing.rectanglebin method)": [[73, "trimesh.path.packing.RectangleBin.insert"]], "paths() (in module trimesh.path.packing)": [[73, "trimesh.path.packing.paths"]], "polygons() (in module trimesh.path.packing)": [[73, "trimesh.path.packing.polygons"]], "rectangles() (in module trimesh.path.packing)": [[73, "trimesh.path.packing.rectangles"]], "rectangles_single() (in module trimesh.path.packing)": [[73, "trimesh.path.packing.rectangles_single"]], "split() (trimesh.path.packing.rectanglebin method)": [[73, "trimesh.path.packing.RectangleBin.split"]], "trimesh.path.packing": [[73, "module-trimesh.path.packing"]], "path (class in trimesh.path.path)": [[74, "trimesh.path.path.Path"]], "path2d (class in trimesh.path.path)": [[74, "trimesh.path.path.Path2D"]], "path3d (class in trimesh.path.path)": [[74, "trimesh.path.path.Path3D"]], "__init__() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.__init__"]], "apply_layer() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.apply_layer"]], "apply_obb() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.apply_obb"]], "apply_scale() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.apply_scale"]], "apply_transform() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.apply_transform"]], "area (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.area"]], "body_count (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.body_count"]], "bounds (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.bounds"]], "centroid (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.centroid"]], "colors (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.colors"]], "connected_paths() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.connected_paths"]], "convert_units() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.convert_units"]], "copy() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.copy"]], "dangling (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.dangling"]], "discrete (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.discrete"]], "discretize_path() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.discretize_path"]], "enclosure (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.enclosure"]], "enclosure_directed (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.enclosure_directed"]], "enclosure_shell (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.enclosure_shell"]], "entities (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.entities"]], "explode() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.explode"]], "export() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.export"]], "extents (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.extents"]], "extrude() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.extrude"]], "fill_gaps() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.fill_gaps"]], "identifier (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.identifier"]], "identifier_hash (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.identifier_hash"]], "identifier_md5 (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.identifier_md5"]], "is_closed (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.is_closed"]], "is_empty (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.is_empty"]], "kdtree (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.kdtree"]], "layers (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.layers"]], "length (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.length"]], "medial_axis() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.medial_axis"]], "merge_vertices() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.merge_vertices"]], "obb (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.obb"]], "path_valid (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.path_valid"]], "paths (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.paths"]], "plot_discrete() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.plot_discrete"]], "plot_entities() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.plot_entities"]], "polygons_closed (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.polygons_closed"]], "polygons_full (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.polygons_full"]], "process() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.process"]], "rasterize() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.rasterize"]], "referenced_vertices (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.referenced_vertices"]], "remove_duplicate_entities() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.remove_duplicate_entities"]], "remove_entities() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.remove_entities"]], "remove_invalid() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.remove_invalid"]], "remove_unreferenced_vertices() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.remove_unreferenced_vertices"]], "replace_vertex_references() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.replace_vertex_references"]], "rezero() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.rezero"]], "root (trimesh.path.path.path2d property)": [[74, "trimesh.path.path.Path2D.root"]], "sample() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.sample"]], "scale (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.scale"]], "scene() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.scene"]], "show() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.show"]], "show() (trimesh.path.path.path3d method)": [[74, "trimesh.path.path.Path3D.show"]], "simplify() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.simplify"]], "simplify_spline() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.simplify_spline"]], "split() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.split"]], "to_3d() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.to_3D"]], "to_dict() (trimesh.path.path.path method)": [[74, "trimesh.path.path.Path.to_dict"]], "to_planar() (trimesh.path.path.path3d method)": [[74, "trimesh.path.path.Path3D.to_planar"]], "triangulate() (trimesh.path.path.path2d method)": [[74, "trimesh.path.path.Path2D.triangulate"]], "trimesh.path.path": [[74, "module-trimesh.path.path"]], "units (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.units"]], "vertex_graph (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.vertex_graph"]], "vertex_nodes (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.vertex_nodes"]], "vertices (trimesh.path.path.path property)": [[74, "trimesh.path.path.Path.vertices"]], "edges_to_polygons() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.edges_to_polygons"]], "enclosure_tree() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.enclosure_tree"]], "medial_axis() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.medial_axis"]], "paths_to_polygons() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.paths_to_polygons"]], "plot() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.plot"]], "polygon_hash() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.polygon_hash"]], "polygon_obb() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.polygon_obb"]], "polygon_scale() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.polygon_scale"]], "polygons_obb() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.polygons_obb"]], "projected() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.projected"]], "random_polygon() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.random_polygon"]], "repair_invalid() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.repair_invalid"]], "resample_boundaries() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.resample_boundaries"]], "sample() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.sample"]], "second_moment() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.second_moment"]], "stack_boundaries() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.stack_boundaries"]], "transform_polygon() (in module trimesh.path.polygons)": [[75, "trimesh.path.polygons.transform_polygon"]], "trimesh.path.polygons": [[75, "module-trimesh.path.polygons"]], "rasterize() (in module trimesh.path.raster)": [[76, "trimesh.path.raster.rasterize"]], "trimesh.path.raster": [[76, "module-trimesh.path.raster"]], "fill_gaps() (in module trimesh.path.repair)": [[77, "trimesh.path.repair.fill_gaps"]], "trimesh.path.repair": [[77, "module-trimesh.path.repair"]], "colinear_pairs() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.colinear_pairs"]], "extrude() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.extrude"]], "length() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.length"]], "overlap() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.overlap"]], "parameters_to_segments() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.parameters_to_segments"]], "resample() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.resample"]], "segments_to_parameters() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.segments_to_parameters"]], "split() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.split"]], "to_svg() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.to_svg"]], "trimesh.path.segments": [[78, "module-trimesh.path.segments"]], "unique() (in module trimesh.path.segments)": [[78, "trimesh.path.segments.unique"]], "fit_circle_check() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.fit_circle_check"]], "is_circle() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.is_circle"]], "merge_colinear() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.merge_colinear"]], "points_to_spline_entity() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.points_to_spline_entity"]], "resample_spline() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.resample_spline"]], "simplify_basic() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.simplify_basic"]], "simplify_spline() (in module trimesh.path.simplify)": [[79, "trimesh.path.simplify.simplify_spline"]], "trimesh.path.simplify": [[79, "module-trimesh.path.simplify"]], "pathsample (class in trimesh.path.traversal)": [[80, "trimesh.path.traversal.PathSample"]], "__init__() (trimesh.path.traversal.pathsample method)": [[80, "trimesh.path.traversal.PathSample.__init__"]], "closed_paths() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.closed_paths"]], "discretize_path() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.discretize_path"]], "resample_path() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.resample_path"]], "sample() (trimesh.path.traversal.pathsample method)": [[80, "trimesh.path.traversal.PathSample.sample"]], "split() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.split"]], "trimesh.path.traversal": [[80, "module-trimesh.path.traversal"]], "truncate() (trimesh.path.traversal.pathsample method)": [[80, "trimesh.path.traversal.PathSample.truncate"]], "vertex_graph() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.vertex_graph"]], "vertex_to_entity_path() (in module trimesh.path.traversal)": [[80, "trimesh.path.traversal.vertex_to_entity_path"]], "concatenate() (in module trimesh.path.util)": [[81, "trimesh.path.util.concatenate"]], "trimesh.path.util": [[81, "module-trimesh.path.util"]], "permutator (class in trimesh.permutate)": [[82, "trimesh.permutate.Permutator"]], "__init__() (trimesh.permutate.permutator method)": [[82, "trimesh.permutate.Permutator.__init__"]], "noise() (in module trimesh.permutate)": [[82, "trimesh.permutate.noise"]], "noise() (trimesh.permutate.permutator method)": [[82, "trimesh.permutate.Permutator.noise"]], "tessellation() (in module trimesh.permutate)": [[82, "trimesh.permutate.tessellation"]], "tessellation() (trimesh.permutate.permutator method)": [[82, "trimesh.permutate.Permutator.tessellation"]], "transform() (in module trimesh.permutate)": [[82, "trimesh.permutate.transform"]], "transform() (trimesh.permutate.permutator method)": [[82, "trimesh.permutate.Permutator.transform"]], "trimesh.permutate": [[82, "module-trimesh.permutate"]], "pointcloud (class in trimesh.points)": [[83, "trimesh.points.PointCloud"]], "__init__() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.__init__"]], "apply_transform() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.apply_transform"]], "bounds (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.bounds"]], "centroid (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.centroid"]], "colors (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.colors"]], "convex_hull (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.convex_hull"]], "copy() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.copy"]], "crc() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.crc"]], "export() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.export"]], "extents (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.extents"]], "hash() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.hash"]], "is_empty (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.is_empty"]], "k_means() (in module trimesh.points)": [[83, "trimesh.points.k_means"]], "kdtree (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.kdtree"]], "major_axis() (in module trimesh.points)": [[83, "trimesh.points.major_axis"]], "merge_vertices() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.merge_vertices"]], "plane_fit() (in module trimesh.points)": [[83, "trimesh.points.plane_fit"]], "plot_points() (in module trimesh.points)": [[83, "trimesh.points.plot_points"]], "point_plane_distance() (in module trimesh.points)": [[83, "trimesh.points.point_plane_distance"]], "project_to_plane() (in module trimesh.points)": [[83, "trimesh.points.project_to_plane"]], "query() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.query"]], "radial_sort() (in module trimesh.points)": [[83, "trimesh.points.radial_sort"]], "remove_close() (in module trimesh.points)": [[83, "trimesh.points.remove_close"]], "scene() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.scene"]], "shape (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.shape"]], "show() (trimesh.points.pointcloud method)": [[83, "trimesh.points.PointCloud.show"]], "trimesh.points": [[83, "module-trimesh.points"]], "tsp() (in module trimesh.points)": [[83, "trimesh.points.tsp"]], "vertices (trimesh.points.pointcloud property)": [[83, "trimesh.points.PointCloud.vertices"]], "compute_stable_poses() (in module trimesh.poses)": [[84, "trimesh.poses.compute_stable_poses"]], "trimesh.poses": [[84, "module-trimesh.poses"]], "box (class in trimesh.primitives)": [[85, "trimesh.primitives.Box"]], "capsule (class in trimesh.primitives)": [[85, "trimesh.primitives.Capsule"]], "cylinder (class in trimesh.primitives)": [[85, "trimesh.primitives.Cylinder"]], "extrusion (class in trimesh.primitives)": [[85, "trimesh.primitives.Extrusion"]], "sphere (class in trimesh.primitives)": [[85, "trimesh.primitives.Sphere"]], "__init__() (trimesh.primitives.box method)": [[85, "trimesh.primitives.Box.__init__"]], "__init__() (trimesh.primitives.capsule method)": [[85, "trimesh.primitives.Capsule.__init__"]], "__init__() (trimesh.primitives.cylinder method)": [[85, "trimesh.primitives.Cylinder.__init__"]], "__init__() (trimesh.primitives.extrusion method)": [[85, "trimesh.primitives.Extrusion.__init__"]], "__init__() (trimesh.primitives.sphere method)": [[85, "trimesh.primitives.Sphere.__init__"]], "area (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.area"]], "area (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.area"]], "as_outline() (trimesh.primitives.box method)": [[85, "trimesh.primitives.Box.as_outline"]], "bounding_box_oriented (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.bounding_box_oriented"]], "bounding_box_oriented (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.bounding_box_oriented"]], "bounds (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.bounds"]], "buffer() (trimesh.primitives.cylinder method)": [[85, "trimesh.primitives.Cylinder.buffer"]], "buffer() (trimesh.primitives.extrusion method)": [[85, "trimesh.primitives.Extrusion.buffer"]], "center (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.center"]], "direction (trimesh.primitives.capsule property)": [[85, "trimesh.primitives.Capsule.direction"]], "direction (trimesh.primitives.cylinder property)": [[85, "trimesh.primitives.Cylinder.direction"]], "direction (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.direction"]], "is_oriented (trimesh.primitives.box property)": [[85, "trimesh.primitives.Box.is_oriented"]], "moment_inertia (trimesh.primitives.cylinder property)": [[85, "trimesh.primitives.Cylinder.moment_inertia"]], "moment_inertia (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.moment_inertia"]], "origin (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.origin"]], "sample_grid() (trimesh.primitives.box method)": [[85, "trimesh.primitives.Box.sample_grid"]], "sample_volume() (trimesh.primitives.box method)": [[85, "trimesh.primitives.Box.sample_volume"]], "segment (trimesh.primitives.cylinder property)": [[85, "trimesh.primitives.Cylinder.segment"]], "slide() (trimesh.primitives.extrusion method)": [[85, "trimesh.primitives.Extrusion.slide"]], "to_dict() (trimesh.primitives.box method)": [[85, "trimesh.primitives.Box.to_dict"]], "to_dict() (trimesh.primitives.capsule method)": [[85, "trimesh.primitives.Capsule.to_dict"]], "to_dict() (trimesh.primitives.cylinder method)": [[85, "trimesh.primitives.Cylinder.to_dict"]], "to_dict() (trimesh.primitives.extrusion method)": [[85, "trimesh.primitives.Extrusion.to_dict"]], "to_dict() (trimesh.primitives.sphere method)": [[85, "trimesh.primitives.Sphere.to_dict"]], "transform (trimesh.primitives.box property)": [[85, "trimesh.primitives.Box.transform"]], "transform (trimesh.primitives.capsule property)": [[85, "trimesh.primitives.Capsule.transform"]], "transform (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.transform"]], "trimesh.primitives": [[85, "module-trimesh.primitives"]], "volume (trimesh.primitives.box property)": [[85, "trimesh.primitives.Box.volume"]], "volume (trimesh.primitives.cylinder property)": [[85, "trimesh.primitives.Cylinder.volume"]], "volume (trimesh.primitives.extrusion property)": [[85, "trimesh.primitives.Extrusion.volume"]], "volume (trimesh.primitives.sphere property)": [[85, "trimesh.primitives.Sphere.volume"]], "nearestqueryresult (class in trimesh.proximity)": [[86, "trimesh.proximity.NearestQueryResult"]], "proximityquery (class in trimesh.proximity)": [[86, "trimesh.proximity.ProximityQuery"]], "__init__() (trimesh.proximity.nearestqueryresult method)": [[86, "trimesh.proximity.NearestQueryResult.__init__"]], "__init__() (trimesh.proximity.proximityquery method)": [[86, "trimesh.proximity.ProximityQuery.__init__"]], "closest_point() (in module trimesh.proximity)": [[86, "trimesh.proximity.closest_point"]], "closest_point_naive() (in module trimesh.proximity)": [[86, "trimesh.proximity.closest_point_naive"]], "has_normals() (trimesh.proximity.nearestqueryresult method)": [[86, "trimesh.proximity.NearestQueryResult.has_normals"]], "longest_ray() (in module trimesh.proximity)": [[86, "trimesh.proximity.longest_ray"]], "max_tangent_sphere() (in module trimesh.proximity)": [[86, "trimesh.proximity.max_tangent_sphere"]], "nearby_faces() (in module trimesh.proximity)": [[86, "trimesh.proximity.nearby_faces"]], "on_surface() (trimesh.proximity.proximityquery method)": [[86, "trimesh.proximity.ProximityQuery.on_surface"]], "signed_distance() (in module trimesh.proximity)": [[86, "trimesh.proximity.signed_distance"]], "signed_distance() (trimesh.proximity.proximityquery method)": [[86, "trimesh.proximity.ProximityQuery.signed_distance"]], "thickness() (in module trimesh.proximity)": [[86, "trimesh.proximity.thickness"]], "trimesh.proximity": [[86, "module-trimesh.proximity"]], "vertex() (trimesh.proximity.proximityquery method)": [[86, "trimesh.proximity.ProximityQuery.vertex"]], "trimesh.ray": [[87, "module-trimesh.ray"]], "raymeshintersector (class in trimesh.ray.ray_pyembree)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_pyembree.raymeshintersector method)": [[88, "trimesh.ray.ray_pyembree.RayMeshIntersector.intersects_location"]], "trimesh.ray.ray_pyembree": [[88, "module-trimesh.ray.ray_pyembree"]], "raymeshintersector (class in trimesh.ray.ray_triangle)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector"]], "__init__() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.__init__"]], "contains_points() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.contains_points"]], "intersects_any() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_any"]], "intersects_first() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_first"]], "intersects_id() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_id"]], "intersects_location() (trimesh.ray.ray_triangle.raymeshintersector method)": [[89, "trimesh.ray.ray_triangle.RayMeshIntersector.intersects_location"]], "ray_bounds() (in module trimesh.ray.ray_triangle)": [[89, "trimesh.ray.ray_triangle.ray_bounds"]], "ray_triangle_candidates() (in module trimesh.ray.ray_triangle)": [[89, "trimesh.ray.ray_triangle.ray_triangle_candidates"]], "ray_triangle_id() (in module trimesh.ray.ray_triangle)": [[89, "trimesh.ray.ray_triangle.ray_triangle_id"]], "trimesh.ray.ray_triangle": [[89, "module-trimesh.ray.ray_triangle"]], "trimesh.ray.ray_util": [[90, "module-trimesh.ray.ray_util"]], "icp() (in module trimesh.registration)": [[91, "trimesh.registration.icp"]], "mesh_other() (in module trimesh.registration)": [[91, "trimesh.registration.mesh_other"]], "nricp_amberg() (in module trimesh.registration)": [[91, "trimesh.registration.nricp_amberg"]], "nricp_sumner() (in module trimesh.registration)": [[91, "trimesh.registration.nricp_sumner"]], "procrustes() (in module trimesh.registration)": [[91, "trimesh.registration.procrustes"]], "trimesh.registration": [[91, "module-trimesh.registration"]], "subdivide() (in module trimesh.remesh)": [[92, "trimesh.remesh.subdivide"]], "subdivide_loop() (in module trimesh.remesh)": [[92, "trimesh.remesh.subdivide_loop"]], "subdivide_to_size() (in module trimesh.remesh)": [[92, "trimesh.remesh.subdivide_to_size"]], "trimesh.remesh": [[92, "module-trimesh.remesh"]], "colors_to_gl() (in module trimesh.rendering)": [[93, "trimesh.rendering.colors_to_gl"]], "convert_to_vertexlist() (in module trimesh.rendering)": [[93, "trimesh.rendering.convert_to_vertexlist"]], "light_to_gl() (in module trimesh.rendering)": [[93, "trimesh.rendering.light_to_gl"]], "material_to_texture() (in module trimesh.rendering)": [[93, "trimesh.rendering.material_to_texture"]], "matrix_to_gl() (in module trimesh.rendering)": [[93, "trimesh.rendering.matrix_to_gl"]], "mesh_to_vertexlist() (in module trimesh.rendering)": [[93, "trimesh.rendering.mesh_to_vertexlist"]], "path_to_vertexlist() (in module trimesh.rendering)": [[93, "trimesh.rendering.path_to_vertexlist"]], "points_to_vertexlist() (in module trimesh.rendering)": [[93, "trimesh.rendering.points_to_vertexlist"]], "trimesh.rendering": [[93, "module-trimesh.rendering"]], "vector_to_gl() (in module trimesh.rendering)": [[93, "trimesh.rendering.vector_to_gl"]], "broken_faces() (in module trimesh.repair)": [[94, "trimesh.repair.broken_faces"]], "fill_holes() (in module trimesh.repair)": [[94, "trimesh.repair.fill_holes"]], "fix_inversion() (in module trimesh.repair)": [[94, "trimesh.repair.fix_inversion"]], "fix_normals() (in module trimesh.repair)": [[94, "trimesh.repair.fix_normals"]], "fix_winding() (in module trimesh.repair)": [[94, "trimesh.repair.fix_winding"]], "stitch() (in module trimesh.repair)": [[94, "trimesh.repair.stitch"]], "trimesh.repair": [[94, "module-trimesh.repair"]], "filepathresolver (class in trimesh.resolvers)": [[95, "trimesh.resolvers.FilePathResolver"]], "githubresolver (class in trimesh.resolvers)": [[95, "trimesh.resolvers.GithubResolver"]], "resolver (class in trimesh.resolvers)": [[95, "trimesh.resolvers.Resolver"]], "webresolver (class in trimesh.resolvers)": [[95, "trimesh.resolvers.WebResolver"]], "zipresolver (class in trimesh.resolvers)": [[95, "trimesh.resolvers.ZipResolver"]], "__init__() (trimesh.resolvers.filepathresolver method)": [[95, "trimesh.resolvers.FilePathResolver.__init__"]], "__init__() (trimesh.resolvers.githubresolver method)": [[95, "trimesh.resolvers.GithubResolver.__init__"]], "__init__() (trimesh.resolvers.resolver method)": [[95, "trimesh.resolvers.Resolver.__init__"]], "__init__() (trimesh.resolvers.webresolver method)": [[95, "trimesh.resolvers.WebResolver.__init__"]], "__init__() (trimesh.resolvers.zipresolver method)": [[95, "trimesh.resolvers.ZipResolver.__init__"]], "get() (trimesh.resolvers.filepathresolver method)": [[95, "trimesh.resolvers.FilePathResolver.get"]], "get() (trimesh.resolvers.githubresolver method)": [[95, "trimesh.resolvers.GithubResolver.get"]], "get() (trimesh.resolvers.resolver method)": [[95, "trimesh.resolvers.Resolver.get"]], "get() (trimesh.resolvers.webresolver method)": [[95, "trimesh.resolvers.WebResolver.get"]], "get() (trimesh.resolvers.zipresolver method)": [[95, "trimesh.resolvers.ZipResolver.get"]], "keys() (trimesh.resolvers.filepathresolver method)": [[95, "trimesh.resolvers.FilePathResolver.keys"]], "keys() (trimesh.resolvers.githubresolver method)": [[95, "trimesh.resolvers.GithubResolver.keys"]], "keys() (trimesh.resolvers.zipresolver method)": [[95, "trimesh.resolvers.ZipResolver.keys"]], "namespaced() (trimesh.resolvers.githubresolver method)": [[95, "trimesh.resolvers.GithubResolver.namespaced"]], "namespaced() (trimesh.resolvers.resolver method)": [[95, "trimesh.resolvers.Resolver.namespaced"]], "namespaced() (trimesh.resolvers.zipresolver method)": [[95, "trimesh.resolvers.ZipResolver.namespaced"]], "nearby_names() (in module trimesh.resolvers)": [[95, "trimesh.resolvers.nearby_names"]], "trimesh.resolvers": [[95, "module-trimesh.resolvers"]], "write() (trimesh.resolvers.filepathresolver method)": [[95, "trimesh.resolvers.FilePathResolver.write"]], "write() (trimesh.resolvers.resolver method)": [[95, "trimesh.resolvers.Resolver.write"]], "zipped (trimesh.resolvers.githubresolver property)": [[95, "trimesh.resolvers.GithubResolver.zipped"]], "get() (in module trimesh.resources)": [[96, "trimesh.resources.get"]], "get_schema() (in module trimesh.resources)": [[96, "trimesh.resources.get_schema"]], "trimesh.resources": [[96, "module-trimesh.resources"]], "sample_surface() (in module trimesh.sample)": [[97, "trimesh.sample.sample_surface"]], "sample_surface_even() (in module trimesh.sample)": [[97, "trimesh.sample.sample_surface_even"]], "sample_surface_sphere() (in module trimesh.sample)": [[97, "trimesh.sample.sample_surface_sphere"]], "trimesh.sample": [[97, "module-trimesh.sample"]], "volume_mesh() (in module trimesh.sample)": [[97, "trimesh.sample.volume_mesh"]], "volume_rectangular() (in module trimesh.sample)": [[97, "trimesh.sample.volume_rectangular"]], "camera (class in trimesh.scene)": [[98, "trimesh.scene.Camera"]], "k (trimesh.scene.camera property)": [[98, "trimesh.scene.Camera.K"]], "scene (class in trimesh.scene)": [[98, "trimesh.scene.Scene"]], "__init__() (trimesh.scene.camera method)": [[98, "trimesh.scene.Camera.__init__"]], "__init__() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.add_geometry"]], "angles() (trimesh.scene.camera method)": [[98, "trimesh.scene.Camera.angles"]], "apply_transform() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.apply_transform"]], "area (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.area"]], "bounds (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.camera_transform"]], "centroid (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.convex_hull"]], "copy() (trimesh.scene.camera method)": [[98, "trimesh.scene.Camera.copy"]], "copy() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.explode"]], "export() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.export"]], "extents (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.extents"]], "focal (trimesh.scene.camera property)": [[98, "trimesh.scene.Camera.focal"]], "fov (trimesh.scene.camera property)": [[98, "trimesh.scene.Camera.fov"]], "geometry_identifiers (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.is_valid"]], "lights (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.lights"]], "look_at() (trimesh.scene.camera method)": [[98, "trimesh.scene.Camera.look_at"]], "resolution (trimesh.scene.camera property)": [[98, "trimesh.scene.Camera.resolution"]], "rezero() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.save_image"]], "scale (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.scale"]], "scaled() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.set_camera"]], "show() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.show"]], "split_scene() (in module trimesh.scene)": [[98, "trimesh.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene method)": [[98, "trimesh.scene.Scene.subscene"]], "to_rays() (trimesh.scene.camera method)": [[98, "trimesh.scene.Camera.to_rays"]], "triangles (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.triangles_node"]], "trimesh.scene": [[98, "module-trimesh.scene"]], "units (trimesh.scene.scene property)": [[98, "trimesh.scene.Scene.units"]], "camera (class in trimesh.scene.cameras)": [[99, "trimesh.scene.cameras.Camera"]], "k (trimesh.scene.cameras.camera property)": [[99, "trimesh.scene.cameras.Camera.K"]], "__init__() (trimesh.scene.cameras.camera method)": [[99, "trimesh.scene.cameras.Camera.__init__"]], "angles() (trimesh.scene.cameras.camera method)": [[99, "trimesh.scene.cameras.Camera.angles"]], "camera_to_rays() (in module trimesh.scene.cameras)": [[99, "trimesh.scene.cameras.camera_to_rays"]], "copy() (trimesh.scene.cameras.camera method)": [[99, "trimesh.scene.cameras.Camera.copy"]], "focal (trimesh.scene.cameras.camera property)": [[99, "trimesh.scene.cameras.Camera.focal"]], "fov (trimesh.scene.cameras.camera property)": [[99, "trimesh.scene.cameras.Camera.fov"]], "look_at() (in module trimesh.scene.cameras)": [[99, "trimesh.scene.cameras.look_at"]], "look_at() (trimesh.scene.cameras.camera method)": [[99, "trimesh.scene.cameras.Camera.look_at"]], "ray_pixel_coords() (in module trimesh.scene.cameras)": [[99, "trimesh.scene.cameras.ray_pixel_coords"]], "resolution (trimesh.scene.cameras.camera property)": [[99, "trimesh.scene.cameras.Camera.resolution"]], "to_rays() (trimesh.scene.cameras.camera method)": [[99, "trimesh.scene.cameras.Camera.to_rays"]], "trimesh.scene.cameras": [[99, "module-trimesh.scene.cameras"]], "directionallight (class in trimesh.scene.lighting)": [[100, "trimesh.scene.lighting.DirectionalLight"]], "light (class in trimesh.scene.lighting)": [[100, "trimesh.scene.lighting.Light"]], "pointlight (class in trimesh.scene.lighting)": [[100, "trimesh.scene.lighting.PointLight"]], "spotlight (class in trimesh.scene.lighting)": [[100, "trimesh.scene.lighting.SpotLight"]], "__init__() (trimesh.scene.lighting.directionallight method)": [[100, "trimesh.scene.lighting.DirectionalLight.__init__"]], "__init__() (trimesh.scene.lighting.light method)": [[100, "trimesh.scene.lighting.Light.__init__"]], "__init__() (trimesh.scene.lighting.pointlight method)": [[100, "trimesh.scene.lighting.PointLight.__init__"]], "__init__() (trimesh.scene.lighting.spotlight method)": [[100, "trimesh.scene.lighting.SpotLight.__init__"]], "autolight() (in module trimesh.scene.lighting)": [[100, "trimesh.scene.lighting.autolight"]], "color (trimesh.scene.lighting.directionallight attribute)": [[100, "trimesh.scene.lighting.DirectionalLight.color"]], "color (trimesh.scene.lighting.light attribute)": [[100, "trimesh.scene.lighting.Light.color"]], "color (trimesh.scene.lighting.light property)": [[100, "id0"]], "color (trimesh.scene.lighting.pointlight attribute)": [[100, "trimesh.scene.lighting.PointLight.color"]], "color (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.color"]], "innerconeangle (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.innerConeAngle"]], "innerconeangle (trimesh.scene.lighting.spotlight property)": [[100, "id3"]], "intensity (trimesh.scene.lighting.directionallight attribute)": [[100, "trimesh.scene.lighting.DirectionalLight.intensity"]], "intensity (trimesh.scene.lighting.light attribute)": [[100, "trimesh.scene.lighting.Light.intensity"]], "intensity (trimesh.scene.lighting.light property)": [[100, "id1"]], "intensity (trimesh.scene.lighting.pointlight attribute)": [[100, "trimesh.scene.lighting.PointLight.intensity"]], "intensity (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.intensity"]], "name (trimesh.scene.lighting.directionallight attribute)": [[100, "trimesh.scene.lighting.DirectionalLight.name"]], "name (trimesh.scene.lighting.light attribute)": [[100, "trimesh.scene.lighting.Light.name"]], "name (trimesh.scene.lighting.pointlight attribute)": [[100, "trimesh.scene.lighting.PointLight.name"]], "name (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.name"]], "outerconeangle (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.outerConeAngle"]], "outerconeangle (trimesh.scene.lighting.spotlight property)": [[100, "id4"]], "radius (trimesh.scene.lighting.directionallight attribute)": [[100, "trimesh.scene.lighting.DirectionalLight.radius"]], "radius (trimesh.scene.lighting.light attribute)": [[100, "trimesh.scene.lighting.Light.radius"]], "radius (trimesh.scene.lighting.light property)": [[100, "id2"]], "radius (trimesh.scene.lighting.pointlight attribute)": [[100, "trimesh.scene.lighting.PointLight.radius"]], "radius (trimesh.scene.lighting.spotlight attribute)": [[100, "trimesh.scene.lighting.SpotLight.radius"]], "trimesh.scene.lighting": [[100, "module-trimesh.scene.lighting"]], "scene (class in trimesh.scene.scene)": [[101, "trimesh.scene.scene.Scene"]], "__init__() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.__init__"]], "add_geometry() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.add_geometry"]], "append_scenes() (in module trimesh.scene.scene)": [[101, "trimesh.scene.scene.append_scenes"]], "apply_transform() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.apply_transform"]], "area (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.area"]], "bounds (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.bounds"]], "bounds_corners (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.bounds_corners"]], "camera (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.camera"]], "camera_rays() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.camera_rays"]], "camera_transform (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.camera_transform"]], "centroid (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.centroid"]], "convert_units() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.convert_units"]], "convex_hull (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.convex_hull"]], "copy() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.copy"]], "deduplicated() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.deduplicated"]], "delete_geometry() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.delete_geometry"]], "dump() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.dump"]], "duplicate_nodes (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.duplicate_nodes"]], "explode() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.explode"]], "export() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.export"]], "extents (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.extents"]], "geometry_identifiers (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.geometry_identifiers"]], "has_camera (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.has_camera"]], "is_empty (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.is_empty"]], "is_valid (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.is_valid"]], "lights (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.lights"]], "rezero() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.rezero"]], "save_image() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.save_image"]], "scale (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.scale"]], "scaled() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.scaled"]], "set_camera() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.set_camera"]], "show() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.show"]], "split_scene() (in module trimesh.scene.scene)": [[101, "trimesh.scene.scene.split_scene"]], "strip_visuals() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.strip_visuals"]], "subscene() (trimesh.scene.scene.scene method)": [[101, "trimesh.scene.scene.Scene.subscene"]], "triangles (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.triangles"]], "triangles_node (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.triangles_node"]], "trimesh.scene.scene": [[101, "module-trimesh.scene.scene"]], "units (trimesh.scene.scene.scene property)": [[101, "trimesh.scene.scene.Scene.units"]], "enforcedforest (class in trimesh.scene.transforms)": [[102, "trimesh.scene.transforms.EnforcedForest"]], "scenegraph (class in trimesh.scene.transforms)": [[102, "trimesh.scene.transforms.SceneGraph"]], "__init__() (trimesh.scene.transforms.enforcedforest method)": [[102, "trimesh.scene.transforms.EnforcedForest.__init__"]], "__init__() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.__init__"]], "add_edge() (trimesh.scene.transforms.enforcedforest method)": [[102, "trimesh.scene.transforms.EnforcedForest.add_edge"]], "children (trimesh.scene.transforms.enforcedforest property)": [[102, "trimesh.scene.transforms.EnforcedForest.children"]], "clear() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.clear"]], "copy() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.copy"]], "from_edgelist() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.from_edgelist"]], "geometry_nodes (trimesh.scene.transforms.scenegraph property)": [[102, "trimesh.scene.transforms.SceneGraph.geometry_nodes"]], "get() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.get"]], "kwargs_to_matrix() (in module trimesh.scene.transforms)": [[102, "trimesh.scene.transforms.kwargs_to_matrix"]], "load() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.load"]], "nodes (trimesh.scene.transforms.enforcedforest property)": [[102, "trimesh.scene.transforms.EnforcedForest.nodes"]], "nodes (trimesh.scene.transforms.scenegraph property)": [[102, "trimesh.scene.transforms.SceneGraph.nodes"]], "nodes_geometry (trimesh.scene.transforms.scenegraph property)": [[102, "trimesh.scene.transforms.SceneGraph.nodes_geometry"]], "remove_geometries() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.remove_geometries"]], "remove_node() (trimesh.scene.transforms.enforcedforest method)": [[102, "trimesh.scene.transforms.EnforcedForest.remove_node"]], "shortest_path() (trimesh.scene.transforms.enforcedforest method)": [[102, "trimesh.scene.transforms.EnforcedForest.shortest_path"]], "show() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.show"]], "successors() (trimesh.scene.transforms.enforcedforest method)": [[102, "trimesh.scene.transforms.EnforcedForest.successors"]], "to_edgelist() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.to_edgelist"]], "to_flattened() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.to_flattened"]], "to_gltf() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.to_gltf"]], "to_networkx() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.to_networkx"]], "trimesh.scene.transforms": [[102, "module-trimesh.scene.transforms"]], "update() (trimesh.scene.transforms.scenegraph method)": [[102, "trimesh.scene.transforms.SceneGraph.update"]], "resolve() (in module trimesh.schemas)": [[103, "trimesh.schemas.resolve"]], "trimesh.schemas": [[103, "module-trimesh.schemas"]], "dilate_slope() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.dilate_slope"]], "filter_humphrey() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.filter_humphrey"]], "filter_laplacian() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.filter_laplacian"]], "filter_mut_dif_laplacian() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.filter_mut_dif_laplacian"]], "filter_taubin() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.filter_taubin"]], "get_vertices_normals() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.get_vertices_normals"]], "laplacian_calculation() (in module trimesh.smoothing)": [[104, "trimesh.smoothing.laplacian_calculation"]], "trimesh.smoothing": [[104, "module-trimesh.smoothing"]], "trimesh.transformations": [[105, "module-trimesh.transformations"]], "all_coplanar() (in module trimesh.triangles)": [[106, "trimesh.triangles.all_coplanar"]], "angles() (in module trimesh.triangles)": [[106, "trimesh.triangles.angles"]], "any_coplanar() (in module trimesh.triangles)": [[106, "trimesh.triangles.any_coplanar"]], "area() (in module trimesh.triangles)": [[106, "trimesh.triangles.area"]], "barycentric_to_points() (in module trimesh.triangles)": [[106, "trimesh.triangles.barycentric_to_points"]], "bounds_tree() (in module trimesh.triangles)": [[106, "trimesh.triangles.bounds_tree"]], "closest_point() (in module trimesh.triangles)": [[106, "trimesh.triangles.closest_point"]], "cross() (in module trimesh.triangles)": [[106, "trimesh.triangles.cross"]], "extents() (in module trimesh.triangles)": [[106, "trimesh.triangles.extents"]], "mass_properties() (in module trimesh.triangles)": [[106, "trimesh.triangles.mass_properties"]], "nondegenerate() (in module trimesh.triangles)": [[106, "trimesh.triangles.nondegenerate"]], "normals() (in module trimesh.triangles)": [[106, "trimesh.triangles.normals"]], "points_to_barycentric() (in module trimesh.triangles)": [[106, "trimesh.triangles.points_to_barycentric"]], "to_kwargs() (in module trimesh.triangles)": [[106, "trimesh.triangles.to_kwargs"]], "trimesh.triangles": [[106, "module-trimesh.triangles"]], "windings_aligned() (in module trimesh.triangles)": [[106, "trimesh.triangles.windings_aligned"]], "trimesh.units": [[107, "module-trimesh.units"]], "unit_conversion() (in module trimesh.units)": [[107, "trimesh.units.unit_conversion"]], "units_from_metadata() (in module trimesh.units)": [[107, "trimesh.units.units_from_metadata"]], "functionregistry (class in trimesh.util)": [[108, "trimesh.util.FunctionRegistry"]], "temporarydirectory (class in trimesh.util)": [[108, "trimesh.util.TemporaryDirectory"]], "__init__() (trimesh.util.functionregistry method)": [[108, "trimesh.util.FunctionRegistry.__init__"]], "allclose() (in module trimesh.util)": [[108, "trimesh.util.allclose"]], "append_faces() (in module trimesh.util)": [[108, "trimesh.util.append_faces"]], "array_to_encoded() (in module trimesh.util)": [[108, "trimesh.util.array_to_encoded"]], "array_to_string() (in module trimesh.util)": [[108, "trimesh.util.array_to_string"]], "attach_to_log() (in module trimesh.util)": [[108, "trimesh.util.attach_to_log"]], "bounds_tree() (in module trimesh.util)": [[108, "trimesh.util.bounds_tree"]], "comment_strip() (in module trimesh.util)": [[108, "trimesh.util.comment_strip"]], "compress() (in module trimesh.util)": [[108, "trimesh.util.compress"]], "concatenate() (in module trimesh.util)": [[108, "trimesh.util.concatenate"]], "convert_like() (in module trimesh.util)": [[108, "trimesh.util.convert_like"]], "decimal_to_digits() (in module trimesh.util)": [[108, "trimesh.util.decimal_to_digits"]], "decode_keys() (in module trimesh.util)": [[108, "trimesh.util.decode_keys"]], "decode_text() (in module trimesh.util)": [[108, "trimesh.util.decode_text"]], "decompress() (in module trimesh.util)": [[108, "trimesh.util.decompress"]], "diagonal_dot() (in module trimesh.util)": [[108, "trimesh.util.diagonal_dot"]], "distance_to_end() (in module trimesh.util)": [[108, "trimesh.util.distance_to_end"]], "encoded_to_array() (in module trimesh.util)": [[108, "trimesh.util.encoded_to_array"]], "euclidean() (in module trimesh.util)": [[108, "trimesh.util.euclidean"]], "generate_basis() (in module trimesh.util)": [[108, "trimesh.util.generate_basis"]], "grid_arange() (in module trimesh.util)": [[108, "trimesh.util.grid_arange"]], "grid_linspace() (in module trimesh.util)": [[108, "trimesh.util.grid_linspace"]], "has_module() (in module trimesh.util)": [[108, "trimesh.util.has_module"]], "is_binary_file() (in module trimesh.util)": [[108, "trimesh.util.is_binary_file"]], "is_ccw() (in module trimesh.util)": [[108, "trimesh.util.is_ccw"]], "is_file() (in module trimesh.util)": [[108, "trimesh.util.is_file"]], "is_instance_named() (in module trimesh.util)": [[108, "trimesh.util.is_instance_named"]], "is_none() (in module trimesh.util)": [[108, "trimesh.util.is_none"]], "is_pathlib() (in module trimesh.util)": [[108, "trimesh.util.is_pathlib"]], "is_sequence() (in module trimesh.util)": [[108, "trimesh.util.is_sequence"]], "is_shape() (in module trimesh.util)": [[108, "trimesh.util.is_shape"]], "is_string() (in module trimesh.util)": [[108, "trimesh.util.is_string"]], "isclose() (in module trimesh.util)": [[108, "trimesh.util.isclose"]], "jsonify() (in module trimesh.util)": [[108, "trimesh.util.jsonify"]], "make_sequence() (in module trimesh.util)": [[108, "trimesh.util.make_sequence"]], "multi_dict() (in module trimesh.util)": [[108, "trimesh.util.multi_dict"]], "pairwise() (in module trimesh.util)": [[108, "trimesh.util.pairwise"]], "row_norm() (in module trimesh.util)": [[108, "trimesh.util.row_norm"]], "sigfig_int() (in module trimesh.util)": [[108, "trimesh.util.sigfig_int"]], "sigfig_round() (in module trimesh.util)": [[108, "trimesh.util.sigfig_round"]], "spherical_to_vector() (in module trimesh.util)": [[108, "trimesh.util.spherical_to_vector"]], "split_extension() (in module trimesh.util)": [[108, "trimesh.util.split_extension"]], "stack_3d() (in module trimesh.util)": [[108, "trimesh.util.stack_3D"]], "stack_lines() (in module trimesh.util)": [[108, "trimesh.util.stack_lines"]], "structured_array_to_string() (in module trimesh.util)": [[108, "trimesh.util.structured_array_to_string"]], "submesh() (in module trimesh.util)": [[108, "trimesh.util.submesh"]], "to_ascii() (in module trimesh.util)": [[108, "trimesh.util.to_ascii"]], "tolist() (in module trimesh.util)": [[108, "trimesh.util.tolist"]], "triangle_strips_to_faces() (in module trimesh.util)": [[108, "trimesh.util.triangle_strips_to_faces"]], "trimesh.util": [[108, "module-trimesh.util"]], "type_bases() (in module trimesh.util)": [[108, "trimesh.util.type_bases"]], "type_named() (in module trimesh.util)": [[108, "trimesh.util.type_named"]], "unique_id() (in module trimesh.util)": [[108, "trimesh.util.unique_id"]], "unique_name() (in module trimesh.util)": [[108, "trimesh.util.unique_name"]], "unitize() (in module trimesh.util)": [[108, "trimesh.util.unitize"]], "vector_hemisphere() (in module trimesh.util)": [[108, "trimesh.util.vector_hemisphere"]], "vector_to_spherical() (in module trimesh.util)": [[108, "trimesh.util.vector_to_spherical"]], "vstack_empty() (in module trimesh.util)": [[108, "trimesh.util.vstack_empty"]], "wrap_as_stream() (in module trimesh.util)": [[108, "trimesh.util.wrap_as_stream"]], "write_encoded() (in module trimesh.util)": [[108, "trimesh.util.write_encoded"]], "zero_pad() (in module trimesh.util)": [[108, "trimesh.util.zero_pad"]], "trimesh.version": [[109, "module-trimesh.version"]], "sceneviewer (class in trimesh.viewer)": [[110, "trimesh.viewer.SceneViewer"]], "scenewidget (class in trimesh.viewer)": [[110, "trimesh.viewer.SceneWidget"]], "__init__() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.__init__"]], "__init__() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.__init__"]], "add_geometry() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.add_geometry"]], "cleanup_geometries() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.cleanup_geometries"]], "clear() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.clear"]], "do_claim() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.do_claim"]], "do_draw() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.do_draw"]], "do_regroup() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.do_regroup"]], "do_undraw() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.do_undraw"]], "flip() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.flip"]], "hide_geometry() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.hide_geometry"]], "in_notebook() (in module trimesh.viewer)": [[110, "trimesh.viewer.in_notebook"]], "init_gl() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.init_gl"]], "on_draw() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_draw"]], "on_key_press() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_key_press"]], "on_mouse_drag() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_mouse_drag"]], "on_mouse_drag() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.on_mouse_drag"]], "on_mouse_press() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_mouse_press"]], "on_mouse_press() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.on_mouse_press"]], "on_mouse_scroll() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_mouse_scroll"]], "on_mouse_scroll() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.on_mouse_scroll"]], "on_resize() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.on_resize"]], "render_scene() (in module trimesh.viewer)": [[110, "trimesh.viewer.render_scene"]], "reset_view() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.reset_view"]], "reset_view() (trimesh.viewer.scenewidget method)": [[110, "trimesh.viewer.SceneWidget.reset_view"]], "save_image() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.save_image"]], "scene_group (trimesh.viewer.scenewidget property)": [[110, "trimesh.viewer.SceneWidget.scene_group"]], "scene_to_html() (in module trimesh.viewer)": [[110, "trimesh.viewer.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer)": [[110, "trimesh.viewer.scene_to_notebook"]], "toggle_axis() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.toggle_axis"]], "toggle_culling() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.toggle_culling"]], "toggle_fullscreen() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.toggle_fullscreen"]], "toggle_grid() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.toggle_grid"]], "toggle_wireframe() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.toggle_wireframe"]], "trimesh.viewer": [[110, "module-trimesh.viewer"]], "unhide_geometry() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.unhide_geometry"]], "update_flags() (trimesh.viewer.sceneviewer method)": [[110, "trimesh.viewer.SceneViewer.update_flags"]], "in_notebook() (in module trimesh.viewer.notebook)": [[111, "trimesh.viewer.notebook.in_notebook"]], "scene_to_html() (in module trimesh.viewer.notebook)": [[111, "trimesh.viewer.notebook.scene_to_html"]], "scene_to_notebook() (in module trimesh.viewer.notebook)": [[111, "trimesh.viewer.notebook.scene_to_notebook"]], "trimesh.viewer.notebook": [[111, "module-trimesh.viewer.notebook"]], "state_pan (trimesh.viewer.trackball.trackball attribute)": [[112, "trimesh.viewer.trackball.Trackball.STATE_PAN"]], "state_roll (trimesh.viewer.trackball.trackball attribute)": [[112, "trimesh.viewer.trackball.Trackball.STATE_ROLL"]], "state_rotate (trimesh.viewer.trackball.trackball attribute)": [[112, "trimesh.viewer.trackball.Trackball.STATE_ROTATE"]], "state_zoom (trimesh.viewer.trackball.trackball attribute)": [[112, "trimesh.viewer.trackball.Trackball.STATE_ZOOM"]], "trackball (class in trimesh.viewer.trackball)": [[112, "trimesh.viewer.trackball.Trackball"]], "__init__() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.__init__"]], "down() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.down"]], "drag() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.drag"]], "pose (trimesh.viewer.trackball.trackball property)": [[112, "trimesh.viewer.trackball.Trackball.pose"]], "resize() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.resize"]], "rotate() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.rotate"]], "scroll() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.scroll"]], "set_state() (trimesh.viewer.trackball.trackball method)": [[112, "trimesh.viewer.trackball.Trackball.set_state"]], "trimesh.viewer.trackball": [[112, "module-trimesh.viewer.trackball"]], "meshgroup (class in trimesh.viewer.widget)": [[113, "trimesh.viewer.widget.MeshGroup"]], "scenegroup (class in trimesh.viewer.widget)": [[113, "trimesh.viewer.widget.SceneGroup"]], "scenewidget (class in trimesh.viewer.widget)": [[113, "trimesh.viewer.widget.SceneWidget"]], "__init__() (trimesh.viewer.widget.meshgroup method)": [[113, "trimesh.viewer.widget.MeshGroup.__init__"]], "__init__() (trimesh.viewer.widget.scenegroup method)": [[113, "trimesh.viewer.widget.SceneGroup.__init__"]], "__init__() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.__init__"]], "clear() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.clear"]], "do_claim() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.do_claim"]], "do_draw() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.do_draw"]], "do_regroup() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.do_regroup"]], "do_undraw() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.do_undraw"]], "on_mouse_drag() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.on_mouse_drag"]], "on_mouse_press() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.on_mouse_press"]], "on_mouse_scroll() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.on_mouse_scroll"]], "reset_view() (trimesh.viewer.widget.scenewidget method)": [[113, "trimesh.viewer.widget.SceneWidget.reset_view"]], "scene_group (trimesh.viewer.widget.scenewidget property)": [[113, "trimesh.viewer.widget.SceneWidget.scene_group"]], "set_state() (trimesh.viewer.widget.meshgroup method)": [[113, "trimesh.viewer.widget.MeshGroup.set_state"]], "set_state() (trimesh.viewer.widget.scenegroup method)": [[113, "trimesh.viewer.widget.SceneGroup.set_state"]], "trimesh.viewer.widget": [[113, "module-trimesh.viewer.widget"]], "unset_state() (trimesh.viewer.widget.meshgroup method)": [[113, "trimesh.viewer.widget.MeshGroup.unset_state"]], "unset_state() (trimesh.viewer.widget.scenegroup method)": [[113, "trimesh.viewer.widget.SceneGroup.unset_state"]], "sceneviewer (class in trimesh.viewer.windowed)": [[114, "trimesh.viewer.windowed.SceneViewer"]], "__init__() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.__init__"]], "add_geometry() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.add_geometry"]], "cleanup_geometries() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.cleanup_geometries"]], "flip() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.flip"]], "geometry_hash() (in module trimesh.viewer.windowed)": [[114, "trimesh.viewer.windowed.geometry_hash"]], "hide_geometry() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.hide_geometry"]], "init_gl() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.init_gl"]], "on_draw() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_draw"]], "on_key_press() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_key_press"]], "on_mouse_drag() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_mouse_drag"]], "on_mouse_press() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_mouse_press"]], "on_mouse_scroll() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_mouse_scroll"]], "on_resize() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.on_resize"]], "render_scene() (in module trimesh.viewer.windowed)": [[114, "trimesh.viewer.windowed.render_scene"]], "reset_view() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.reset_view"]], "save_image() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.save_image"]], "toggle_axis() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.toggle_axis"]], "toggle_culling() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.toggle_culling"]], "toggle_fullscreen() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.toggle_fullscreen"]], "toggle_grid() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.toggle_grid"]], "toggle_wireframe() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.toggle_wireframe"]], "trimesh.viewer.windowed": [[114, "module-trimesh.viewer.windowed"]], "unhide_geometry() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.unhide_geometry"]], "update_flags() (trimesh.viewer.windowed.sceneviewer method)": [[114, "trimesh.viewer.windowed.SceneViewer.update_flags"]], "colorvisuals (class in trimesh.visual)": [[115, "trimesh.visual.ColorVisuals"]], "texturevisuals (class in trimesh.visual)": [[115, "trimesh.visual.TextureVisuals"]], "__init__() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.__init__"]], "__init__() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.concatenate"]], "copy() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.copy"]], "copy() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.copy"]], "create_visual() (in module trimesh.visual)": [[115, "trimesh.visual.create_visual"]], "defined (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.defined"]], "defined (trimesh.visual.texturevisuals property)": [[115, "trimesh.visual.TextureVisuals.defined"]], "face_colors (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.face_subset"]], "face_subset() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.face_subset"]], "interpolate() (in module trimesh.visual)": [[115, "trimesh.visual.interpolate"]], "kind (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.kind"]], "kind (trimesh.visual.texturevisuals property)": [[115, "trimesh.visual.TextureVisuals.kind"]], "linear_color_map() (in module trimesh.visual)": [[115, "trimesh.visual.linear_color_map"]], "main_color (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual)": [[115, "trimesh.visual.random_color"]], "to_color() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.to_color"]], "to_rgba() (in module trimesh.visual)": [[115, "trimesh.visual.to_rgba"]], "to_texture() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.to_texture"]], "transparency (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.transparency"]], "trimesh.visual": [[115, "module-trimesh.visual"]], "update_faces() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.colorvisuals method)": [[115, "trimesh.visual.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.texturevisuals method)": [[115, "trimesh.visual.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texturevisuals property)": [[115, "trimesh.visual.TextureVisuals.uv"]], "uv_to_color() (in module trimesh.visual)": [[115, "trimesh.visual.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual)": [[115, "trimesh.visual.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.colorvisuals property)": [[115, "trimesh.visual.ColorVisuals.vertex_colors"]], "visuals (class in trimesh.visual.base)": [[116, "trimesh.visual.base.Visuals"]], "concatenate() (trimesh.visual.base.visuals method)": [[116, "trimesh.visual.base.Visuals.concatenate"]], "copy() (trimesh.visual.base.visuals method)": [[116, "trimesh.visual.base.Visuals.copy"]], "kind (trimesh.visual.base.visuals property)": [[116, "trimesh.visual.base.Visuals.kind"]], "trimesh.visual.base": [[116, "module-trimesh.visual.base"]], "update_faces() (trimesh.visual.base.visuals method)": [[116, "trimesh.visual.base.Visuals.update_faces"]], "update_vertices() (trimesh.visual.base.visuals method)": [[116, "trimesh.visual.base.Visuals.update_vertices"]], "colorvisuals (class in trimesh.visual.color)": [[117, "trimesh.visual.color.ColorVisuals"]], "vertexcolor (class in trimesh.visual.color)": [[117, "trimesh.visual.color.VertexColor"]], "__init__() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.__init__"]], "__init__() (trimesh.visual.color.vertexcolor method)": [[117, "trimesh.visual.color.VertexColor.__init__"]], "colors_to_materials() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.colors_to_materials"]], "concatenate() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.concatenate"]], "concatenate() (trimesh.visual.color.vertexcolor method)": [[117, "trimesh.visual.color.VertexColor.concatenate"]], "copy() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.copy"]], "copy() (trimesh.visual.color.vertexcolor method)": [[117, "trimesh.visual.color.VertexColor.copy"]], "defined (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.defined"]], "face_colors (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.face_colors"]], "face_subset() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.face_subset"]], "face_to_vertex_color() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.face_to_vertex_color"]], "hex_to_rgba() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.hex_to_rgba"]], "interpolate() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.interpolate"]], "kind (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.kind"]], "kind (trimesh.visual.color.vertexcolor property)": [[117, "trimesh.visual.color.VertexColor.kind"]], "linear_color_map() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.linear_color_map"]], "main_color (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.main_color"]], "random_color() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.random_color"]], "to_float() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.to_float"]], "to_rgba() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.to_rgba"]], "to_texture() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.to_texture"]], "transparency (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.transparency"]], "trimesh.visual.color": [[117, "module-trimesh.visual.color"]], "update_faces() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.update_faces"]], "update_faces() (trimesh.visual.color.vertexcolor method)": [[117, "trimesh.visual.color.VertexColor.update_faces"]], "update_vertices() (trimesh.visual.color.colorvisuals method)": [[117, "trimesh.visual.color.ColorVisuals.update_vertices"]], "update_vertices() (trimesh.visual.color.vertexcolor method)": [[117, "trimesh.visual.color.VertexColor.update_vertices"]], "uv_to_color() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.uv_to_color"]], "uv_to_interpolated_color() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.uv_to_interpolated_color"]], "vertex_colors (trimesh.visual.color.colorvisuals property)": [[117, "trimesh.visual.color.ColorVisuals.vertex_colors"]], "vertex_colors (trimesh.visual.color.vertexcolor property)": [[117, "trimesh.visual.color.VertexColor.vertex_colors"]], "vertex_to_face_color() (in module trimesh.visual.color)": [[117, "trimesh.visual.color.vertex_to_face_color"]], "material (class in trimesh.visual.material)": [[118, "trimesh.visual.material.Material"]], "multimaterial (class in trimesh.visual.material)": [[118, "trimesh.visual.material.MultiMaterial"]], "pbrmaterial (class in trimesh.visual.material)": [[118, "trimesh.visual.material.PBRMaterial"]], "simplematerial (class in trimesh.visual.material)": [[118, "trimesh.visual.material.SimpleMaterial"]], "__init__() (trimesh.visual.material.material method)": [[118, "trimesh.visual.material.Material.__init__"]], "__init__() (trimesh.visual.material.multimaterial method)": [[118, "trimesh.visual.material.MultiMaterial.__init__"]], "__init__() (trimesh.visual.material.pbrmaterial method)": [[118, "trimesh.visual.material.PBRMaterial.__init__"]], "__init__() (trimesh.visual.material.simplematerial method)": [[118, "trimesh.visual.material.SimpleMaterial.__init__"]], "add() (trimesh.visual.material.multimaterial method)": [[118, "trimesh.visual.material.MultiMaterial.add"]], "alphacutoff (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.alphaCutoff"]], "alphamode (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.alphaMode"]], "basecolorfactor (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.baseColorFactor"]], "basecolortexture (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.baseColorTexture"]], "copy() (trimesh.visual.material.material method)": [[118, "trimesh.visual.material.Material.copy"]], "copy() (trimesh.visual.material.pbrmaterial method)": [[118, "trimesh.visual.material.PBRMaterial.copy"]], "doublesided (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.doubleSided"]], "emissivefactor (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.emissiveFactor"]], "empty_material() (in module trimesh.visual.material)": [[118, "trimesh.visual.material.empty_material"]], "from_color() (in module trimesh.visual.material)": [[118, "trimesh.visual.material.from_color"]], "get() (trimesh.visual.material.multimaterial method)": [[118, "trimesh.visual.material.MultiMaterial.get"]], "glossiness (trimesh.visual.material.simplematerial property)": [[118, "trimesh.visual.material.SimpleMaterial.glossiness"]], "main_color (trimesh.visual.material.material property)": [[118, "trimesh.visual.material.Material.main_color"]], "main_color (trimesh.visual.material.multimaterial property)": [[118, "trimesh.visual.material.MultiMaterial.main_color"]], "main_color (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.main_color"]], "main_color (trimesh.visual.material.simplematerial property)": [[118, "trimesh.visual.material.SimpleMaterial.main_color"]], "metallicfactor (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.metallicFactor"]], "name (trimesh.visual.material.material property)": [[118, "trimesh.visual.material.Material.name"]], "pack() (in module trimesh.visual.material)": [[118, "trimesh.visual.material.pack"]], "roughnessfactor (trimesh.visual.material.pbrmaterial property)": [[118, "trimesh.visual.material.PBRMaterial.roughnessFactor"]], "to_color() (trimesh.visual.material.pbrmaterial method)": [[118, "trimesh.visual.material.PBRMaterial.to_color"]], "to_color() (trimesh.visual.material.simplematerial method)": [[118, "trimesh.visual.material.SimpleMaterial.to_color"]], "to_obj() (trimesh.visual.material.simplematerial method)": [[118, "trimesh.visual.material.SimpleMaterial.to_obj"]], "to_pbr() (trimesh.visual.material.multimaterial method)": [[118, "trimesh.visual.material.MultiMaterial.to_pbr"]], "to_pbr() (trimesh.visual.material.simplematerial method)": [[118, "trimesh.visual.material.SimpleMaterial.to_pbr"]], "to_simple() (trimesh.visual.material.pbrmaterial method)": [[118, "trimesh.visual.material.PBRMaterial.to_simple"]], "trimesh.visual.material": [[118, "module-trimesh.visual.material"]], "concatenate() (in module trimesh.visual.objects)": [[119, "trimesh.visual.objects.concatenate"]], "create_visual() (in module trimesh.visual.objects)": [[119, "trimesh.visual.objects.create_visual"]], "trimesh.visual.objects": [[119, "module-trimesh.visual.objects"]], "texturevisuals (class in trimesh.visual.texture)": [[120, "trimesh.visual.texture.TextureVisuals"]], "__init__() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.__init__"]], "concatenate() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.concatenate"]], "copy() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.copy"]], "defined (trimesh.visual.texture.texturevisuals property)": [[120, "trimesh.visual.texture.TextureVisuals.defined"]], "face_subset() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.face_subset"]], "kind (trimesh.visual.texture.texturevisuals property)": [[120, "trimesh.visual.texture.TextureVisuals.kind"]], "power_resize() (in module trimesh.visual.texture)": [[120, "trimesh.visual.texture.power_resize"]], "to_color() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.to_color"]], "trimesh.visual.texture": [[120, "module-trimesh.visual.texture"]], "unmerge_faces() (in module trimesh.visual.texture)": [[120, "trimesh.visual.texture.unmerge_faces"]], "update_faces() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.update_faces"]], "update_vertices() (trimesh.visual.texture.texturevisuals method)": [[120, "trimesh.visual.texture.TextureVisuals.update_vertices"]], "uv (trimesh.visual.texture.texturevisuals property)": [[120, "trimesh.visual.texture.TextureVisuals.uv"]], "voxelgrid (class in trimesh.voxel)": [[121, "trimesh.voxel.VoxelGrid"]], "__init__() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.bounds"]], "copy() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.copy"]], "crc() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.crc"]], "element_volume (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.encoding"]], "export() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.export"]], "extents (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.extents"]], "fill() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.fill"]], "filled_count (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.filled_count"]], "hash() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.hash"]], "hollow() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.matrix"]], "origin (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.origin"]], "pitch (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.pitch"]], "points (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.scale"]], "shape (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.shape"]], "show() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.voxelgrid method)": [[121, "trimesh.voxel.VoxelGrid.strip"]], "transform (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.transform"]], "translation (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.translation"]], "trimesh.voxel": [[121, "module-trimesh.voxel"]], "volume (trimesh.voxel.voxelgrid property)": [[121, "trimesh.voxel.VoxelGrid.volume"]], "voxelgrid (class in trimesh.voxel.base)": [[122, "trimesh.voxel.base.VoxelGrid"]], "__init__() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.__init__"]], "apply_transform() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.apply_transform"]], "as_boxes() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.as_boxes"]], "bounds (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.bounds"]], "copy() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.copy"]], "crc() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.crc"]], "element_volume (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.element_volume"]], "encoding (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.encoding"]], "export() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.export"]], "extents (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.extents"]], "fill() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.fill"]], "filled_count (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.filled_count"]], "hash() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.hash"]], "hollow() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.hollow"]], "indices_to_points() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.indices_to_points"]], "is_empty (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.is_empty"]], "is_filled() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.is_filled"]], "marching_cubes (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.marching_cubes"]], "matrix (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.matrix"]], "origin (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.origin"]], "pitch (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.pitch"]], "points (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.points"]], "points_to_indices() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.points_to_indices"]], "revoxelized() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.revoxelized"]], "scale (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.scale"]], "shape (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.shape"]], "show() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.show"]], "sparse_indices (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.sparse_indices"]], "strip() (trimesh.voxel.base.voxelgrid method)": [[122, "trimesh.voxel.base.VoxelGrid.strip"]], "transform (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.transform"]], "translation (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.translation"]], "trimesh.voxel.base": [[122, "module-trimesh.voxel.base"]], "volume (trimesh.voxel.base.voxelgrid property)": [[122, "trimesh.voxel.base.VoxelGrid.volume"]], "local_voxelize() (in module trimesh.voxel.creation)": [[123, "trimesh.voxel.creation.local_voxelize"]], "trimesh.voxel.creation": [[123, "module-trimesh.voxel.creation"]], "voxelize() (in module trimesh.voxel.creation)": [[123, "trimesh.voxel.creation.voxelize"]], "binaryrunlengthencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding"]], "denseencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.DenseEncoding"]], "encoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.Encoding"]], "flattenedencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.FlattenedEncoding"]], "flippedencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.FlippedEncoding"]], "lazyindexmap (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.LazyIndexMap"]], "runlengthencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.RunLengthEncoding"]], "shapedencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.ShapedEncoding"]], "sparsebinaryencoding() (in module trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.SparseBinaryEncoding"]], "sparseencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.SparseEncoding"]], "transposedencoding (class in trimesh.voxel.encoding)": [[124, "trimesh.voxel.encoding.TransposedEncoding"]], "__init__() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.__init__"]], "__init__() (trimesh.voxel.encoding.flippedencoding method)": [[124, "trimesh.voxel.encoding.FlippedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.shapedencoding method)": [[124, "trimesh.voxel.encoding.ShapedEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.sparseencoding method)": [[124, "trimesh.voxel.encoding.SparseEncoding.__init__"]], "__init__() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.__init__"]], "binary_run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.binary_run_length_data"]], "binary_run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.binary_run_length_data"]], "copy() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.copy"]], "copy() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.copy"]], "copy() (trimesh.voxel.encoding.flattenedencoding method)": [[124, "trimesh.voxel.encoding.FlattenedEncoding.copy"]], "copy() (trimesh.voxel.encoding.flippedencoding method)": [[124, "trimesh.voxel.encoding.FlippedEncoding.copy"]], "copy() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.copy"]], "copy() (trimesh.voxel.encoding.shapedencoding method)": [[124, "trimesh.voxel.encoding.ShapedEncoding.copy"]], "copy() (trimesh.voxel.encoding.sparseencoding method)": [[124, "trimesh.voxel.encoding.SparseEncoding.copy"]], "copy() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.copy"]], "crc() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.crc"]], "crc() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.crc"]], "data (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.data"]], "data (trimesh.voxel.encoding.transposedencoding property)": [[124, "trimesh.voxel.encoding.TransposedEncoding.data"]], "dense (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.dense"]], "dense (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.dense"]], "dense (trimesh.voxel.encoding.flattenedencoding property)": [[124, "trimesh.voxel.encoding.FlattenedEncoding.dense"]], "dense (trimesh.voxel.encoding.flippedencoding property)": [[124, "trimesh.voxel.encoding.FlippedEncoding.dense"]], "dense (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.dense"]], "dense (trimesh.voxel.encoding.shapedencoding property)": [[124, "trimesh.voxel.encoding.ShapedEncoding.dense"]], "dense (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.dense"]], "dense (trimesh.voxel.encoding.transposedencoding property)": [[124, "trimesh.voxel.encoding.TransposedEncoding.dense"]], "dtype (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.dtype"]], "dtype (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.dtype"]], "dtype (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.dtype"]], "dtype (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.dtype"]], "dtype (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.dtype"]], "flat (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.flat"]], "flat (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.flat"]], "flat (trimesh.voxel.encoding.flattenedencoding property)": [[124, "trimesh.voxel.encoding.FlattenedEncoding.flat"]], "flat (trimesh.voxel.encoding.shapedencoding property)": [[124, "trimesh.voxel.encoding.ShapedEncoding.flat"]], "flip() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.flip"]], "flip() (trimesh.voxel.encoding.flippedencoding method)": [[124, "trimesh.voxel.encoding.FlippedEncoding.flip"]], "from_brle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_brle"]], "from_brle() (trimesh.voxel.encoding.runlengthencoding static method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.from_brle"]], "from_dense() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.runlengthencoding static method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.from_dense"]], "from_dense() (trimesh.voxel.encoding.sparseencoding static method)": [[124, "trimesh.voxel.encoding.SparseEncoding.from_dense"]], "from_rle() (trimesh.voxel.encoding.binaryrunlengthencoding static method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.from_rle"]], "from_rle() (trimesh.voxel.encoding.runlengthencoding static method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.from_rle"]], "gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.gather"]], "gather() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.gather"]], "gather() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.gather"]], "gather_nd() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.lazyindexmap method)": [[124, "trimesh.voxel.encoding.LazyIndexMap.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.gather_nd"]], "gather_nd() (trimesh.voxel.encoding.sparseencoding method)": [[124, "trimesh.voxel.encoding.SparseEncoding.gather_nd"]], "get_value() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.get_value"]], "get_value() (trimesh.voxel.encoding.lazyindexmap method)": [[124, "trimesh.voxel.encoding.LazyIndexMap.get_value"]], "get_value() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.sparseencoding method)": [[124, "trimesh.voxel.encoding.SparseEncoding.get_value"]], "get_value() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.get_value"]], "hash() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.hash"]], "hash() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.hash"]], "is_empty (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.is_empty"]], "is_empty (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.is_empty"]], "is_empty (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.is_empty"]], "is_empty (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.is_empty"]], "mask() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.mask"]], "mask() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.mask"]], "mask() (trimesh.voxel.encoding.flattenedencoding method)": [[124, "trimesh.voxel.encoding.FlattenedEncoding.mask"]], "mask() (trimesh.voxel.encoding.flippedencoding method)": [[124, "trimesh.voxel.encoding.FlippedEncoding.mask"]], "mask() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.mask"]], "mask() (trimesh.voxel.encoding.shapedencoding method)": [[124, "trimesh.voxel.encoding.ShapedEncoding.mask"]], "mask() (trimesh.voxel.encoding.sparseencoding method)": [[124, "trimesh.voxel.encoding.SparseEncoding.mask"]], "mask() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.mask"]], "mutable (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.mutable"]], "ndims (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.ndims"]], "ndims (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.ndims"]], "ndims (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.ndims"]], "perm (trimesh.voxel.encoding.transposedencoding property)": [[124, "trimesh.voxel.encoding.TransposedEncoding.perm"]], "reshape() (trimesh.voxel.encoding.denseencoding method)": [[124, "trimesh.voxel.encoding.DenseEncoding.reshape"]], "reshape() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.reshape"]], "run_length_data() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.run_length_data"]], "run_length_data() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.run_length_data"]], "shape (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.shape"]], "shape (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.shape"]], "shape (trimesh.voxel.encoding.flattenedencoding property)": [[124, "trimesh.voxel.encoding.FlattenedEncoding.shape"]], "shape (trimesh.voxel.encoding.flippedencoding property)": [[124, "trimesh.voxel.encoding.FlippedEncoding.shape"]], "shape (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.shape"]], "shape (trimesh.voxel.encoding.shapedencoding property)": [[124, "trimesh.voxel.encoding.ShapedEncoding.shape"]], "shape (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.shape"]], "shape (trimesh.voxel.encoding.transposedencoding property)": [[124, "trimesh.voxel.encoding.TransposedEncoding.shape"]], "size (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.size"]], "size (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.size"]], "size (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.size"]], "size (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.size"]], "size (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.size"]], "size (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.size"]], "sorted_gather() (trimesh.voxel.encoding.binaryrunlengthencoding method)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sorted_gather"]], "sorted_gather() (trimesh.voxel.encoding.runlengthencoding method)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.sorted_gather"]], "sparse_components (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.sparse_components"]], "sparse_components (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.sparse_components"]], "sparse_indices (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.sparse_indices"]], "sparse_indices (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.sparse_indices"]], "sparse_values (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.sparse_values"]], "sparse_values (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.sparse_values"]], "sparse_values (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.sparse_values"]], "stripped (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.stripped"]], "stripped (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.stripped"]], "stripped (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.stripped"]], "sum (trimesh.voxel.encoding.binaryrunlengthencoding property)": [[124, "trimesh.voxel.encoding.BinaryRunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.denseencoding property)": [[124, "trimesh.voxel.encoding.DenseEncoding.sum"]], "sum (trimesh.voxel.encoding.encoding property)": [[124, "trimesh.voxel.encoding.Encoding.sum"]], "sum (trimesh.voxel.encoding.lazyindexmap property)": [[124, "trimesh.voxel.encoding.LazyIndexMap.sum"]], "sum (trimesh.voxel.encoding.runlengthencoding property)": [[124, "trimesh.voxel.encoding.RunLengthEncoding.sum"]], "sum (trimesh.voxel.encoding.sparseencoding property)": [[124, "trimesh.voxel.encoding.SparseEncoding.sum"]], "transpose() (trimesh.voxel.encoding.encoding method)": [[124, "trimesh.voxel.encoding.Encoding.transpose"]], "transpose() (trimesh.voxel.encoding.transposedencoding method)": [[124, "trimesh.voxel.encoding.TransposedEncoding.transpose"]], "trimesh.voxel.encoding": [[124, "module-trimesh.voxel.encoding"]], "binary_closing() (in module trimesh.voxel.morphology)": [[125, "trimesh.voxel.morphology.binary_closing"]], "binary_dilation() (in module trimesh.voxel.morphology)": [[125, "trimesh.voxel.morphology.binary_dilation"]], "fill() (in module trimesh.voxel.morphology)": [[125, "trimesh.voxel.morphology.fill"]], "surface() (in module trimesh.voxel.morphology)": [[125, "trimesh.voxel.morphology.surface"]], "trimesh.voxel.morphology": [[125, "module-trimesh.voxel.morphology"]], "boolean_sparse() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.boolean_sparse"]], "fill_base() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.fill_base"]], "fill_orthographic() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.fill_orthographic"]], "fill_voxelization() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.fill_voxelization"]], "indices_to_points() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.indices_to_points"]], "matrix_to_marching_cubes() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.matrix_to_marching_cubes"]], "matrix_to_points() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.matrix_to_points"]], "multibox() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.multibox"]], "points_to_indices() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.points_to_indices"]], "points_to_marching_cubes() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.points_to_marching_cubes"]], "sparse_to_matrix() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.sparse_to_matrix"]], "strip_array() (in module trimesh.voxel.ops)": [[126, "trimesh.voxel.ops.strip_array"]], "trimesh.voxel.ops": [[126, "module-trimesh.voxel.ops"]], "brle_gather_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_gather_1d"]], "brle_gatherer_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_gatherer_1d"]], "brle_length() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_length"]], "brle_logical_not() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_logical_not"]], "brle_mask() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_mask"]], "brle_reverse() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_reverse"]], "brle_strip() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_strip"]], "brle_to_brle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_to_brle"]], "brle_to_dense() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_to_dense"]], "brle_to_rle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_to_rle"]], "brle_to_sparse() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.brle_to_sparse"]], "dense_to_brle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.dense_to_brle"]], "dense_to_rle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.dense_to_rle"]], "merge_brle_lengths() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.merge_brle_lengths"]], "merge_rle_lengths() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.merge_rle_lengths"]], "rle_gather_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_gather_1d"]], "rle_gatherer_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_gatherer_1d"]], "rle_length() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_length"]], "rle_mask() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_mask"]], "rle_reverse() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_reverse"]], "rle_strip() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_strip"]], "rle_to_brle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_to_brle"]], "rle_to_dense() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_to_dense"]], "rle_to_rle() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_to_rle"]], "rle_to_sparse() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.rle_to_sparse"]], "sorted_brle_gather_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.sorted_brle_gather_1d"]], "sorted_rle_gather_1d() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.sorted_rle_gather_1d"]], "split_long_brle_lengths() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.split_long_brle_lengths"]], "split_long_rle_lengths() (in module trimesh.voxel.runlength)": [[127, "trimesh.voxel.runlength.split_long_rle_lengths"]], "trimesh.voxel.runlength": [[127, "module-trimesh.voxel.runlength"]], "transform (class in trimesh.voxel.transforms)": [[128, "trimesh.voxel.transforms.Transform"]], "__init__() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.__init__"]], "apply_scale() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.apply_scale"]], "apply_transform() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.apply_transform"]], "apply_translation() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.apply_translation"]], "copy() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.copy"]], "crc() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.crc"]], "hash() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.hash"]], "inverse_matrix (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.inverse_matrix"]], "inverse_transform_points() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.inverse_transform_points"]], "is_identity (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.is_identity"]], "matrix (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.matrix"]], "pitch (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.pitch"]], "scale (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.scale"]], "transform_points() (trimesh.voxel.transforms.transform method)": [[128, "trimesh.voxel.transforms.Transform.transform_points"]], "translation (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.translation"]], "trimesh.voxel.transforms": [[128, "module-trimesh.voxel.transforms"]], "unit_volume (trimesh.voxel.transforms.transform property)": [[128, "trimesh.voxel.transforms.Transform.unit_volume"]]}})